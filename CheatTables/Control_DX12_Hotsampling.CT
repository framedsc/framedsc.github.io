<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="34">
  <CheatEntries>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Enable Hotsampling"</Description>
      <Options moAlwaysHideChildren="1" moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"write render res 2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// By Otis_Inf and Hattiwatti
// Updated by ghostinthecamera
// See for info about locations/data:
// https://github.com/FransBouma/InjectableGenericCameraSystem/blob/master/Notes/Control.txt
//////////////////////////////////////////////////////////
// FRAMED Screenshot Community. https://framedsc.github.io
//////////////////////////////////////////////////////////

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(writerenderres,coregame_rmdwin10_f.dll,89 84 24 x x x x E8 x x x x 48 8B 9C 24 x x x x) // should be unique
registersymbol(writerenderres)
alloc(newmem,$1000,"coregame_rmdwin10_f.dll"+AC54C)
//
alloc(hookreturn,7)
registersymbol(hookreturn)
//
label(code)
label(return)

newmem:

code:
  // hard-write the resolution back instead of the original code which writes the results of calculations to the addresses
  // in the stackframe. Do this at width+8 and height+8, so
  mov [rsp+00000084],eax   // screen height. (screenwidth is at 80)
  cvttss2si eax, [rdi+04]
  mov [rsp+88], eax        // rendering width,
  cvttss2si eax, [rdi+08]
  mov [rsp+8C], eax        // rendering height
  jmp return

hookreturn:
readmem(writerenderres,7)

writerenderres:
  jmp newmem
  nop 2
return:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
writerenderres:
readmem(hookreturn,7)

unregistersymbol(hookreturn)
unregistersymbol(writerenderres)
dealloc(hookreturn)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "coregame_rmdwin10_f.dll"+AC54C

"coregame_rmdwin10_f.dll"+AC50A: 0F 29 4C 24 50              -  movaps [rsp+50],xmm1
"coregame_rmdwin10_f.dll"+AC50F: 0F 10 8B D0 00 00 00        -  movups xmm1,[rbx+000000D0]
"coregame_rmdwin10_f.dll"+AC516: 0F 29 44 24 60              -  movaps [rsp+60],xmm0
"coregame_rmdwin10_f.dll"+AC51B: 0F 10 83 E0 00 00 00        -  movups xmm0,[rbx+000000E0]
"coregame_rmdwin10_f.dll"+AC522: 0F 29 4C 24 70              -  movaps [rsp+70],xmm1
"coregame_rmdwin10_f.dll"+AC527: F2 0F 10 8B F0 00 00 00     -  movsd xmm1,[rbx+000000F0]
"coregame_rmdwin10_f.dll"+AC52F: 0F 29 84 24 80 00 00 00     -  movaps [rsp+00000080],xmm0
"coregame_rmdwin10_f.dll"+AC537: 89 84 24 80 00 00 00        -  mov [rsp+00000080],eax
"coregame_rmdwin10_f.dll"+AC53E: F3 0F 2C 47 08              -  cvttss2si eax,[rdi+08]
"coregame_rmdwin10_f.dll"+AC543: F2 0F 11 8C 24 90 00 00 00  -  movsd [rsp+00000090],xmm1
// ---------- INJECTING HERE ----------
"coregame_rmdwin10_f.dll"+AC54C: 89 84 24 84 00 00 00        -  mov [rsp+00000084],eax
// ---------- DONE INJECTING  ----------
"coregame_rmdwin10_f.dll"+AC553: E8 28 02 00 00              -  call coregame_rmdwin10_f.dll+AC780
"coregame_rmdwin10_f.dll"+AC558: 48 8B 9C 24 B0 00 00 00     -  mov rbx,[rsp+000000B0]
"coregame_rmdwin10_f.dll"+AC560: B0 01                       -  mov al,01
"coregame_rmdwin10_f.dll"+AC562: 48 81 C4 A0 00 00 00        -  add rsp,000000A0
"coregame_rmdwin10_f.dll"+AC569: 5F                          -  pop rdi
"coregame_rmdwin10_f.dll"+AC56A: C3                          -  ret 
"coregame_rmdwin10_f.dll"+AC56B: CC                          -  int 3 
"coregame_rmdwin10_f.dll"+AC56C: CC                          -  int 3 
"coregame_rmdwin10_f.dll"+AC56D: CC                          -  int 3 
"coregame_rmdwin10_f.dll"+AC56E: CC                          -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"lost focus pause removal"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// By Otis_Inf and Hattiwatti
// Updated by ghostinthecamera
// See for info about locations/data:
// https://github.com/FransBouma/InjectableGenericCameraSystem/blob/master/Notes/Control.txt
//////////////////////////////////////////////////////////
// FRAMED Screenshot Community. https://framedsc.github.io
//////////////////////////////////////////////////////////
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(LostFocusPause,coregame_rmdwin10_f.dll,44 88 41 x 48 8B 10 44 88 42 x) // should be unique
registersymbol(LostFocusPause)
alloc(newmem,$1000,"coregame_rmdwin10_f.dll"+AC26E)
//
alloc(hookreturnB,7)
registersymbol(hookreturnB)
//
label(code)
label(return)

newmem:

code:
  mov r8l, 01
  mov [rcx+7B],r8l
  mov rdx,[rax]
  jmp return

hookreturnB:
readmem(LostFocusPause,7)

LostFocusPause:
  jmp newmem
  nop 2
return:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
LostFocusPause:
readmem(hookreturnB,7)

unregistersymbol(hookreturnB)
unregistersymbol(LostFocusPause)
dealloc(hookreturnB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "coregame_rmdwin10_f.dll"+AC26E

"coregame_rmdwin10_f.dll"+AC24D: CC                             -  int 3 
"coregame_rmdwin10_f.dll"+AC24E: CC                             -  int 3 
"coregame_rmdwin10_f.dll"+AC24F: CC                             -  int 3 
"coregame_rmdwin10_f.dll"+AC250: 48 89 5C 24 10                 -  mov [rsp+10],rbx
"coregame_rmdwin10_f.dll"+AC255: 48 89 74 24 18                 -  mov [rsp+18],rsi
"coregame_rmdwin10_f.dll"+AC25A: 57                             -  push rdi
"coregame_rmdwin10_f.dll"+AC25B: 48 83 EC 40                    -  sub rsp,40
"coregame_rmdwin10_f.dll"+AC25F: 44 0F B6 42 04                 -  movzx r8d,byte ptr [rdx+04]
"coregame_rmdwin10_f.dll"+AC264: 48 8B D9                       -  mov rbx,rcx
"coregame_rmdwin10_f.dll"+AC267: 48 8B 05 7A 43 50 00           -  mov rax,[coregame_rmdwin10_f.dll+5B05E8]
// ---------- INJECTING HERE ----------
"coregame_rmdwin10_f.dll"+AC26E: 44 88 41 7B                    -  mov [rcx+7B],r8l
"coregame_rmdwin10_f.dll"+AC272: 48 8B 10                       -  mov rdx,[rax]
// ---------- DONE INJECTING  ----------
"coregame_rmdwin10_f.dll"+AC275: 44 88 42 39                    -  mov [rdx+39],r8l
"coregame_rmdwin10_f.dll"+AC279: 48 8B 49 50                    -  mov rcx,[rcx+50]
"coregame_rmdwin10_f.dll"+AC27D: 48 8B 01                       -  mov rax,[rcx]
"coregame_rmdwin10_f.dll"+AC280: FF 90 88 00 00 00              -  call qword ptr [rax+00000088]
"coregame_rmdwin10_f.dll"+AC286: 0F B6 4B 7B                    -  movzx ecx,byte ptr [rbx+7B]
"coregame_rmdwin10_f.dll"+AC28A: 48 8B F0                       -  mov rsi,rax
"coregame_rmdwin10_f.dll"+AC28D: 84 C9                          -  test cl,cl
"coregame_rmdwin10_f.dll"+AC28F: 75 43                          -  jne coregame_rmdwin10_f.dll+AC2D4
"coregame_rmdwin10_f.dll"+AC291: 83 BB B8 00 00 00 02           -  cmp dword ptr [rbx+000000B8],02
"coregame_rmdwin10_f.dll"+AC298: 75 78                          -  jne coregame_rmdwin10_f.dll+AC312
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"allow any res"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// By Otis_Inf and Hattiwatti
// Updated by ghostinthecamera
// See for info about locations/data:
// https://github.com/FransBouma/InjectableGenericCameraSystem/blob/master/Notes/Control.txt
//////////////////////////////////////////////////////////
// FRAMED Screenshot Community. https://framedsc.github.io
//////////////////////////////////////////////////////////

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(AnyRes,coregame_rmdwin10_f.dll,41 B8 x x x x 89 84 24 x x x x 0F 29 44 24 x) // should be unique
registersymbol(AnyRes)


//alloc(hookreturnC,6)
//registersymbol(hookreturnC)

//hookreturnC:
//readmem(AnyRes,6)

AnyRes:
mov r8d, 00000000
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
AnyRes:
mov r8d, 00000001

unregistersymbol(AnyRes)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Autoadjust AR"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// By Otis_Inf and Hattiwatti
// Updated by ghostinthecamera
// See for info about locations/data:
// https://github.com/FransBouma/InjectableGenericCameraSystem/blob/master/Notes/Control.txt
//////////////////////////////////////////////////////////
// FRAMED Screenshot Community. https://framedsc.github.io
//////////////////////////////////////////////////////////

[ENABLE]
aobscanmodule(AutoAR,coregame_rmdwin10_f.dll,0F 85 x x x x 66 0F 6E CB 66 41 0F 6E C1) // should be unique
registersymbol(AutoAR)
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(hookreturnD,6)
registersymbol(hookreturnD)

hookreturnD:
readmem(AutoAR,6)

AutoAR:
db e9 C7 00 00 00 90
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
AutoAR:
readmem(hookreturnD,6)
//db 0F 85 BD 00 00 00

unregistersymbol(AutoAR)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"disable show window call"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// By Otis_Inf and Hattiwatti
// Updated by ghostinthecamera
// See for info about locations/data:
// https://github.com/FransBouma/InjectableGenericCameraSystem/blob/master/Notes/Control.txt
//////////////////////////////////////////////////////////
// FRAMED Screenshot Community. https://framedsc.github.io
//////////////////////////////////////////////////////////
[ENABLE]
aobscanmodule(DisableSW,coregame_rmdwin10_f.dll,FF 15 x x x x B2 x 88 55 x 44 8B x x x x x) // should be unique
registersymbol(DisableSW)
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(hookreturnE,6)
registersymbol(hookreturnE)

hookreturnE:
readmem(DisableSW,6)



DisableSW:
db 90 90 90 90 90 90
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
DisableSW:
readmem(hookreturnE,6)
//db FF 15 AC 38 50 00

unregistersymbol(DisableSW)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
