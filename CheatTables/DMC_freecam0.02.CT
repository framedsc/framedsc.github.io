<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>6926</ID>
      <Description>"DMC Freecam BETA v0.02 by IDK31"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>6927</ID>
      <Description>""</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>15071</ID>
      <Description>"Fast speed modifier changed from F to G (to not conflict with ability)"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>6879</ID>
      <Description>"&gt;&gt; CAMERA CONTROLS **"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//"DMC-DevilMayCry.exe"+BB9188
[ENABLE]

aobscanmodule(camAOB,DMC-DevilMayCry.exe,83 BE 7C 06 00 00 00 57)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_camera,4)

newmem:

code:
  mov [_camera],esi
  cmp dword ptr [esi+0000067C],00
  jmp return

camAOB:
  jmp code
  nop
  nop
return:
registersymbol(camAOB)

{$lua}
if syntaxcheck then return end
local symbolCheckT = createTimer()
symbolCheckT.Interval = 50
symbolCheckT.OnTimer = function(sender)

  local function cambase() return readInteger("_camera") end

  -- CAMERA ADDRESSES
  local function camXAD() return cambase()+0x56C end -- float
  local function camYAD() return cambase()+0x570 end -- float
  local function camZAD() return cambase()+0x574 end -- float
  local function pitchAD() return cambase()+0x578 end -- 4 byte signed
  local function yawAD() return cambase()+0x57C end -- 4 byte signed
  local function rollAD() return cambase()+0x580 end -- 4 byte signed
  local function FOVAD() return cambase()+0x584 end -- float
  local function camIDAD() return cambase()+0x67C end -- 4 byte hex
  local function backupIDAD() return cambase()+0x78C end -- 4 byte hex

  -- CAMERA VARIABLES
  local flySpeed  = 3 -- float
  local aimSpeed  = 50 -- int
  local rollSpeed = 50 -- int
  local FOVSpeed  = 0.25 -- float
  local ultraFast = 100 -- how fast in ultra-fast mode
  local fastMult  = 10 -- how fast in fast mode
  local slowDiv   = 10 -- how slow in slow mode
  local tempID

  local function freecamEnabled()
   if readInteger(camIDAD()) == 0 then return true end
   return false
  end

  local function gameHasFocus()
    if getOpenedProcessID() == getForegroundProcess() then return true end
    return false
  end

  local function requiredConditions()
    if freecamEnabled() and gameHasFocus() then return true end
    return false
  end

  local function toggleFreecam()
    if not gameHasFocus() then return end
    if freecamEnabled() then
      if not tempID then tempID = readInteger(backupIDAD()) end
      writeInteger(camIDAD(), tempID)
    else
      tempID = readInteger(camIDAD())
      writeInteger(camIDAD(), 0)
    end
  end

  -- WATCH FOR SPEED MODIFIER KEYS

  local flySpeedOrig  = flySpeed
  local aimSpeedOrig  = aimSpeed
  local rollSpeedOrig = rollSpeed
  local FOVSpeedOrig  = FOVSpeed

  local ultraFastModeEnabled = false
  local fastModeEnabled = false
  local slowModeEnabled = false

  local didReset = true
  local didSlow = false
  local didFast = false
  local didUltraFast = false

  checkCamKeys = createTimer()
  checkCamKeys.setInterval(100)
  checkCamKeys.onTimer = function()
    if not requiredConditions() then return end
    if isKeyPressed(VK_T) and not isKeyPressed(VK_MENU) then
      if not didUltraFast then
        flySpeed  = flySpeedOrig*ultraFast
        aimSpeed  = aimSpeedOrig*fastMult
        rollSpeed = rollSpeedOrig*fastMult
        FOVSpeed  = FOVSpeedOrig*fastMult
        didReset  = false
        didUltraFast = true
      end
    elseif isKeyPressed(VK_G) and not isKeyPressed(VK_MENU) then
      if not didFast then
        flySpeed  = flySpeedOrig*fastMult
        aimSpeed  = aimSpeedOrig*fastMult
        rollSpeed = rollSpeedOrig*fastMult
        FOVSpeed  = FOVSpeedOrig*fastMult
        didReset  = false
        didFast   = true
      end
    elseif isKeyPressed(VK_C) and not isKeyPressed(VK_MENU) then
      if not didSlow then
        flySpeed  = flySpeedOrig/slowDiv
        aimSpeed  = aimSpeedOrig/slowDiv
        rollSpeed = rollSpeedOrig/slowDiv
        FOVSpeed  = FOVSpeedOrig/slowDiv
        didReset  = false
        didSlow   = true
      end
    elseif not didReset then
      flySpeed  = flySpeedOrig
      aimSpeed  = aimSpeedOrig
      rollSpeed = rollSpeedOrig
      FOVSpeed  = FOVSpeedOrig
      didUltraFast = false
      didFast   = false
      didSlow   = false
      didReset  = true
    end
  end

 -- MOVEMENT SPEED TOGGLES...

  local function resetSpeed()
    flySpeed  = flySpeedOrig
    aimSpeed  = aimSpeedOrig
    rollSpeed = rollSpeedOrig
    FOVSpeed  = FOVSpeedOrig
    ultraFastModeEnabled = false
    fastModeEnabled = false
    slowModeEnabled = false
  end

  local function goUltraFast()
    if ultraFastModeEnabled then resetSpeed()
    else
      flySpeed  = flySpeedOrig*ultraFast
      aimSpeed  = aimSpeedOrig*fastMult
      rollSpeed = rollSpeedOrig*fastMult
      FOVSpeed  = FOVSpeedOrig*fastMult
      ultraFastModeEnabled = true
      fastModeEnabled = false
      slowModeEnabled = false
    end
  end

  local function goFast()
    if fastModeEnabled then resetSpeed()
    else
      flySpeed  = flySpeedOrig*fastMult
      aimSpeed  = aimSpeedOrig*fastMult
      rollSpeed = rollSpeedOrig*fastMult
      FOVSpeed  = FOVSpeedOrig*fastMult
      ultraFastModeEnabled = false
      fastModeEnabled = true
      slowModeEnabled = false
    end
  end

  local function goSlow()
    if slowModeEnabled then resetSpeed()
    else
      flySpeed  = flySpeedOrig/slowDiv
      aimSpeed  = aimSpeedOrig/slowDiv
      rollSpeed = rollSpeedOrig/slowDiv
      FOVSpeed  = FOVSpeedOrig/slowDiv
      ultraFastModeEnabled = false
      fastModeEnabled = false
      slowModeEnabled = true
    end
  end

  -- CAMERA FUNCTIONS...

  local function move(moveDir)
    if not requiredConditions() then return end
    local camZ = readFloat(camZAD())
    if moveDir == "up" then
      writeFloat(camZAD(), camZ+flySpeed)
      return
    elseif moveDir == "down" then
      writeFloat(camZAD(), camZ-flySpeed)
      return
    end
    local camX  = readFloat(camXAD())
    local camY  = readFloat(camYAD())
    local yaw = readInteger(yawAD())*math.pi/32768 -- to radians
    if moveDir == "right" then
      writeFloat(camXAD(), camX-flySpeed*math.sin(yaw))
      writeFloat(camYAD(), camY+flySpeed*math.cos(yaw))
    elseif moveDir == "left" then
      writeFloat(camXAD(), camX+flySpeed*math.sin(yaw))
      writeFloat(camYAD(), camY-flySpeed*math.cos(yaw))
    elseif moveDir == "forward" then
      writeFloat(camXAD(), camX+flySpeed*math.cos(yaw))
      writeFloat(camYAD(), camY+flySpeed*math.sin(yaw))
    elseif moveDir == "backward" then
      writeFloat(camXAD(), camX-flySpeed*math.cos(yaw))
      writeFloat(camYAD(), camY-flySpeed*math.sin(yaw))
    else return
    end
  end

  local function pan(panDir)
    if not requiredConditions() then return end
    if panDir == "panLeft" then
      writeInteger(yawAD(), readInteger(yawAD())-aimSpeed)
    elseif panDir == "panRight" then
      writeInteger(yawAD(), readInteger(yawAD())+aimSpeed)
    elseif panDir == "panUp" then
      writeInteger(pitchAD(), readInteger(pitchAD())+aimSpeed)
    elseif panDir == "panDown" then
      writeInteger(pitchAD(), readInteger(pitchAD())-aimSpeed)
    else return
    end
  end

  local function zoomIn()
    if not requiredConditions() then return end
    writeFloat(FOVAD(), readFloat(FOVAD())+FOVSpeed)
  end

  local function zoomOut()
    if not requiredConditions() then return end
    writeFloat(FOVAD(), readFloat(FOVAD())-FOVSpeed)
  end

  local function rollLeft()
    if not requiredConditions() then return end
    writeInteger(rollAD(), readInteger(rollAD())+rollSpeed)
  end

  local function rollRight()
    if not requiredConditions() then return end
    writeInteger(rollAD(), readInteger(rollAD())-rollSpeed)
  end

  local function rollReset()
    if not requiredConditions() then return end
    writeFloat(rollAD(), 0)
  end

  local function moveForward() move("forward") end
  local function moveBackward() move("backward") end
  local function moveLeft() move("left") end
  local function moveRight() move("right") end
  local function moveUp() move("up") end
  local function moveDown() move("down") end
  local function panUp() pan("panUp") end
  local function panDown() pan("panDown") end
  local function panLeft() pan("panLeft") end
  local function panRight() pan("panRight") end

  -- CREATE HOTKEYS
  camHotkeys = {
    createHotkey(toggleFreecam, VK_NEXT), -- leave at pos 1
    createHotkey(goUltraFast, VK_MENU, VK_T), -- leave at pos 2
    createHotkey(goFast, VK_MENU, VK_G), -- leave at pos 3
    createHotkey(goSlow, VK_MENU, VK_C), -- leave at pos 4
    createHotkey(moveForward, VK_NUMPAD8),
    createHotkey(moveBackward, VK_NUMPAD5),
    createHotkey(moveLeft, VK_NUMPAD4),
    createHotkey(moveRight, VK_NUMPAD6),
    createHotkey(moveUp, VK_NUMPAD9),
    createHotkey(moveDown, VK_NUMPAD7),
    createHotkey(panUp, VK_ADD, VK_NUMPAD8),
    createHotkey(panDown, VK_ADD, VK_NUMPAD5),
    createHotkey(panLeft, VK_ADD, VK_NUMPAD4),
    createHotkey(panRight, VK_ADD, VK_NUMPAD6),
    createHotkey(rollLeft, VK_ADD, VK_NUMPAD3),
    createHotkey(rollRight, VK_ADD, VK_NUMPAD1),
    createHotkey(rollReset, VK_ADD, VK_NUMPAD2),
    createHotkey(zoomIn, VK_ADD, VK_NUMPAD7),
    createHotkey(zoomOut, VK_ADD, VK_NUMPAD9),
  }
  local smDelay = 5
  for i=1,smDelay-1,1 do camHotkeys[i].DelayBetweenActivate = 1000 end
  for i=smDelay,#camHotkeys,1 do camHotkeys[i].DelayBetweenActivate = 10 end

  sender.destroy()
end

{$asm}
[DISABLE]

camAOB:
  db 83 BE 7C 06 00 00 00

unregistersymbol(camAOB)
dealloc(newmem)
{$lua}

if checkCamKeys ~= nil then
  checkCamKeys.destroy()
  checkCamKeys = nil
end

if camHotkeys ~= nil then
  for i,v in ipairs(camHotkeys) do v.destroy() end
  camHotkeys = nil
end

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>6951</ID>
          <Description>"Freecam on/off - PAGEDOWN"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>6956</ID>
          <Description>"SPEED - slow: C, fast: G, very fast: T"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>6954</ID>
          <Description>"MOVE - L: num4, R: num6, F: num8, B: num5, U: num9, D: num7"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>6955</ID>
          <Description>"PAN - (PLUS and...) L: num4, R: num6, U: num9, D: num7"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>6953</ID>
          <Description>"ZOOM - (PLUS and...) In: num9, Out: num7"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>6952</ID>
          <Description>"ROLL - (PLUS and...) L: num1, R: num3, reset: num2"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>6883</ID>
          <Description>"Camera X"</Description>
          <LastState Value="23366.11133" RealAddress="280C9B6C"/>
          <VariableType>Float</VariableType>
          <Address>_camera</Address>
          <Offsets>
            <Offset>56C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6885</ID>
          <Description>"Camera Y"</Description>
          <LastState Value="21818.07617" RealAddress="280C9B70"/>
          <VariableType>Float</VariableType>
          <Address>_camera</Address>
          <Offsets>
            <Offset>570</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6884</ID>
          <Description>"Camera Z"</Description>
          <LastState Value="123.539711" RealAddress="280C9B74"/>
          <VariableType>Float</VariableType>
          <Address>_camera</Address>
          <Offsets>
            <Offset>574</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6889</ID>
          <Description>"Pitch"</Description>
          <LastState Value="-735" RealAddress="280C9B78"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>_camera</Address>
          <Offsets>
            <Offset>578</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6888</ID>
          <Description>"Yaw"</Description>
          <LastState Value="-3754" RealAddress="280C9B7C"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>_camera</Address>
          <Offsets>
            <Offset>57C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6887</ID>
          <Description>"Roll"</Description>
          <LastState Value="0" RealAddress="280C9B80"/>
          <VariableType>4 Bytes</VariableType>
          <Address>_camera</Address>
          <Offsets>
            <Offset>580</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6886</ID>
          <Description>"FOV"</Description>
          <LastState Value="78" RealAddress="280C9B84"/>
          <VariableType>Float</VariableType>
          <Address>_camera</Address>
          <Offsets>
            <Offset>584</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6892</ID>
          <Description>"Tint RED"</Description>
          <LastState Value="1" RealAddress="280C9AF8"/>
          <VariableType>Float</VariableType>
          <Address>_camera</Address>
          <Offsets>
            <Offset>4F8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6890</ID>
          <Description>"Tint GREEN"</Description>
          <LastState Value="1" RealAddress="280C9AFC"/>
          <VariableType>Float</VariableType>
          <Address>_camera</Address>
          <Offsets>
            <Offset>4FC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6891</ID>
          <Description>"Tint BLUE"</Description>
          <LastState Value="1" RealAddress="280C9B00"/>
          <VariableType>Float</VariableType>
          <Address>_camera</Address>
          <Offsets>
            <Offset>500</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>7034</ID>
      <Description>"&gt;&gt; PLAYER"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//"DMC-DevilMayCry.exe"+15D6251
[ENABLE]

aobscanmodule(playerAOB,DMC-DevilMayCry.exe,31 05 00 00 F3 0F 10 46 50)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_player,4)

newmem:

code:
  mov [_player],esi
  movss xmm0,[esi+50]
  jmp return

playerAOB+04:
  jmp newmem
return:
registersymbol(playerAOB)

[DISABLE]

playerAOB+04:
  db F3 0F 10 46 50

unregistersymbol(playerAOB)
dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>7035</ID>
          <Description>"Player X"</Description>
          <VariableType>Float</VariableType>
          <Address>_player</Address>
          <Offsets>
            <Offset>50</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7038</ID>
          <Description>"Player Y"</Description>
          <VariableType>Float</VariableType>
          <Address>_player</Address>
          <Offsets>
            <Offset>54</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7037</ID>
          <Description>"Player Z"</Description>
          <VariableType>Float</VariableType>
          <Address>_player</Address>
          <Offsets>
            <Offset>58</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7039</ID>
          <Description>"Z offset"</Description>
          <VariableType>Float</VariableType>
          <Address>_player</Address>
          <Offsets>
            <Offset>80</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7036</ID>
          <Description>"Size"</Description>
          <VariableType>Float</VariableType>
          <Address>_player</Address>
          <Offsets>
            <Offset>68</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>6898</ID>
      <Description>"&gt;&gt; DOF/TONES **"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//"DMC-DevilMayCry.exe"+56D7F0 (desaturation)
[ENABLE]

aobscanmodule(dofAOB,DMC-DevilMayCry.exe,F3 0F 10 97 A8 00 00 00 81)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_dof,4)

newmem:

code:
  mov [_dof],edi
  movss xmm2,[edi+000000A8]
  jmp return

dofAOB:
  jmp code
  nop
  nop
  nop
return:
registersymbol(dofAOB)

{$lua}
if syntaxcheck then return end
local symbolCheckT = createTimer()
symbolCheckT.Interval = 50
symbolCheckT.OnTimer = function(sender)

 local base -- this base will change

  function getBase()
    base = readInteger("_dof")
    --if base == 0 or base == nil then return end
  end

  -- ADDRESSES
  -- base changes, so find these each time
  local DOFOnOffByteAD
  local focusDistanceAD
  local focusRadiusAD
  local focusMultAD
  local MGblurAD
  local FGblurAD
  local BGblurAD
  local blurSizeAD

  local function getDOFOnOff()
    getBase()
    DOFOnOffByteAD = base+0x40 -- on/off at bit 2
  end

  local function getDOFAddy()
    getBase()
    focusDistanceAD = base+0x78
    focusRadiusAD   = base+0x74
    focusMultAD     = base+0x5C
    MGblurAD = base+0x68
    FGblurAD = base+0x64
    BGblurAD = base+0x6C
    blurSizeAD = base+0x60
  end

  -- VARIABLES
  local focusSpeed = 0.001
  local BGfocusSpeed = 0.01
  local swapSpeed = 0.04
  local nearFarSpeed = 1
  local fastMult = 10
  local slowDiv  = 10
  local blurSizeSpeed = 0.01

  local function requiredConditions()
    if getOpenedProcessID() == getForegroundProcess() then
      return true
    end
    return false
  end

  -- WATCH FOR SPEED MODIFIER KEYS
  local didReset = true
  local didSlow = false
  local didFast = false
  local focusSpeedOrig = focusSpeed
  local BGfocusSpeedOrig = BGfocusSpeed
  local nearFarSpeedOrig = nearFarSpeed
  local swapSpeedOrig = swapSpeed
  local blurSizeSpeedOrig = blurSizeSpeed
  checkDOFKeys = createTimer()
  checkDOFKeys.setInterval(100)
  checkDOFKeys.onTimer = function()
    if not requiredConditions() then return end
    if isKeyPressed(VK_G) then
      if not didFast then
        focusSpeed = focusSpeedOrig*fastMult
        BGfocusSpeed = BGfocusSpeedOrig*fastMult
        nearFarSpeed = nearFarSpeedOrig*fastMult
        swapSpeed = swapSpeedOrig*fastMult
        blurSizeSpeed = blurSizeSpeedOrig*fastMult
        didReset = false
        didFast  = true
      end
    elseif isKeyPressed(VK_C) then
      if not didSlow then
        focusSpeed = focusSpeedOrig/slowDiv
        BGfocusSpeed = BGfocusSpeedOrig/slowDiv
        nearFarSpeed = nearFarSpeedOrig/slowDiv
        swapSpeed = swapSpeedOrig/slowDiv
        blurSizeSpeed = blurSizeSpeedOrig/slowDiv
        didReset = false
        didSlow  = true
      end
    elseif not didReset then
      focusSpeed = focusSpeedOrig
      BGfocusSpeed = BGfocusSpeedOrig
      nearFarSpeed = nearFarSpeedOrig
      swapSpeed = swapSpeedOrig
      blurSizeSpeed = blurSizeSpeedOrig
      didFast  = false
      didSlow  = false
      didReset = true
    end
  end

  -- DOF Functions...

  local function DOFEnabled()
    if not requiredConditions() then return end
    getDOFOnOff() -- &amp;4 (read bit 2)
    if readBytes(DOFOnOffByteAD,1,false)&amp;4 == 0 then return false end
    return true
  end

  local function toggleDOF()
    if not requiredConditions() then return end
    getDOFOnOff()
    local DOFOnOffByte = readBytes(DOFOnOffByteAD,1,false)
    if DOFEnabled() then
      writeBytes(DOFOnOffByteAD, DOFOnOffByte-4) -- set bit 2 to 0
    else
      if DOFOnOffByte&amp;8==0 then DOFOnOffByte = DOFOnOffByte+8 end
      writeBytes(DOFOnOffByteAD, DOFOnOffByte+4) -- set bit 2 to 1
    end
  end

  local function setDOFPreset()
    if not requiredConditions() then return end
    if not DOFEnabled() then toggleDOF() end
    getDOFAddy()
    writeFloat(focusDistanceAD, 600)
    writeFloat(focusRadiusAD,   400)
    writeFloat(focusMultAD,     2)
    writeFloat(MGblurAD,        0)
    writeFloat(FGblurAD,        1)
    writeFloat(BGblurAD,        0.5)
    writeFloat(blurSizeAD,      2)
  end

  local function nearPlaneFocusMore()
    if not requiredConditions() then return end; getDOFAddy()
    local FGfblur = readFloat(FGblurAD)
    if FGfblur &gt; 0 then writeFloat(FGblurAD, FGfblur-focusSpeed) end
  end

  local function nearPlaneFocusLess()
    if not requiredConditions() then return end; getDOFAddy()
    local FGfblur = readFloat(FGblurAD)
    if FGfblur &lt; 1 then writeFloat(FGblurAD, FGfblur+focusSpeed) end
  end

  local function nearPlaneForward()
    if not requiredConditions() then return end; getDOFAddy()
    local focusDistance = readFloat(focusDistanceAD)
    local focusRadius = readFloat(focusRadiusAD)
    writeFloat(focusDistanceAD, focusDistance+nearFarSpeed)
    writeFloat(focusRadiusAD, focusRadius-nearFarSpeed)
  end

  local function nearPlaneBackward()
    if not requiredConditions() then return end; getDOFAddy()
    local focusDistance = readFloat(focusDistanceAD)
    local focusRadius = readFloat(focusRadiusAD)
    writeFloat(focusDistanceAD, focusDistance-nearFarSpeed)
    writeFloat(focusRadiusAD, focusRadius+nearFarSpeed)
  end

  local function farPlaneFocusMore()
    if not requiredConditions() then return end; getDOFAddy()
    local BGblur = readFloat(BGblurAD)
    if BGblur &gt; 0 then writeFloat(BGblurAD, BGblur-BGfocusSpeed) end
  end

  local function farPlaneFocusLess()
    if not requiredConditions() then return end; getDOFAddy()
    local BGblur = readFloat(BGblurAD)
    if BGblur &lt; 1 then writeFloat(BGblurAD, BGblur+BGfocusSpeed) end
  end

  local function farPlaneForward()
    if not requiredConditions() then return end; getDOFAddy()
    local focusDistance = readFloat(focusDistanceAD)
    local focusRadius = readFloat(focusRadiusAD)
    writeFloat(focusDistanceAD, focusDistance+nearFarSpeed)
    writeFloat(focusRadiusAD, focusRadius+nearFarSpeed)
  end

  local function farPlaneBackward()
    if not requiredConditions() then return end; getDOFAddy()
    local focusDistance = readFloat(focusDistanceAD)
    local focusRadius = readFloat(focusRadiusAD)
    if focusDistance &gt; 0 then
      writeFloat(focusDistanceAD, focusDistance-nearFarSpeed)
    end
    if focusRadius &gt; 0 then
      writeFloat(focusRadiusAD, focusRadius-nearFarSpeed)
    end
  end

  local function swapFocusNear()
    if not requiredConditions() then return end; getDOFAddy()
    local BGblur = readFloat(BGblurAD)
    local FGblur = readFloat(FGblurAD)
    if FGblur &lt; 0.001 then FGblur = 0.001 end
    if BGblur &lt; 0.001 then BGblur = 0.001 end
    if FGblur &gt;= 0.001 and BGblur &lt;= 2 then
      if FGblur &lt; BGblur then
        writeFloat(BGblurAD, BGblur+swapSpeed*FGblur)
        writeFloat(FGblurAD, FGblur-swapSpeed*FGblur)
      else
        writeFloat(BGblurAD, BGblur+swapSpeed*BGblur)
        writeFloat(FGblurAD, FGblur-swapSpeed*BGblur)
      end
    end
  end

  local function swapFocusFar()
    if not requiredConditions() then return end; getDOFAddy()
    local BGblur = readFloat(BGblurAD)
    local FGblur = readFloat(FGblurAD)
    if FGblur &lt; 0.001 then FGblur = 0.001 end
    if BGblur &lt; 0.001 then BGblur = 0.001 end
    if BGblur &gt;= 0.001 and FGblur &lt;= 2 then
      if FGblur &lt; BGblur then
        writeFloat(BGblurAD, BGblur-swapSpeed*FGblur)
        writeFloat(FGblurAD, FGblur+swapSpeed*FGblur)
      else
        writeFloat(BGblurAD, BGblur-swapSpeed*BGblur)
        writeFloat(FGblurAD, FGblur+swapSpeed*BGblur)
      end
    end
  end

  local function blurSizeBigger()
    if not requiredConditions() then return end; getDOFAddy()
    local blurSize = readFloat(blurSizeAD)
    if blurSize&lt;64 then
      writeFloat(blurSizeAD, blurSize+blurSizeSpeed)
    end
  end

  local function blurSizeSmaller()
    if not requiredConditions() then return end; getDOFAddy()
    local blurSize = readFloat(blurSizeAD)
    if blurSize&gt;0 then
      writeFloat(blurSizeAD, blurSize-blurSizeSpeed)
    end
  end

  -- CREATE HOTKEYS
  DOFHotkeys = {
    createHotkey(toggleDOF, VK_O), -- leave at pos 1
    createHotkey(setDOFPreset, VK_P), -- leave at pos 2
    createHotkey(nearPlaneFocusMore, VK_L),
    createHotkey(nearPlaneFocusLess, VK_J),
    createHotkey(nearPlaneForward, VK_I),
    createHotkey(nearPlaneBackward, VK_K),
    createHotkey(farPlaneFocusMore, VK_MENU, VK_L),
    createHotkey(farPlaneFocusLess, VK_MENU, VK_J),
    createHotkey(farPlaneForward, VK_MENU, VK_I),
    createHotkey(farPlaneBackward, VK_MENU, VK_K),
    createHotkey(swapFocusNear, VK_N),
    createHotkey(swapFocusFar, VK_M),
    createHotkey(blurSizeBigger, VK_MENU, VK_U),
    createHotkey(blurSizeSmaller, VK_MENU, VK_O)
  }
  for i,v in ipairs(DOFHotkeys) do
    v.DelayBetweenActivate = (i == 1 or i == 2) and 1000 or 10
  end

  sender.destroy()
end

{$asm}
[DISABLE]

dofAOB:
  db F3 0F 10 97 A8 00 00 00

unregistersymbol(dofAOB)
dealloc(newmem)

{$lua}
if checkDOFKeys ~= nil then
  checkDOFKeys.destroy()
  checkDOFKeys = nil
end

if DOFHotkeys ~= nil then
  for i,v in ipairs(DOFHotkeys) do v.destroy() end
  DOFHotkeys = nil
end
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>6940</ID>
          <Description>"&gt;&gt; DOF"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>13336</ID>
              <Description>"HOTKEY: Toggle DOF - O, load preset - P "</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>13313</ID>
              <Description>"HOTKEY: Foreground focus near/far - K/I, focus more/less - L/J"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>13346</ID>
              <Description>"HOTKEY: Background focus (ALT+...) near/far - K/I, focus more/less - L/J"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>15070</ID>
              <Description>"HOTKEY: Blur size bigger ALT+U, blur size smaller ALT+O"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>13347</ID>
              <Description>"HOTKEY: Rack focus (foreground/background swap) near/far - N/M"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>13344</ID>
              <Description>"NOTE: Focus faster: G, focus slower: C"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>6923</ID>
              <Description>"DOF on/off"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:ON
0:-
</DropDownList>
              <LastState Value="1" RealAddress="2D807594"/>
              <VariableType>Binary</VariableType>
              <BitStart>2</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>_dof</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6925</ID>
              <Description>"Edge blur on/off"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:ON
0:-
</DropDownList>
              <LastState Value="1" RealAddress="2D807594"/>
              <VariableType>Binary</VariableType>
              <BitStart>3</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>_dof</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6914</ID>
              <Description>"Focus distance"</Description>
              <LastState Value="600" RealAddress="2D8075CC"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>78</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6915</ID>
              <Description>"Focus radius"</Description>
              <LastState Value="400" RealAddress="2D8075C8"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>74</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6920</ID>
              <Description>"Falloff exponent"</Description>
              <LastState Value="2" RealAddress="2D8075B0"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>5C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6919</ID>
              <Description>"Blur kernel size"</Description>
              <LastState Value="0.6900014877" RealAddress="2D8075B4"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>60</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6918</ID>
              <Description>"Foreground blur"</Description>
              <LastState Value="1" RealAddress="2D8075B8"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>64</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6916</ID>
              <Description>"Background blur"</Description>
              <LastState Value="0.5" RealAddress="2D8075C0"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>6C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>6941</ID>
          <Description>"&gt;&gt; Bloom"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>6924</ID>
              <Description>"Bloom on/off"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:ON
0:-
</DropDownList>
              <LastState Value="1" RealAddress="2D807594"/>
              <VariableType>Binary</VariableType>
              <BitStart>1</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>_dof</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6945</ID>
              <Description>"Bloom intensity"</Description>
              <LastState Value="0.5" RealAddress="2D8075A4"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>50</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6946</ID>
              <Description>"Bloom size"</Description>
              <LastState Value="16" RealAddress="2D8075AC"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>58</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6948</ID>
              <Description>"Bloom RED"</Description>
              <LastState Value="255" RealAddress="2D8075A2"/>
              <VariableType>Byte</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>4E</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6949</ID>
              <Description>"Bloom GREEN"</Description>
              <LastState Value="162" RealAddress="2D8075A1"/>
              <VariableType>Byte</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>4D</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6947</ID>
              <Description>"Bloom BLUE"</Description>
              <LastState Value="158" RealAddress="2D8075A0"/>
              <VariableType>Byte</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>4C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>6939</ID>
          <Description>"&gt;&gt; Color"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>6899</ID>
              <Description>"Desaturation"</Description>
              <LastState Value="0" RealAddress="2D8075FC"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>A8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6930</ID>
              <Description>"Highlights RED (from white)"</Description>
              <LastState Value="1" RealAddress="2D807614"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>C0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6932</ID>
              <Description>"Highlights GREEN (from white)"</Description>
              <LastState Value="1" RealAddress="2D807618"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>C4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6931</ID>
              <Description>"Highlights BLUE (from white)"</Description>
              <LastState Value="1" RealAddress="2D80761C"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>C8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6935</ID>
              <Description>"Midtones RED (from white)"</Description>
              <LastState Value="1" RealAddress="2D807620"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>CC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6934</ID>
              <Description>"Midtones GREEN (from white)"</Description>
              <LastState Value="1" RealAddress="2D807624"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>D0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6933</ID>
              <Description>"Midtones BLUE (from white)"</Description>
              <LastState Value="1" RealAddress="2D807628"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>D4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6938</ID>
              <Description>"Shadows RED (to black)"</Description>
              <LastState Value="0" RealAddress="2D80762C"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>D8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6937</ID>
              <Description>"Shadows GREEN (to black)"</Description>
              <LastState Value="0" RealAddress="2D807630"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>DC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6936</ID>
              <Description>"Shadows BLUE (to black)"</Description>
              <LastState Value="0" RealAddress="2D807634"/>
              <VariableType>Float</VariableType>
              <Address>_dof</Address>
              <Offsets>
                <Offset>E0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>6895</ID>
          <Description>"&gt;&gt; Random color"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//"DMC-DevilMayCry.exe"+55B19C
[ENABLE]

aobscanmodule(altgammaAOB,DMC-DevilMayCry.exe,F3 0F 10 62 50)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_altgamma,4)

newmem:

code:
  mov [_altgamma],edx
  movss xmm4,[edx+50]
  jmp return

altgammaAOB:
  jmp code
return:
registersymbol(altgammaAOB)

[DISABLE]

altgammaAOB:
  db F3 0F 10 62 50

unregistersymbol(altgammaAOB)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>6911</ID>
              <Description>"&gt;&gt; True gamma"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//"DMC-DevilMayCry.exe"+352B99
[ENABLE]

aobscanmodule(gammaAOB,DMC-DevilMayCry.exe,D9 42 40 D9 E1)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_gamma,4)

newmem:

code:
  mov [_gamma],edx
  fld dword ptr [edx+40]
  fabs 
  jmp return

gammaAOB:
  jmp code
return:
registersymbol(gammaAOB)

[DISABLE]

gammaAOB:
  db D9 42 40 D9 E1

unregistersymbol(gammaAOB)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>6912</ID>
                  <Description>"Gamma"</Description>
                  <VariableType>Float</VariableType>
                  <Address>_gamma</Address>
                  <Offsets>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>6896</ID>
              <Description>"Exposure 0-1, 0 for overexposed"</Description>
              <VariableType>Float</VariableType>
              <Address>_altgamma</Address>
              <Offsets>
                <Offset>50</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6897</ID>
              <Description>"Brightness 0-1, 0 for white"</Description>
              <VariableType>Float</VariableType>
              <Address>_altgamma</Address>
              <Offsets>
                <Offset>54</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6905</ID>
              <Description>"Player RED"</Description>
              <VariableType>Float</VariableType>
              <Address>_altgamma</Address>
              <Offsets>
                <Offset>510</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6907</ID>
              <Description>"Player GREEN"</Description>
              <VariableType>Float</VariableType>
              <Address>_altgamma</Address>
              <Offsets>
                <Offset>514</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6906</ID>
              <Description>"Player BLUE"</Description>
              <VariableType>Float</VariableType>
              <Address>_altgamma</Address>
              <Offsets>
                <Offset>518</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>6893</ID>
      <Description>"&gt;&gt; HUD"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//"DMC-DevilMayCry.exe"+1B618E2
[ENABLE]

aobscanmodule(hudAOB,DMC-DevilMayCry.exe,8B 87 E8 00 00 00 8B 34)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_hud,4)

newmem:

code:
  mov [_hud],edi
  mov eax,[edi+000000E8]
  jmp return

hudAOB:
  jmp code
  nop
return:
registersymbol(hudAOB)

[DISABLE]

hudAOB:
  db 8B 87 E8 00 00 00

unregistersymbol(hudAOB)
dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>6894</ID>
          <Description>"HUD on/off"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:ON
0:-
</DropDownList>
          <VariableType>Binary</VariableType>
          <BitStart>0</BitStart>
          <BitLength>1</BitLength>
          <ShowAsBinary>0</ShowAsBinary>
          <Address>_hud</Address>
          <Offsets>
            <Offset>A0</Offset>
            <Offset>88</Offset>
            <Offset>30</Offset>
            <Offset>504</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>6943</ID>
      <Description>"&gt;&gt; GAME SPEED"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//"DMC-DevilMayCry.exe"+4874CF
[ENABLE]

aobscanmodule(speedAOB,DMC-DevilMayCry.exe,F3 0F 10 87 F0 05 00 00)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_speed,4)

newmem:

code:
  mov [_speed],edi
  movss xmm0,[edi+000005F0]
  jmp return

speedAOB:
  jmp code
  nop
  nop
  nop
return:
registersymbol(speedAOB)

[DISABLE]

speedAOB:
  db F3 0F 10 87 F0 05 00 00

unregistersymbol(speedAOB)
dealloc(newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>6944</ID>
          <Description>"Slomo"</Description>
          <LastState Value="4.63262008E-37" RealAddress="17DF14F0"/>
          <VariableType>Float</VariableType>
          <Address>_speed</Address>
          <Offsets>
            <Offset>5F0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>6950</ID>
      <Description>"** Adds hotkeys"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
