<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>425</ID>
      <Description>"SCREENSHOTTING"</Description>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>233</ID>
          <Description>"Fly [Num 0]"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_Fly,FC64.dll,0F 28 20 48 8B C3 0F 28 C4)
aobscanmodule(_Bypass_Jump_Fall,FC64.dll,C6 45 88 00 F6 80 E8 01 00 00 80)
Registersymbol(_UP)
Registersymbol(_Down)
Registersymbol(_Fly)
Registersymbol(_Bypass_Jump_Fall)
alloc(newmem,2048,FC64.dll)
alloc(_UP,4)
alloc(_Down,4)
label(returnhere)
label(originalcode)
label(exit)
label(Up)
label(Down)
label(pCoord)
Registersymbol(pCoord)

newmem: //this is allocated memory, you have read,write,execute access
mov [pCoord],rax
cmp byte ptr [_UP],1
je Up
cmp byte ptr [_Down],1
je Down
jmp originalcode

Up:
mov byte ptr [_UP],0
fld [rax+08]
fld1
faddp
fld1
faddp
fld1
faddp
fstp [rax+08]
jmp originalcode

Down:
mov byte ptr [_Down],0
fld [rax+08]
fld1
fsubp
fld1
fsubp
fld1
fsubp
fstp [rax+08]
jmp originalcode

originalcode:
movaps xmm4,[rax]
mov rax,rbx

exit:
jmp returnhere

//"FC64.dll"+45A2D5:
_Fly:
jmp newmem
nop
returnhere:

//"FC64.dll"+C50524:
_Bypass_Jump_Fall:
db C6 45 88 01 F6 80 E8 01 00 00 80

_UP:
dd 0

_Down:
dd 0

pCoord:
dq 0
 
[DISABLE]
Unregistersymbol(_UP)
Unregistersymbol(_Down)
dealloc(newmem)
dealloc(_UP)
dealloc(_Down)
Unregistersymbol(_Fly)
Unregistersymbol(_Bypass_Jump_Fall)
Unregistersymbol(pCoord)
//"FC64.dll"+45A2D5:
_Fly:
movaps xmm4,[rax]
mov rax,rbx
//Alt: db 0F 28 20 48 8B C3

//"FC64.dll"+C50524:
_Bypass_Jump_Fall:
db C6 45 88 00 F6 80 E8 01 00 00 80
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>3351</ID>
              <Description>"Numpad keys to change coords"</Description>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>2008</ID>
              <Description>"X"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>pCoord</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>102</Key>
                  </Keys>
                  <Value>.1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>100</Key>
                  </Keys>
                  <Value>.1</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>3</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>2010</ID>
              <Description>"Y"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>pCoord</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>104</Key>
                  </Keys>
                  <Value>.1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>98</Key>
                  </Keys>
                  <Value>.1</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>3</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>2009</ID>
              <Description>"Z"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>pCoord</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>105</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>99</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>3</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Stealth  [F10]"</Description>
          <LastState Activated="1"/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_StealthMode,FC64.dll,0F 2E 70 0C ? ? 49 8D 8C 24 B0 02)
aobscanmodule(_StealthModeDog,FC64.dll,F3 0F 10 71 0C 0F 2E)
Registersymbol(_StealthMode)
Registersymbol(_StealthModeDog)
alloc(newmem,2048,FC64.dll)
alloc(newmem5,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5: //this is allocated memory, you have read,write,execute access
mov [rcx+0C],0

originalcode5:
movss xmm6,[rcx+0C]

exit5:
jmp returnhere5



newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [rax+0C],(float)0

originalcode:
ucomiss xmm6,[rax+0C]
je _StealthMode+76

exit:
jmp returnhere

_StealthMode:
jmp newmem
nop
returnhere:

//"FC64.dll"+170DC9D:
_StealthModeDog:
jmp newmem5
returnhere5:


 
 
[DISABLE]
Unregistersymbol(_StealthMode)
unregistersymbol(_StealthModeDog)
dealloc(newmem)
dealloc(newmem5)

_StealthMode:
ucomiss xmm6,[rax+0C]
je _StealthMode+76

//"FC64.dll"+170DC9D:
_StealthModeDog:
movss xmm6,[rcx+0C]
//Alt: db F3 0F 10 71 0C
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>121</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>170</ID>
          <Description>"Time of Day [F9]"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(exit)

label(pTime)
registersymbol(pTime)

newmem:
mov [pTime],rcx
movss xmm0,[rcx]
ret
jmp exit

exit:
jmp returnhere

//
pTime:
dq 0
//

"FC64.dll"+230330:
jmp newmem
returnhere:

[DISABLE]
dealloc(newmem)
"FC64.dll"+230330:
movss xmm0,[rcx]
ret
unregistersymbol(pTime)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>120</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>1906</ID>
              <Description>"[ ] keys"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>pTime</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>221</Key>
                  </Keys>
                  <Value>100</Value>
                  <ID>7</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>219</Key>
                  </Keys>
                  <Value>100</Value>
                  <ID>8</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>221</Key>
                  </Keys>
                  <Value>1500</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>219</Key>
                  </Keys>
                  <Value>1500</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>221</Key>
                  </Keys>
                  <Value>6000</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>219</Key>
                  </Keys>
                  <Value>6000</Value>
                  <ID>3</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>329</ID>
          <Description>"FOV [F8]"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048,"FC64.dll")
label(returnhere)
label(exit)

label(checkIfAddress2)
label(copyAddress)

label(pCamera)
registersymbol(pCamera)
label(pCamera2)
registersymbol(pCamera2)

////////

newmem:
cmp [pCamera],0
jne checkIfAddress2
mov [pCamera],rcx
movss xmm0,[rcx+14]
jmp exit

checkIfAddress2:
cmp [pCamera],rcx
jne copyAddress
movss xmm0,[rcx+14]
jmp exit

copyAddress:
mov [pCamera2],rcx
push rax
push r10
push r11
push r12
push r13
mov rax,[pCamera]
mov r10,[rax+54]
mov r11,[rax+58]
mov r12,[rax+5c]
mov r13,[rax+14]
mov [rcx+54],r10
mov [rcx+58],r11
mov [rcx+5c],r12
mov [rcx+14],r13
pop r13
pop r12
pop r11
pop r10
pop rax
movss xmm0,[rcx+14]
jmp exit

exit:
jmp returnhere

///
pCamera:
dq 0
pCamera2:
dq 0
///

////////

"FC64.dll"+29B0C6:
jmp newmem
returnhere:


// FOV NOPS
"FC64.dll"+1EB9B3:
db 90 90 90

"FC64.dll"+1282C8:
db 90 90 90 90 90

"FC64.dll"+688208:
db 90 90 90 90 90

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FC64.dll"+29B0C6:
movss xmm0,[rcx+14]
// FOV NOPS
"FC64.dll"+1EB9B3:
mov [rcx+0C],eax
mov eax,[rdx+10]
//
"FC64.dll"+1282C8:
movss [rcx+0C],xmm1
//
"FC64.dll"+688208:
movss [rdi+14],xmm3
//
unregistersymbol(pCamera)
unregistersymbol(pCamera2)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>119</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>1924</ID>
              <Description>"Numpad plus\minus"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>pCamera</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>107</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>109</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>1920</ID>
              <Description>"Numpad plus\minus"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>pCamera2</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>107</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>109</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>3059</ID>
          <Description>"FOV + Camera [alt F8]"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048,"FC64.dll")
label(returnhere)
label(exit)

label(checkIfAddress2)
label(copyAddress)

label(alt_pCamera)
registersymbol(alt_pCamera)
label(alt_pCamera2)
registersymbol(alt_pCamera2)

////////

newmem:
cmp [alt_pCamera],0
jne checkIfAddress2
mov [alt_pCamera],rcx
movss xmm0,[rcx+14]
jmp exit

checkIfAddress2:
cmp [alt_pCamera],rcx
jne copyAddress
movss xmm0,[rcx+14]
jmp exit

copyAddress:
mov [alt_pCamera2],rcx
push rax
push r10
push r11
push r12
push r13
mov rax,[alt_pCamera]
mov r10,[rax+54]
mov r11,[rax+58]
mov r12,[rax+5c]
mov r13,[rax+14]
mov [rcx+54],r10
mov [rcx+58],r11
mov [rcx+5c],r12
mov [rcx+14],r13
pop r13
pop r12
pop r11
pop r10
pop rax
movss xmm0,[rcx+14]
jmp exit

exit:
jmp returnhere

///
alt_pCamera:
dq 0
alt_pCamera2:
dq 0
///

// read address
"FC64.dll"+29B0C6:
jmp newmem
returnhere:

// FOV NOPS
"FC64.dll"+1EB9B3:
db 90 90 90

"FC64.dll"+1282C8:
db 90 90 90 90 90

"FC64.dll"+688208:
db 90 90 90 90 90

// CAMERA NOPS
"FC64.dll"+1EBA1C:
db 90 90 90

"FC64.dll"+890CDB:
db 90 90 90 90 90 90

"FC64.dll"+1EBA22:
db 90 90 90

"FC64.dll"+890CE7:
db 90 90 90 90 90 90

"FC64.dll"+1EBA28:
db 90 90 90

"FC64.dll"+890CF3:
db 90 90 90 90 90 90

[DISABLE]
dealloc(newmem)
// read address
"FC64.dll"+29B0C6:
movss xmm0,[rcx+14]

// FOV NOPS
"FC64.dll"+1EB9B3:
mov [rcx+0C],eax
mov eax,[rdx+10]
//
"FC64.dll"+1282C8:
movss [rcx+0C],xmm1
//
"FC64.dll"+688208:
movss [rdi+14],xmm3

// CAMERA NOPS
"FC64.dll"+1EBA1C:
mov [rcx+4C],eax
mov eax,[rdx+50]
//
"FC64.dll"+890CDB:
movss [r14+54],xmm0
//
"FC64.dll"+1EBA22:
mov [rcx+50],eax
mov eax,[rdx+54]
//
"FC64.dll"+890CE7:
movss [r14+58],xmm1
//
"FC64.dll"+1EBA28:
mov [rcx+54],eax
mov eax,[rdx+58]
//
"FC64.dll"+890CF3:
movss [r14+5C],xmm0
//
unregistersymbol(alt_pCamera)
unregistersymbol(alt_pCamera2)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>18</Key>
                <Key>119</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>3060</ID>
              <Description>"X"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>alt_pCamera</Address>
              <Offsets>
                <Offset>54</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>102</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>100</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>3</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>3062</ID>
              <Description>"Y"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>alt_pCamera</Address>
              <Offsets>
                <Offset>58</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>104</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>98</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>3</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>3064</ID>
              <Description>"Z"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>alt_pCamera</Address>
              <Offsets>
                <Offset>5C</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>105</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>99</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>3</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>3347</ID>
              <Description>"rotation 1"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>alt_pCamera</Address>
              <Offsets>
                <Offset>6C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>3349</ID>
              <Description>"rotation 1"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>alt_pCamera</Address>
              <Offsets>
                <Offset>70</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>3348</ID>
              <Description>"rotation 1"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>alt_pCamera</Address>
              <Offsets>
                <Offset>74</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>3066</ID>
              <Description>"FOV"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>alt_pCamera</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>33</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>34</Key>
                  </Keys>
                  <Value>.05</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>3339</ID>
              <Description>"extras"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>3344</ID>
                  <Description>"X"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>404080</Color>
                  <VariableType>Float</VariableType>
                  <Address>alt_pCamera2</Address>
                  <Offsets>
                    <Offset>54</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>102</Key>
                      </Keys>
                      <Value>.05</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>100</Key>
                      </Keys>
                      <Value>.05</Value>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>102</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>2</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>100</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>3</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>3345</ID>
                  <Description>"Y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>404080</Color>
                  <VariableType>Float</VariableType>
                  <Address>alt_pCamera2</Address>
                  <Offsets>
                    <Offset>58</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>104</Key>
                      </Keys>
                      <Value>.05</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>98</Key>
                      </Keys>
                      <Value>.05</Value>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>104</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>2</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>98</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>3</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>3346</ID>
                  <Description>"Z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>404080</Color>
                  <VariableType>Float</VariableType>
                  <Address>alt_pCamera2</Address>
                  <Offsets>
                    <Offset>5C</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>105</Key>
                      </Keys>
                      <Value>.05</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>99</Key>
                      </Keys>
                      <Value>.05</Value>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>105</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>2</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>99</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>3</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>3343</ID>
                  <Description>"FOV"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>404080</Color>
                  <VariableType>Float</VariableType>
                  <Address>alt_pCamera2</Address>
                  <Offsets>
                    <Offset>14</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>33</Key>
                      </Keys>
                      <Value>.05</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>34</Key>
                      </Keys>
                      <Value>.05</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2004</ID>
          <Description>"Timestop [F6]"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(exit)

label(pSpeed)
registersymbol(pSpeed)

newmem:
mov [pSpeed],rcx
cvtsd2ss xmm0,[rcx+60]
jmp exit

exit:
jmp returnhere

//
pSpeed:
dq 0
//

"FC64.dll"+413C87:
jmp newmem
returnhere:

[DISABLE]
dealloc(newmem)
"FC64.dll"+413C87:
cvtsd2ss xmm0,[rcx+60]
unregistersymbol(pSpeed)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>117</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>2006</ID>
              <Description>"F6 = Freeze"</Description>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>FF00FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>2007</ID>
              <Description>"F7 = Resume"</Description>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>FF00FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>2005</ID>
              <Description>"Game Speed"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>pSpeed</Address>
              <Offsets>
                <Offset>64</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>117</Key>
                    <Key>18</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>118</Key>
                    <Key>18</Key>
                  </Keys>
                  <Value>1.875</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>3058</ID>
              <Description>"Game Speed"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Float</VariableType>
              <Address>pSpeed</Address>
              <Offsets>
                <Offset>6C</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>117</Key>
                  </Keys>
                  <Value>.47</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>118</Key>
                  </Keys>
                  <Value>1.4</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>111</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>106</Key>
                  </Keys>
                  <Value>.47</Value>
                  <ID>3</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>117</Key>
                  </Keys>
                  <Value>1.1</Value>
                  <ID>4</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>426</ID>
      <Description>"CHEATS"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>134</ID>
          <Description>"Teleport"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_TeleportCode,FC64.dll,48 8B 86 80 ? ? ? 49 8D 5C 24 24 48 8B 48 20 4D 89 7C 24 18)
aobscanmodule(_SaveWAyPointCoordCode,FC64.dll,F3 0F 10 08 F3 0F 10 40 04 F3 0F 5C 8B)
aobscanmodule(_GetPlayerCoord,FC64.dll,48 8B 83 E8 ? ? ? 33 C9 0F 28 48 10 48 8D 45 B0)
alloc(teleportmem,2048,FC64.dll)
alloc(newmem,2048,FC64.dll)
alloc(newmem1,2048,FC64.dll)
registersymbol(z_coord)
registersymbol(x_coord)
registersymbol(y_coord)
registersymbol(z_coord_undo)
registersymbol(x_coord_undo)
registersymbol(y_coord_undo)
Registersymbol(SaveWaypointCoord_X)
Registersymbol(SaveWaypointCoord_Y)
Registersymbol(SaveWaypointCoord_Z)
registersymbol(s_enable)
registersymbol(l_enable)
registersymbol(u_enable)
Registersymbol(_WriteWayPointCoordsToPlayerLocation)
Registersymbol(_TeleportCode)
Registersymbol(_SaveWAyPointCoordCode)
Registersymbol(GetPlayerCoord_X)
Registersymbol(GetPlayerCoord_Y)
Registersymbol(GetPlayerCoord_Z)
Registersymbol(_GetPlayerCoord)

alloc(s_enable,4)
alloc(l_enable,4)
alloc(u_enable,4)
alloc(z_coord,4)
alloc(x_coord,4)
alloc(y_coord,4)
alloc(z_coord_undo,4)
alloc(x_coord_undo,4)
alloc(y_coord_undo,4)
alloc(SaveWaypointCoord_X,4)
alloc(SaveWaypointCoord_Y,4)
alloc(SaveWaypointCoord_Z,4)
alloc(_WriteWayPointCoordsToPlayerLocation,4)
alloc(GetPlayerCoord_X,4)
alloc(GetPlayerCoord_Y,4)
alloc(GetPlayerCoord_Z,4)

label(returnteleport)
label(originalcodeteleport)
label(exitteleport)
label(save_coord)
label(load_coord)
label(undo_coord)
label(returnhere)
label(originalcode)
label(exit)
label(WriteWayPointCoordsToPlayerLocation)
label(returnhere1)
label(originalcode1)
label(exit1)


newmem1: //this is allocated memory, you have read,write,execute access
movss xmm1,[rax]
movss [GetPlayerCoord_X],xmm1
movss xmm1,[rax+04]
movss [GetPlayerCoord_Y],xmm1
movss xmm1,[rax+08]
movss [GetPlayerCoord_Z],xmm1

originalcode1:
movaps xmm0,[rax]
movaps [rcx+00000090],xmm0

exit1:
jmp returnhere1


newmem:
movss xmm11,[rax]
movss [SaveWaypointCoord_X],xmm11
movss xmm11,[rax+04]
movss [SaveWaypointCoord_Y],xmm11
movss xmm11,[rax+08]
movss [SaveWaypointCoord_Z],xmm11

originalcode:
movss xmm1,[rax]
movss xmm0,[rax+04]

exit:
jmp returnhere



teleportmem:
cmp [s_enable],1
je save_coord

cmp [l_enable],1
je load_coord

cmp [u_enable],1
je undo_coord

cmp [_WriteWayPointCoordsToPlayerLocation],1
je WriteWayPointCoordsToPlayerLocation

jmp originalcodeteleport

save_coord:
mov [s_enable],0
movss xmm12,[rax+120]
movss [x_coord],xmm12
movss xmm12,[rax+124]
movss [z_coord],xmm12
movss xmm12,[rax+128]
movss [y_coord],xmm12
jmp originalcodeteleport

load_coord:
mov [l_enable],0
cmp [z_coord],0
je originalcodeteleport
// Save actual Position (for UNDO TELEPORT) when press LOAD POSiTiON
movss xmm12,[rax+00000120]
movss [x_coord_undo],xmm12
movss xmm12,[rax+00000124]
movss [z_coord_undo],xmm12
movss xmm12,[rax+00000128]
movss [y_coord_undo],xmm12
// Save actual Position (for UNDO TELEPORT) when press LOAD POSiTiON
movss xmm12,[x_coord]
movss [rax+00000120],xmm12
movss xmm12,[z_coord]
movss [rax+00000124],xmm12
movss xmm12,[y_coord]
movss [rax+00000128],xmm12
jmp originalcodeteleport

undo_coord:
mov [l_enable],0
mov [s_enable],0
mov [u_enable],0
cmp [z_coord_undo],0
je originalcodeteleport
movss xmm12,[x_coord_undo]
movss [rax+00000120],xmm12
movss xmm12,[z_coord_undo]
movss [rax+00000124],xmm12
movss xmm12,[y_coord_undo]
movss [rax+00000128],xmm12
jmp originalcodeteleport


///////////////TELEPORT TO WAYPOiNT//////////////
WriteWayPointCoordsToPlayerLocation:
mov byte ptr [_WriteWayPointCoordsToPlayerLocation],0
movss xmm11,[SaveWaypointCoord_X]
movss [rax+00000120],xmm11
movss xmm11,[SaveWaypointCoord_Y]
movss [rax+00000124],xmm11
movss xmm11,[SaveWaypointCoord_Z]
movss [rax+00000128],xmm11
// Fix Fall trough ground
fld [rax+00000128]
fld1
faddp
fstp [rax+00000128]
movaps xmm1,[rax+00000120]
fld [rax+00000128]
fld1
faddp
fstp [rax+00000128]
movaps xmm1,[rax+00000120]
fld [rax+00000128]
fld1
faddp
fstp [rax+00000128]
movaps xmm1,[rax+00000120]
fld [rax+00000128]
fld1
faddp
fstp [rax+00000128]
movaps xmm1,[rax+00000120]





originalcodeteleport:
movaps xmm1,[rax+00000120]

exitteleport:
jmp returnteleport

//"FC64.dll"+1F352CE:
_TeleportCode-41:
jmp teleportmem
nop
nop
returnteleport:

//"FC64.dll"+124AC32:
_SaveWAyPointCoordCode:
jmp newmem
nop
nop
nop
nop
returnhere:

//"FC64.dll"+484791:
_GetPlayerCoord-11:
jmp newmem1
nop
nop
nop
nop
nop
returnhere1:



x_coord:
dd 0
z_coord:
dd 0
y_coord:
dd 0
s_enable:
dd 0
l_enable:
dd 0
x_coord_undo:
dd 0
z_coord_undo:
dd 0
y_coord_undo:
dd 0
u_enable:
dd 0
SaveWaypointCoord_X:
dd 0
SaveWaypointCoord_Y:
dd 0
SaveWaypointCoord_Z:
dd 0



[DISABLE]
Unregistersymbol(z_coord)
Unregistersymbol(x_coord)
Unregistersymbol(y_coord)
Unregistersymbol(z_coord_undo)
Unregistersymbol(x_coord_undo)
Unregistersymbol(y_coord_undo)
Unregistersymbol(s_enable)
Unregistersymbol(l_enable)
Unregistersymbol(u_enable)
Unregistersymbol(SaveWaypointCoord_X)
Unregistersymbol(SaveWaypointCoord_Y)
Unregistersymbol(SaveWaypointCoord_Z)
Unregistersymbol(_WriteWayPointCoordsToPlayerLocation)
Unregistersymbol(_TeleportCode)
Unregistersymbol(GetPlayerCoord_X)
Unregistersymbol(GetPlayerCoord_Y)
Unregistersymbol(GetPlayerCoord_Z)
Unregistersymbol(_GetPlayerCoord)

dealloc(z_coord)
dealloc(x_coord)
dealloc(y_coord)
dealloc(z_coord_undo)
dealloc(x_coord_undo)
dealloc(y_coord_undo)
dealloc(s_enable)
dealloc(l_enable)
dealloc(u_enable)
dealloc(teleportmem)
dealloc(SaveWaypointCoord_X)
dealloc(SaveWaypointCoord_Y)
dealloc(SaveWaypointCoord_Z)
dealloc(_WriteWayPointCoordsToPlayerLocation)
dealloc(newmem)
dealloc(GetPlayerCoord_X)
dealloc(GetPlayerCoord_Y)
dealloc(GetPlayerCoord_Z)
dealloc(newmem1)


//"FC64.dll"+1F352CE:
_TeleportCode-41:
movaps xmm1,[rax+00000120]

//"FC64.dll"+124AC32:
_SaveWAyPointCoordCode:
movss xmm1,[rax]
movss xmm0,[rax+04]

//"FC64.dll"+484791:
_GetPlayerCoord-11:
movaps xmm0,[rax]
movaps [rcx+00000090],xmm0
//Alt: db 0F 28 00 0F 29 81 90 00 00 00
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>135</ID>
              <Description>"SAVE POSiTiON"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>s_enable</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>107</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>136</ID>
              <Description>"LOAD POSiTiON"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>l_enable</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>109</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>137</ID>
              <Description>"UNDO TELEPORT"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>u_enable</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>106</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>151</ID>
              <Description>"TELEPORT TO WAYPOiNT"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_WriteWayPointCoordsToPlayerLocation</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>111</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>176</ID>
              <Description>"DEBUG"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>181</ID>
                  <Description>"Player Position X"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>GetPlayerCoord_X</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>182</ID>
                  <Description>"Player Position Y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>GetPlayerCoord_Y</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>183</ID>
                  <Description>"Player Position Z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>GetPlayerCoord_Z</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>175</ID>
                  <Description>"Waypoint Coordinate X"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>SaveWaypointCoord_X</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>177</ID>
                  <Description>"Waypoint Coordinate Y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>SaveWaypointCoord_Y</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>178</ID>
                  <Description>"Waypoint Coordinate Z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>SaveWaypointCoord_Z</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"God Mode"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_Health,FC64.dll,F3 0F 10 49 1C 45 33 C9 45 33 C0 48 FF 60 20)
Registersymbol(_Health)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//movss xmm1,[rcx+1c]
//movss [rcx+18],xmm1
cmp dword ptr [rcx+10],(int)3470402323 // Health
jne originalcode
mov dword ptr [rcx+1c],(float)301
movss xmm1,[rcx+1c]
movss [rcx+18],xmm1

originalcode:
comiss xmm0,[rcx+18]
jb _Health-7

exit:
jmp returnhere

//"FC64.dll"+8AD983:
_Health-10:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_Health)
dealloc(newmem)
//"FC64.dll"+8AD983:
_Health-10:
comiss xmm0,[rcx+18]
jb _Health-7
//Alt: db 0F 2F 41 18 72 03
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>18</Key>
                <Key>48</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"Inf Ammo"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteAmmo,FC64.dll,0F 4C CE 2B C1 89 03 48 8B 5C 24 30 C6 47 39 01)
Registersymbol(_InfiniteAmmo)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rbx],#1000

originalcode:
mov eax,[rbx]
mov ecx,eax
cmp esi,eax

exit:
jmp returnhere

//"FC64.dll"+B86FFE:
_InfiniteAmmo+-6:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_InfiniteAmmo)
dealloc(newmem)
//"FC64.dll"+B86FFE:
_InfiniteAmmo+-6:
mov eax,[rbx]
mov ecx,eax
cmp esi,eax
//Alt: db 8B 03 8B C8 3B F0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115</ID>
          <Description>"Inf Stamina"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteStamina,FC64.dll,48 89 9C 24 B0 ? ? ? 48 8B 59 08 48 85 DB)
Registersymbol(_InfiniteStamina)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)
aobscanmodule(_StaminaElephant,FC64.dll,F3 0F 59 8B 4C 05 ? ? F3 0F 58 8B 3C 05)
Registersymbol(_StaminaElephant)
alloc(newmem1,2048,FC64.dll)
label(returnhere1)
label(originalcode1)
label(exit1)


newmem1: //this is allocated memory, you have read,write,execute access
mov [rbx+0000053C],(float)100

originalcode1:
movss xmm0,[rbx+0000053C]

exit1:
jmp returnhere1


newmem: //this is allocated memory, you have read,write,execute access
cmp dword ptr [rcx+10],(int)999083124 // Stamina
jne originalcode
mov [rcx+18],(float)100

originalcode:
movss xmm3,[rcx+18]

exit:
jmp returnhere

//"FC64.dll"+9014F7:
_InfiniteStamina-1C:
jmp newmem
returnhere:

//"FC64.dll"+8A30A5:
_StaminaElephant-1E:
jmp newmem1
nop
nop
nop
returnhere1:



 
 
[DISABLE]
Unregistersymbol(_InfiniteStamina)
dealloc(newmem)
//"FC64.dll"+9014F7:
_InfiniteStamina-1C:
movss xmm3,[rcx+18]
//Alt: db F3 0F 10 59 18

Unregistersymbol(_StaminaElephant)
dealloc(newmem1)
//"FC64.dll"+8A30A5:
_StaminaElephant-1E:
movss xmm0,[rbx+0000053C]
//Alt: db F3 0F 10 83 3C 05 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>123</ID>
          <Description>"Inf Oxygen"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteOxygen,FC64.dll,F3 0F 10 41 1C C3 CC CC CC CC CC CC CC CC CC CC F3)
alloc(newmem,2048,FC64.dll)
registersymbol(_InfiniteOxygen)
label(returnhere)
label(originalcode)
label(exit)
label(Oxygen)
newmem: //this is allocated memory, you have read,write,execute access
cmp dword ptr [rcx+10],(int)3309509967 // Oxygen
je Oxygen
cmp dword ptr [rcx+10],(int)3824979618 // Oxygen in Water
je Oxygen
jmp originalcode

Oxygen:
mov [rcx+18],(float)100

originalcode:
movss xmm0,[rcx+1C]

exit:
jmp returnhere

//"FC64.dll"+22F470:
_InfiniteOxygen:
jmp newmem
returnhere:




[DISABLE]
unregistersymbol(_InfiniteOxygen)
dealloc(newmem)
//"FC64.dll"+22F470:
_InfiniteOxygen:
movss xmm0,[rcx+1C]
//Alt: db F3 0F 10 41 1C
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>105</ID>
          <Description>"Inf Armor"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteArmor,FC64.dll,F3 0F 10 41 18 C3 CC CC CC CC CC CC CC CC CC CC F3 0F 11 49 18 C3 CC)
Registersymbol(_InfiniteArmor)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)
label(Armor)

newmem: //this is allocated memory, you have read,write,execute access
cmp dword ptr [rcx+10],(int)3207069436 // Armor
je Armor
//cmp dword ptr [rcx+10],(int)381976780 // Armor !?
//je Armor
jne originalcode

Armor:
mov [rcx+18],(float)100

originalcode:
movss xmm0,[rcx+18]

exit:
jmp returnhere

//"FC64.dll"+7D7E30:
_InfiniteArmor:
jmp newmem
returnhere:




[DISABLE]
Unregistersymbol(_InfiniteArmor)
dealloc(newmem)
//"FC64.dll"+7D7E30:
_InfiniteArmor:
movss xmm0,[rcx+18]
//Alt: db F3 0F 10 41 18
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Inf Money"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteMoney,FC64.dll,8B 87 28 01 00 00 B9 00)
aobscanmodule(_MoneyMax,FC64.dll,66 0F 6E 91 80 01 00 00 48 8B D9)
Registersymbol(_InfiniteMoney)
Registersymbol(_MoneyMax)
alloc(newmem,2048,FC64.dll)
alloc(newmem4,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)
label(returnhere4)
label(originalcode4)
label(exit4)


newmem4:
mov [rcx+00000180],#999999999

originalcode4:
movd xmm2,[rcx+00000180]

exit4:
jmp returnhere4


newmem:
  mov [rdi+00000128],#999999999

originalcode:
  mov eax,[rdi+00000128]

exit:
jmp returnhere

_InfiniteMoney:
jmp newmem
nop
returnhere:

_MoneyMax:
jmp newmem4
nop
nop
nop
returnhere4:

 
 
[DISABLE]
Unregistersymbol(_InfiniteMoney)
Unregistersymbol(_MoneyMax)
dealloc(newmem)
dealloc(newmem4)

_InfiniteMoney:
  mov eax,[rdi+00000128]
//Alt: db 8B 81 28 01 00 00

_MoneyMax:
movd xmm2,[rcx+00000180]
//Alt: db 66 0F 6E 91 90 01 00 00


</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>116</ID>
          <Description>"Inf Backpack"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(NoBackpackLimit,FC64.dll,C7 44 24 30 26 6C 06 77)
Registersymbol(NoBackpackLimit)
//"FC64.dll"+BA08E0:
NoBackpackLimit-18:
db 90 90 90


 
 
[DISABLE]
Unregistersymbol(NoBackpackLimit)
//"FC64.dll"+BA08E0:
NoBackpackLimit-18:
mov ecx,[rbx+04]
call FC64.dll+DCAEA0
//Alt: db 8B 4B 04 E8 48 CE 21 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>410</ID>
          <Description>"ARENA POINTS"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_Add_1000_ArenaPoints,FC64.dll,F3 0F 58 46 3C F3 0F 11)
Registersymbol(_Add_1000_ArenaPoints)
Registersymbol(_CurrentArenaPoints)
Registersymbol(_Add_100_AP)
Registersymbol(_Add_AP)
alloc(newmem,2048,FC64.dll)
alloc(_CurrentArenaPoints,8)
alloc(_Add_100_AP,8)
alloc(_Add_AP,4)
label(returnhere)
label(originalcode)
label(exit)


newmem: //this is allocated memory, you have read,write,execute access
mov [_CurrentArenaPoints],rsi
cmp byte ptr [_Add_AP],1
jne originalcode
fld [esi+3c] // loads first float in st(0) - our points
fld [_Add_100_AP] // loads second float, 1000 pts, but now in st(1)
fadd st(0),st(1) // add 100 to our points
fstp [esi+3c] // store at [esi+3c]

originalcode:
addss xmm0,[rsi+3C]

exit:
jmp returnhere

//"FC64.dll"+E14C57:
_Add_1000_ArenaPoints:
jmp newmem
returnhere:

_CurrentArenaPoints:
dd 0
_Add_100_AP:
dq (float)1000
_Add_AP:
dd 0

[DISABLE]
Unregistersymbol(_Add_1000_ArenaPoints)
Unregistersymbol(_CurrentArenaPoints)
Unregistersymbol(_Add_100_AP)
Unregistersymbol(_Add_AP)
dealloc(_Add_100_AP)
dealloc(newmem)
dealloc(_Add_AP)
dealloc(_CurrentArenaPoints)
//"FC64.dll"+E14C57:
_Add_1000_ArenaPoints:
addss xmm0,[rsi+3C]
//Alt: db F3 0F 58 4E 3C
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>416</ID>
              <Description>"DEBUG"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>411</ID>
                  <Description>"CURRENT ARENA POiNTS"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>_CurrentArenaPoints</Address>
                  <Offsets>
                    <Offset>3C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>415</ID>
              <Description>"ADD 1000 AP ON KiLL"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_Add_Ap</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>256</ID>
          <Description>"BOW HAS ALWAYS TENSiON"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_BowHasAlwaysTension,FC64.dll,F3 0F 10 8E 70 0A 00 00)
Registersymbol(_BowHasAlwaysTension)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rsi+00000A70],(float)1

originalcode:
movss xmm1,[rsi+00000A70]

exit:
jmp returnhere

//"FC64.dll"+DA38F0:
_BowHasAlwaysTension:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_BowHasAlwaysTension)
dealloc(newmem)
//"FC64.dll"+DA38F0:
_BowHasAlwaysTension:
movss xmm1,[rsi+00000A70]
//Alt: db F3 0F 10 8E 70 0A 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>414</ID>
          <Description>"DiSARM ENEMYS ON SHOT"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_DisarmEnemysOnShot,FC64.dll,8B 81 04 01 00 00 3B D8)
registersymbol(_DisarmEnemysOnShot)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)


newmem: //this is allocated memory, you have read,write,execute access
cmp dword [rcx+54],(float)0
jnz originalcode
mov [rcx+00000104],0

originalcode:
mov eax,[rcx+00000104]

exit:
jmp returnhere

//"FC64.dll"+D412A7:
_DisarmEnemysOnShot:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
unregistersymbol(_DisarmEnemysOnShot)
dealloc(newmem)
//"FC64.dll"+D412A7:
_DisarmEnemysOnShot:
mov eax,[rcx+00000104]
//Alt: db 8B 81 04 01 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>92</ID>
          <Description>"GET MAX EXP"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_GetMaxExp,FC64.dll,48 8B 47 08 48 8D 8C 24 80 00 00 00 BA 01 00 00 00)
Registersymbol(_GetMaxExp)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov dword ptr [rdi+64],#999999999

originalcode:
mov eax,[rdi+64]
mov r8d,[rcx+rdx*4]

exit:
jmp returnhere

//"FC64.dll"+140626E:
_GetMaxExp-48:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_GetMaxExp)
dealloc(newmem)
//"FC64.dll"+140626E:
_GetMaxExp-48:
mov eax,[rdi+64]
mov r8d,[rcx+rdx*4]
//Alt: db 8B 47 64 44 8B 04 91
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>86</ID>
          <Description>"GET MAX KARMA"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_MaxKarmaLvl,FC64.dll,8D 50 FF 48 8B 47 30 48 8B 88 A8 )
Registersymbol(_MaxKarmaLvl)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

label(karma)
registersymbol(karma)

newmem: //this is allocated memory, you have read,write,execute access
mov [karma],rdi
mov dword ptr [rdi+7c],#9999999

originalcode:
mov eax,[rdi+7C]
lea ecx,[rsi+rax]

exit:
jmp returnhere

karma:
dd 0

//"FC64.dll"+1406563:
_MaxKarmaLvl+17:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_MaxKarmaLvl)
dealloc(newmem)
//"FC64.dll"+1406563:
_MaxKarmaLvl+17:
mov eax,[rdi+7C]
lea ecx,[rsi+rax]
unregistersymbol(karma)
//Alt: db 8B 47 78 8D 0C 06
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>221</ID>
          <Description>"HEALTH ELEPHANT"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteHealthElephant,FC64.dll, F3 0F 10 41 18 F3 0F 5C 41 1C )
aobscanmodule(_NoFallDamageElephant,FC64.dll,F3 0F 11 49 18 45)
alloc(newmem,2048,FC64.dll)
alloc(newmem2,2048,FC64.dll)
alloc(_GetElephantHealth,8)
alloc(_SetElephantsHealtht,8)
Registersymbol(_InfiniteHealthElephant)
Registersymbol(_GetElephantHealth)
Registersymbol(_SetElephantsHealtht)
registersymbol(_NoFallDamageElephant)
label(returnhere)
label(originalcode)
label(exit)
label(Elephant)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
movss [rcx+18],xmm1
cmp dword ptr [rcx+1c],(float)2000
jne exit2
mov [rcx+18],(float)99999

exit2:
jmp returnhere2


newmem:
cmp dword ptr [rcx+1C],(float)2000 // Max Health Elephant
je Elephant
jmp originalcode

Elephant:
mov [_GetElephantHealth],rcx
cmp byte ptr [_SetElephantsHealtht],1
jne originalcode
mov dword ptr [rcx+18],(float)99999




originalcode:
movss xmm0,[rcx+18]


exit:
jmp returnhere

_InfiniteHealthElephant:
jmp newmem
returnhere:

//"FC64.dll"+909825:
_NoFallDamageElephant:
jmp newmem2
returnhere2:

_SetElephantsHealtht:
dd 1
 
 
[DISABLE]
dealloc(_GetElephantHealth)
dealloc(newmem2)
unregistersymbol(_NoFallDamageElephant)
Unregistersymbol(_InfiniteHealthElephant)
Unregistersymbol(_GetElephantHealth)
Unregistersymbol(_SetElephantsHealtht)
dealloc(newmem)
dealloc(_SetElephantsHealtht)
_InfiniteHealthElephant:
movss xmm0,[rcx+18]
//Alt: db F3 0F 10 41 18

//"FC64.dll"+909825:
_NoFallDamageElephant:
movss [rcx+18],xmm1
//Alt: db F3 0F 11 49 18
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>239</ID>
              <Description>"ENABLE iNFiNITE HEALTH ELEPHANTS"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_SetElephantsHealtht</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>223</ID>
              <Description>"DEBUG"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>238</ID>
                  <Description>"Current Elephant's Health"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>_GetElephantHealth</Address>
                  <Offsets>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>289</ID>
          <Description>"NO CROSSHAiR DiSAPPEAR"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_CrosshairNotDissappear,FC64.dll,48 8B 8F 18 01 00 00 F3)
registersymbol(_CrosshairNotDissappear)
//"FC64.dll"+12A1AD9:
_CrosshairNotDissappear-2:
db EB 1B

 
 
[DISABLE]
_CrosshairNotDissappear-2:
db 74 1B
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>198</ID>
          <Description>"NO FALL DAMAGE"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_NoFallingDamage,FC64.dll,F3 0F 10 87 30 09 ? ? F3 0F 58 87 50 09)
Registersymbol(_NoFallingDamage)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rdi+00000930],(float)-100

originalcode:
movss xmm0,[rdi+00000930]

exit:
jmp returnhere

_NoFallingDamage:
jmp newmem
nop
nop
nop
returnhere:




[DISABLE]
Unregistersymbol(_NoFallingDamage)
dealloc(newmem)
_NoFallingDamage:
movss xmm0,[rdi+00000930]
//Alt: db F3 0F 10 87 30 09 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"ONE HiT KiLLS"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_OneHitKills,FC64.dll,48 8D 4C 24 30 48 89 BC 24 A0 ? ? ? F3 0F 11 44 24 20)
Registersymbol(_OneHitKills)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
cmp dword ptr [rcx+10],(int)999083124 // Stamina
je originalcode
cmp dword ptr [rcx+18],(float)300 // Health
je originalcode
cmp dword ptr [rcx+10],(int)3207069436 // Armor
je originalcode
cmp dword ptr [rcx+10],(int)3824979618 // Oxygen in Water
je originalcode
cmp dword ptr [rcx+10],(int)3309509967 // Oxygen
je originalcode
cmp dword ptr [rcx+1c],(float)2000 // Elephant
je originalcode
cmp dword ptr [rcx+1c],(float)185 // max health White Tiger
je originalcode
cmp dword ptr [rcx+1c],(float)301 // max health player
je originalcode
mov [rcx+18],(float)-100

originalcode:
movss xmm0,[rcx+18]

exit:
jmp returnhere

//"FC64.dll"+8FA646:
_OneHitKills-12:
jmp newmem
returnhere:


 
 
[DISABLE]
Unregistersymbol(_OneHitKills)
dealloc(newmem)
//"FC64.dll"+8FA646:
_OneHitKills-12:
movss xmm0,[rcx+18]
//Alt: db F3 0F 10 41 18
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"REMOVE C4 LiMiT"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_NoC4Limit,FC64.dll,C6 83 08 02 ? ? 01 B0)
Registersymbol(_NoC4Limit)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [rbx+000001B8],#1

originalcode:
cmp dword ptr [rbx+000001B8],00

exit:
jmp returnhere

//"FC64.dll"+D50276:
_NoC4Limit-15:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_NoC4Limit)
dealloc(newmem)
//"FC64.dll"+D50276:
_NoC4Limit-15:
dealloc(newmem)
cmp dword ptr [rbx+000001B8],00
//Alt: db 83 B9 B8 01 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>424</ID>
          <Description>"REMOVE MINE LIMIT"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(_RemoveMineLimit,FC64.dll,3B BD B8 01 00 00) // should be unique
alloc(newmem,$1000,FC64.dll)

label(code)
label(return)

newmem:
mov [rbp+000001B8],0

code:
  cmp edi,[rbp+000001B8]
  jmp return

_RemoveMineLimit:
  jmp newmem
  nop
return:
registersymbol(_RemoveMineLimit)

[DISABLE]

_RemoveMineLimit:
  db 3B BD B8 01 00 00

unregistersymbol(_RemoveMineLimit)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FC64.dll"+D63385

"FC64.dll"+D63362: 4C 89 74 24 20                 -  mov [rsp+20],r14
"FC64.dll"+D63367: E8 F4 16 2A FF                 -  call FC64.dll+4A60
"FC64.dll"+D6336C: FF CF                          -  dec edi
"FC64.dll"+D6336E: 48 83 EE 08                    -  sub rsi,08
"FC64.dll"+D63372: FF 4B 08                       -  dec [rbx+08]
"FC64.dll"+D63375: 75 08                          -  jne FC64.dll+D6337F
"FC64.dll"+D63377: 48 8B CB                       -  mov rcx,rbx
"FC64.dll"+D6337A: E8 01 DF 32 FF                 -  call FC64.dll+91280
"FC64.dll"+D6337F: FF C7                          -  inc edi
"FC64.dll"+D63381: 48 83 C6 08                    -  add rsi,08
// ---------- INJECTING HERE ----------
"FC64.dll"+D63385: 3B BD B8 01 00 00              -  cmp edi,[rbp+000001B8]
// ---------- DONE INJECTING  ----------
"FC64.dll"+D6338B: 72 85                          -  jb FC64.dll+D63312
"FC64.dll"+D6338D: 4C 8B B4 24 88 00 00 00        -  mov r14,[rsp+00000088]
"FC64.dll"+D63395: 4C 8B A4 24 80 00 00 00        -  mov r12,[rsp+00000080]
"FC64.dll"+D6339D: 48 8B 74 24 78                 -  mov rsi,[rsp+78]
"FC64.dll"+D633A2: 48 8B 5C 24 70                 -  mov rbx,[rsp+70]
"FC64.dll"+D633A7: C7 85 0C 02 00 00 00 00 00 3F  -  mov [rbp+0000020C],3F000000
"FC64.dll"+D633B1: 48 83 C4 50                    -  add rsp,50
"FC64.dll"+D633B5: 41 5D                          -  pop r13
"FC64.dll"+D633B7: 5F                             -  pop rdi
"FC64.dll"+D633B8: 5D                             -  pop rbp
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>300</ID>
          <Description>"REMOVE WALK SPEED LIMiT WHEN FiRiNG"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_RemoveWalkSpeedLimitWhenFiring,FC64.dll,F3 0F 59 B0 64 03 00 00)
registersymbol(_RemoveWalkSpeedLimitWhenFiring)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rax+00000364],(float)1

originalcode:
mulss xmm6,[rax+00000364]

exit:
jmp returnhere

//"FC64.dll"+C6A21A:
_RemoveWalkSpeedLimitWhenFiring:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
unregistersymbol(_RemoveWalkSpeedLimitWhenFiring)
dealloc(newmem)
//"FC64.dll"+C6A21A:
_RemoveWalkSpeedLimitWhenFiring:
mulss xmm6,[rax+00000364]
//Alt: db F3 0F 59 B0 64 03 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"SKiLL POiNTS"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
Aobscanmodule(_SkillPoints,FC64.dll,41 8B 46 70 48 8D 55 E0 40 32 F6)
Registersymbol(_SkillPoints)
Registersymbol(_GetSkillPoints)
Registersymbol(_ResetSkillPoints)
Registersymbol(_CurrentSkillPoints)
alloc(newmem,2048,"FC64.dll)
alloc(_ResetSkillPoints,4)
alloc(_GetSkillPoints,4)
alloc(_CurrentSkillPoints,4)
label(returnhere)
label(originalcode)
label(exit)
label(GetSkillPoints)
label(ResetSkillPoints)

newmem: //this is allocated memory, you have read,write,execute access
cmp [_GetSkillPoints],1
je GetSkillPoints
cmp [_ResetSkillPoints],1
je ResetSkillPoints
mov [_CurrentSkillPoints],r14
jmp originalcode


GetSkillPoints:
mov [_GetSkillPoints],0
mov [r14+70],#99
jmp originalcode

ResetSkillPoints:
mov [_ResetSkillPoints],0
mov [r14+70],0
jmp originalcode

originalcode:
mov eax,[r14+70]
lea rdx,[rbp-20]

exit:
jmp returnhere

_SkillPoints:
jmp newmem
nop
nop
nop
returnhere:

_GetSkillPoints:
dd 0
_ResetSkillPoints:
dd 0

[DISABLE]
Unregistersymbol(_SkillPoints)
Unregistersymbol(_GetSkillPoints)
Unregistersymbol(_ResetSkillPoints)
Unregistersymbol(_CurrentSkillPoints)
dealloc(newmem)
dealloc(_ResetSkillPoints)
dealloc(_GetSkillPoints)
dealloc(_CurrentSkillPoints)
_SkillPoints:
mov eax,[r14+70]
lea rdx,[rbp-20]
//Alt: db 41 8B 46 70 48 8D 55 E0
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>398</ID>
              <Description>"GET 99 SKiLL POiNTS"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_GetSkillPoints</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>399</ID>
              <Description>"RESET SKiLL POiNTS"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_ResetSkillPoints</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>401</ID>
              <Description>"DEBUG"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>400</ID>
                  <Description>"Current Skill Points (Select a Skill to see Effect)"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>_CurrentSkillPoints</Address>
                  <Offsets>
                    <Offset>70</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>195</ID>
          <Description>"SUPER JUMP"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_SuperJump,FC64.dll, F3 0F 10 90 98 09 00 00)
alloc(newmem,2048,FC64.dll)
Registersymbol(_SuperJump)
Registersymbol(_IncreaseJumpHeight)
Registersymbol(_IncreaseJumpHeightBy_1)
Registersymbol(_DecreaseJumpHeight)
Registersymbol(_DecreaseJumpHeightBy_1)
Registersymbol(_RestoreJumpHeight)
Registersymbol(_GetJumpHeight)
alloc(_IncreaseJumpHeight,4)
alloc(_IncreaseJumpHeightBy_1,4)
alloc(_DecreaseJumpHeight,4)
alloc(_DecreaseJumpHeightBy_1,4)
alloc(_RestoreJumpHeight,4)
alloc(_GetJumpHeight,4)
label(returnhere)
label(originalcode)
label(exit)
label(IncreaseJumpHeight)
label(DecreaseJumpHeight)
label(RestoreJumpHeight)
label(IncreaseJumpHeightBy_1)
label(DecreaseJumpHeightBy_1)

newmem: //this is allocated memory, you have read,write,execute access
cmp byte ptr [_IncreaseJumpHeight],1
je IncreaseJumpHeight
cmp byte ptr [_DecreaseJumpHeight],1
je DecreaseJumpHeight
cmp byte ptr [_RestoreJumpHeight],1
je RestoreJumpHeight
cmp byte ptr [_IncreaseJumpHeightBy_1],1
je IncreaseJumpHeightBy_1
cmp byte ptr [_DecreaseJumpHeightBy_1],1
je DecreaseJumpHeightBy_1
cmp dword ptr [rax+00000998],(float)1.200000048
je originalcode
mov [_GetJumpHeight],rax
jmp originalcode

IncreaseJumpHeight:
mov byte ptr [_IncreaseJumpHeight],0
cmp dword ptr [rax+00000998],(float)1.200000048
je originalcode
fld [rax+00000998]
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fld1
faddp
fstp [rax+00000998]

jmp originalcode
DecreaseJumpHeight:
mov byte ptr [_DecreaseJumpHeight],0
cmp dword ptr [rax+00000998],(float)1.25
jle originalcode
cmp dword ptr [rax+00000998],(float)1.200000048
je originalcode
fld [rax+00000998]
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fld1
fsubp
fstp [rax+00000998]

jmp originalcode

IncreaseJumpHeightBy_1:
mov byte ptr [_IncreaseJumpHeightBy_1],0
fld [rax+00000998]
fld1
faddp
fstp [rax+00000998]
jmp originalcode

DecreaseJumpHeightBy_1:
mov byte ptr [_DecreaseJumpHeightBy_1],0
fld [rax+00000998]
fld1
fsubp
fstp [rax+00000998]
jmp originalcode



RestoreJumpHeight:
mov byte ptr [_RestoreJumpHeight],0
cmp dword ptr [rax+00000998],(float)1.200000048
je originalcode
mov dword ptr [rax+00000998],(float)1.25
jmp originalcode




originalcode:
movss xmm2,[rax+00000998]


exit:
jmp returnhere

//"FC64.dll"+C41A28:
_SuperJump:
jmp newmem
nop
nop
nop
returnhere:

_IncreaseJumpHeight:
dd 0
_DecreaseJumpHeight:
dd 0
_IncreaseJumpHeightBy_1:
dd 0
_DecreaseJumpHeightBy_1:
dd 0
_RestoreJumpHeight:
dd 0

[DISABLE]
Unregistersymbol(_IncreaseJumpHeight)
Unregistersymbol(_DecreaseJumpHeight)
Unregistersymbol(_IncreaseJumpHeightBy_1)
Unregistersymbol(_DecreaseJumpHeightBy_1)
Unregistersymbol(_RestoreJumpHeight)
Unregistersymbol(_GetJumpHeight)
Unregistersymbol(_SuperJump)
dealloc(_DecreaseJumpHeight)
dealloc(_IncreaseJumpHeight)
dealloc(_IncreaseJumpHeightBy_1)
dealloc(_DecreaseJumpHeightBy_1)
dealloc(_RestoreJumpHeight)
dealloc(_GetJumpHeight)
dealloc(newmem)
//"FC64.dll"+C41A28:
_SuperJump:
movss xmm2,[rax+00000998]
//Alt: db F3 0F 10 90 98 09 00 00
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>407</ID>
              <Description>"iNCREASE JUMP HEiGHT BY 1"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_IncreaseJumpHeightBy_1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>196</ID>
              <Description>"iNCREASE JUMP HEiGHT BY 25"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_IncreaseJumpHeight</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>406</ID>
              <Description>"DECREASE JUMP HEiGHT BY 1"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_DecreaseJumpHeightBy_1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>231</ID>
              <Description>"DECREASE JUMP HEiGHT BY 25"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_DecreaseJumpHeight</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>101</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>197</ID>
              <Description>"RESTORE JUMP HEiGHT"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_RestoreJumpHeight</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>230</ID>
              <Description>"DEBUG"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>229</ID>
                  <Description>"Current Jump Height"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>_GetJumpHeight</Address>
                  <Offsets>
                    <Offset>998</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>185</ID>
          <Description>"SUPER SPEED"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_Speed,FC64.dll, F3 0F 11 4C 24 50 80 B8 C0 0B )
alloc(newmem,2048,FC64.dll)
Registersymbol(_Speed)
Registersymbol(_IncreaseSpeedValue)
Registersymbol(_DecreaseSpeedValue)
Registersymbol(_RestoreSpeedValue)
Registersymbol(_GetSpeedBasePtr)
alloc(_IncreaseSpeedValue,4)
alloc(_DecreaseSpeedValue,4)
alloc(_RestoreSpeedValue,4)
alloc(_GetSpeedBasePtr,4)
label(returnhere)
label(originalcode)
label(exit)
label(IncreaseSpeed)
label(DecreaseSpeed)
label(RestoreSpeed)

newmem: //this is allocated memory, you have read,write,execute access
mov [_GetSpeedBasePtr],rax// Get Value of Walking Speed
 // B4 = Get Value of Sprint Speed
cmp byte ptr [_IncreaseSpeedValue],1
je IncreaseSpeed
cmp byte ptr [_DecreaseSpeedValue],1
je DecreaseSpeed
cmp byte ptr [_RestoreSpeedValue],1
je RestoreSpeed
jmp originalcode


IncreaseSpeed:
mov byte ptr [_IncreaseSpeedValue],0
fld [rax+000000B0]
fld1
faddp
fstp [rax+000000B0]
fld [rax+000000B4]
fld1
faddp
fstp [rax+000000B4]
jmp originalcode

DecreaseSpeed:
mov byte ptr [_DecreaseSpeedValue],0
fld [rax+000000B0]
fld1
fsubp
fstp [rax+000000B0]
fld [rax+000000B4]
fld1
fsubp
fstp [rax+000000B4]
jmp originalcode

RestoreSpeed:
mov byte ptr [_RestoreSpeedValue],0
mov dword ptr [rax+000000B0],(float)1.0
mov dword ptr [rax+000000B4],(float)1.0
jmp originalcode

originalcode:
movss xmm0,[rax+000000B0]

exit:
jmp returnhere

//"FC64.dll"+C43833:
_Speed-20:
jmp newmem
nop
nop
nop
returnhere:

_IncreaseSpeedValue:
dd 0
 _DecreaseSpeedValue:
dd 0
_RestoreSpeedValue:
dd 0
 
[DISABLE]
Unregistersymbol(_Speed)
Unregistersymbol(_IncreaseSpeedValue)
Unregistersymbol(_DecreaseSpeedValue)
Unregistersymbol(_RestoreSpeedValue)
Unregistersymbol(_GetSpeedBasePtr)
dealloc(_GetSpeedBasePtr)
dealloc(_IncreaseSpeedValue)
dealloc(_DecreaseSpeedValue)
dealloc(_RestoreSpeedValue)
dealloc(newmem)

//"FC64.dll"+C43833:
_Speed-20:
movss xmm0,[rax+000000B0]
//Alt: db F3 0F 10 80 B0 00 00 00
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>186</ID>
              <Description>"iNCREASE SPEED BY 1.0"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_IncreaseSpeedValue</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>97</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>187</ID>
              <Description>"DECREASE SPEED BY 1.0"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_DecreaseSpeedValue</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>188</ID>
              <Description>"RESTORE SPEED TO DEFAULT"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_RestoreSpeedValue</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>191</ID>
              <Description>"DEBUG"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>241</ID>
                  <Description>"Current Sprint Speed"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>_GetSpeedBasePtr</Address>
                  <Offsets>
                    <Offset>B4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>240</ID>
                  <Description>"Current Walk Speed"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>_GetSpeedBasePtr</Address>
                  <Offsets>
                    <Offset>B0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>169</ID>
          <Description>"SUPER SPEED ELEPHANT"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_SuperSpeedElephant,FC64.dll,F3 0F 10 9E A4 03 ? ? F3 0F 10 AE A8 03 )
Registersymbol(_SuperSpeedElephant)
Registersymbol(_IncreaseElephantSpeed)
Registersymbol(_DecreaseElephantSpeed)
Registersymbol(_RestoreElephantSpeed)
Registersymbol(_GetElephantBasePtr)
alloc(newmem,2048,FC64.dll)
alloc(_IncreaseElephantSpeed,4)
alloc(_DecreaseElephantSpeed,4)
alloc(_RestoreElephantSpeed,4)
alloc(_GetElephantBasePtr,4)
label(returnhere)
label(originalcode)
label(exit)
label(IncreaseElephantSpeed)
label(DecreaseElephantSpeed)
label(RestoreElephantSpeed)

newmem: //this is allocated memory, you have read,write,execute access
cmp byte ptr [_IncreaseElephantSpeed],1
je IncreaseElephantSpeed
cmp byte ptr [_DecreaseElephantSpeed],1
je DecreaseElephantSpeed
cmp byte ptr [_RestoreElephantSpeed],1
je RestoreElephantSpeed
mov [_GetElephantBasePtr],rsi
jmp originalcode

IncreaseElephantSpeed:
mov byte ptr [_IncreaseElephantSpeed],0
fld [rsi+000001DC]
fld1
faddp
fstp [rsi+000001DC]
fld [rsi+000001E0]
fld1
faddp
fstp [rsi+000001E0]
fld [rsi+000001E4]
fld1
faddp
fstp [rsi+000001E4]
jmp originalcode



DecreaseElephantSpeed:
mov byte ptr [_DecreaseElephantSpeed],0
fld [rsi+000001DC]
fld1
fsubp
fstp [rsi+000001DC]
fld [rsi+000001E0]
fld1
fsubp
fstp [rsi+000001E0]
fld [rsi+000001E4]
fld1
fsubp
fstp [rsi+000001E4]
jmp originalcode



RestoreElephantSpeed:
mov byte ptr [_RestoreElephantSpeed],0
mov dword ptr [rsi+000001DC],(float)6
mov dword ptr [rsi+000001E0],(float)6
mov dword ptr [rsi+000001E4],(float)6
originalcode:
movss xmm5,[rsi+000001E4]

exit:
jmp returnhere

//"FC64.dll"+8A2302:
_SuperSpeedElephant-1E:
jmp newmem
nop
nop
nop
returnhere:

_IncreaseElephantSpeed:
dd 0
_DecreaseElephantSpeed:
dd 0
_RestoreElephantSpeed:
dd 0


[DISABLE]
Unregistersymbol(_SuperSpeedElephant)
Unregistersymbol(_IncreaseElephantSpeed)
Unregistersymbol(_DecreaseElephantSpeed)
Unregistersymbol(_RestoreElephantSpeed)
Unregistersymbol(_GetElephantBasePtr)
dealloc(_IncreaseElephantSpeed)
dealloc(_DecreaseElephantSpeed)
dealloc(_RestoreElephantSpeed)
dealloc(_GetElephantBasePtr)
dealloc(newmem)
//"FC64.dll"+8A2302:
_SuperSpeedElephant-1E:
movss xmm5,[rsi+000001E4]
//Alt: db F3 0F 10 AE E4 01 00 00
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>214</ID>
              <Description>"iNCREASE ELEPHANT SPEED BY 1.0"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_IncreaseElephantSpeed</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>215</ID>
              <Description>"DECREASE ELEPHANT SPEED BY 1.0"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_DecreaseElephantSpeed</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>216</ID>
              <Description>"RESTORE ELEPHANT SPEED"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_RestoreElephantSpeed</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>213</ID>
              <Description>"DEBUG"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>210</ID>
                  <Description>"Elephant Speed Offset 1DC"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>_GetElephantBasePtr</Address>
                  <Offsets>
                    <Offset>1DC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>211</ID>
                  <Description>"Elephant Speed Offset 1E0"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>_GetElephantBasePtr</Address>
                  <Offsets>
                    <Offset>1E0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>212</ID>
                  <Description>"Elephant Speed Offset 1E4"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>_GetElephantBasePtr</Address>
                  <Offsets>
                    <Offset>1E4</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>293</ID>
          <Description>"USE ANY ITEM FOR CRAFTING"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_UseAnyItemForCraft,FC64.dll,8B 81 20 01 00 00 33 FF 48 8D 34 C3 8B EA 48 3B DE 74 28)
Registersymbol(_UseAnyItemForCraft)

//"FC64.dll"+B94F69:
_UseAnyItemForCraft+2E:
db 74 02


 
 
[DISABLE]
Unregistersymbol(_UseAnyItemForCraft)
//"FC64.dll"+B94F69:
_UseAnyItemForCraft+2E:
db 75 02
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>395</ID>
          <Description>"WINGSUIT SCRiPT"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_FlyUpDownWingsuit,FC64.dll,0F 28 99 C0 01 00 00)
registersymbol(_FlyUpDownWingsuit)
Registersymbol(_Wingsuit_Up)
Registersymbol(_Wingsuit_Down)
alloc(newmem,2048,FC64.dll)
alloc(_Wingsuit_Up,4)
alloc(_Wingsuit_Down,4)
label(returnhere)
label(originalcode)
label(exit)
label(WingsuitUp)
label(WingsuitDown)

newmem: //this is allocated memory, you have read,write,execute access
cmp [_Wingsuit_Up],1
je WingsuitUp
cmp [_Wingsuit_Down],1
je WingsuitDown
jmp originalcode


WingsuitUp:
cmp rdx,FFFFFFFFFFFFFFFF
jne originalcode
mov [_Wingsuit_Up],0
fld [rcx+000001C8]
fld1
faddp
fld1
faddp
fld1
faddp
fstp [rcx+000001C8]
jmp originalcode

WingsuitDown:
cmp rdx,FFFFFFFFFFFFFFFF
jne originalcode
mov [_Wingsuit_Down],0
fld [rcx+000001C8]
fld1
fsubp
fld1
fsubp
fld1
fsubp
fstp [rcx+000001C8]
jmp originalcode

originalcode:
movaps xmm3,[rcx+000001C0]

exit:
jmp returnhere

//"FC64.dll"+46FA0B:
_FlyUpDownWingsuit:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_FlyUpDownWingsuit)
Unregistersymbol(_Wingsuit_Up)
Unregistersymbol(_Wingsuit_Down)
dealloc(newmem)
dealloc(_Wingsuit_Up)
dealloc(_Wingsuit_Down)
//"FC64.dll"+46FA0B:
_FlyUpDownWingsuit:
movaps xmm3,[rcx+000001C0]
//Alt: db 0F 28 99 C0 01 00 00
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>397</ID>
              <Description>"WINGSUIT FLY DOWN"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_Wingsuit_Down</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>40</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>396</ID>
              <Description>"WINGSUIT FLY UP"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_Wingsuit_Up</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>38</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>266</ID>
          <Description>"ZOOM HACK"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_SuperZoom,FC64.dll,F3 0F 10 B8 A8 03 00 00 * * * * 80)
alloc(newmem,2048,FC64.dll)
Registersymbol(_SuperZoom)
Registersymbol(_enable_SuperZoom)
Registersymbol(_disable_SuperZoom)
alloc(_enable_SuperZoom,4)
alloc(_disable_SuperZoom,4)
label(returnhere)
label(originalcode)
label(exit)
label(enable_SuperZoom)
label(disable_SuperZoom)
label(U100)
label(Bushmaster)




newmem: //this is allocated memory, you have read,write,execute access
cmp  [_enable_SuperZoom],1
je enable_SuperZoom

cmp  [_disable_SuperZoom],1
je disable_SuperZoom
jmp originalcode

enable_SuperZoom:
mov  [_disable_SuperZoom],0
cmp [rax+3F4],(float)1.75
je U100
cmp [rax+3F4],(float)1.210000038
je Bushmaster
mov [rax+000003A8],(float)10
jmp originalcode

U100:
mov [rax+000003A8],(float)25
jmp originalcode

Bushmaster:
mov [rax+000003A8],(float)35
jmp originalcode

disable_SuperZoom:
mov  [_enable_SuperZoom],0
mov [rax+000003A8],(float)50
jmp originalcode

originalcode:
movss xmm7,[rax+000003A8]

exit:
jmp returnhere

//"FC64.dll"+DA1DE1:
_SuperZoom:
jmp newmem
nop
nop
nop
returnhere:

_enable_SuperZoom:
dd 1
_disable_SuperZoom:
dd 0
 
[DISABLE]
Unregistersymbol(_SuperZoom)
Unregistersymbol(_enable_SuperZoom)
Unregistersymbol(_disable_SuperZoom)
dealloc(newmem)
dealloc(_enable_SuperZoom)
dealloc(_disable_SuperZoom)
//"FC64.dll"+DA1DE1:
_SuperZoom:
movss xmm7,[rax+000003A8]
//Alt: db F3 0F 10 B8 A8 03 00 00
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>267</ID>
              <Description>"ENABLE SUPER ZOOM"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_enable_SuperZoom</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>268</ID>
              <Description>"DiSABLE SUPER ZOOM"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>Byte</VariableType>
              <Address>_disable_SuperZoom</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>199</ID>
          <Description>"iNFiNITE AMMO iN CLiP"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_NoReload,FC64.dll,48 8B 81 A0 ? ? ?  8B 80 08 01)
Registersymbol(_NoReload)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)
label(exit_0)

newmem: //this is allocated memory, you have read,write,execute access
cmp [rax+54],0
je originalcode
push rcx
mov ecx,[rax+4B8] // get calculated clip size (with upgrades and all)
test ecx,ecx // if no ammo bag upgrades purchased
jne short exit_0
mov rcx,[rax+68] // if 0 from above, then get current clip size
mov ecx,[rcx+1FC]
exit_0:
mov [rax+104],ecx // fill current clip ammo with max clip size ;)
pop rcx

//mov dword ptr [rax+00000104],#999

originalcode:
mov eax,[rax+00000104]

exit:
jmp returnhere

//"FC64.dll"+D18F57:
_NoReload-9:
jmp newmem
nop
returnhere:




[DISABLE]
Unregistersymbol(_NoReload)
dealloc(newmem)
//"FC64.dll"+D18F57:
_NoReload-9:
mov eax,[rax+00000104]
//Alt: db 8B 80 04 01 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>125</ID>
          <Description>"iNFiNITE SPECiAL SYRiNGES"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteSpecialSyringes,FC64.dll,45 8B B5 C8 ? ? ? 80 78 08)
Registersymbol(_InfiniteSpecialSyringes)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [r13+000000C8],#99


originalcode:
mov r14d,[r13+000000C8]

exit:
jmp returnhere

_InfiniteSpecialSyringes:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_InfiniteSpecialSyringes)
dealloc(newmem)
_InfiniteSpecialSyringes:
mov r14d,[r13+000000C8]
//Alt: db 45 8B B5 C8 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>209</ID>
          <Description>"iNFiNITE SPECiAL SYRiNGES EFFECT TiME"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
Aobscanmodule(_InfSyringesEffect1,FC64.dll,F3 0F 10 77 10 0F 28 C6 45 84 E4)
Aobscanmodule(_InfSyringesEffect2,FC64.dll,F3 0F 10 73 3C 0F 2F F7)
alloc(newmem,256,"FC64.dll")
alloc(newmem1,256,"FC64.dll")
Registersymbol(_InfSyringesEffect1)
Registersymbol(_InfSyringesEffect2)
label(returnhere)
label(originalcode)
label(exit)
label(returnhere1)
label(originalcode1)
label(exit1)


newmem: //this is allocated memory, you have read,write,execute access
MOV [rdi+10],(float)100

originalcode:
movss xmm6,[rdi+10]

exit:
jmp returnhere

//"FC64.dll"+C3F10A:
_InfSyringesEffect1:
jmp newmem
returnhere:


newmem1: //this is allocated memory, you have read,write,execute access
mov [rbx+3C],(float)100

originalcode1:
movss xmm6,[rbx+3C]

exit1:
jmp returnhere1

//"FC64.dll"+1227B81:
_InfSyringesEffect2:
jmp newmem1
returnhere1:

 
 
[DISABLE]
Unregistersymbol(_InfSyringesEffect1)
Unregistersymbol(_InfSyringesEffect2)
dealloc(newmem1)
dealloc(newmem)
//"FC64.dll"+1227B81:
_InfSyringesEffect2:
movss xmm6,[rbx+3C]
//Alt: db F3 0F 10 73 3C

//"FC64.dll"+C3F10A:
_InfSyringesEffect1:
movss xmm6,[rdi+10]
//Alt: db F3 0F 10 77 10
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"iNFiNITE THROWABLES"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteThrowables,FC64.dll, 8B 47 78 ? ? 89 47 7C 0F 4F D8)
Registersymbol(_InfiniteThrowables)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rdi+78],#100

originalcode:
mov eax,[rdi+78]
cmp edx,eax

exit:
jmp returnhere

_InfiniteThrowables:
jmp newmem
returnhere:


 
 
[DISABLE]
Unregistersymbol(_InfiniteThrowables)
dealloc(newmem)
_InfiniteThrowables:
mov eax,[rdi+78]
cmp edx,eax
//Alt: db 8B 47 78 3B D0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>281</ID>
          <Description>"iNFiNiTE VEHiCLE HEALTH"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteCarHealth,FC64.dll,8B 88 38 01 00 00 89)
registersymbol(_InfiniteCarHealth)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
cmp dword ptr [rax+1f0],(int)2 // Is Player n Car!?
jne originalcode

mov dword ptr [rax+00000138],(float)9999


originalcode:
mov ecx,[rax+00000138]

exit:
jmp returnhere

//"FC64.dll"+CF7451:
_InfiniteCarHealth:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_OneHitCarKills)
dealloc(newmem)
//"FC64.dll"+CF7451:
_InfiniteCarHealth:
mov ecx,[rax+00000138]
//Alt: db 8B 88 38 01 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113</ID>
          <Description>"iNFiNiTY SYRiNGES"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteSyringes,FC64.dll,8B 81 C8 ? ? ? 85 C0 ? 84 ? ? ? ? FF C8)
Registersymbol(_InfiniteSyringes)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [rcx+000000C8],#100

originalcode:
mov eax,[rcx+000000C8]

exit:
jmp returnhere

//"FC64.dll"+C2FF7A:
_InfiniteSyringes:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_InfiniteSyringes)
dealloc(newmem)
//"FC64.dll"+C2FF7A:
_InfiniteSyringes:
mov eax,[rcx+000000C8]
//Alt: db 8B 81 C8 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>305</ID>
          <Description>"iNSTANT OPEN CHEST"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_InstantOpenChest,FC64.dll,F3 0F 58 81 C8 00 00 00)
registersymbol(_InstantOpenChest)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rcx+000000C8],(float)10000

originalcode:
addss xmm0,[rcx+000000C8]

exit:
jmp returnhere

//"FC64.dll"+926A24:
_InstantOpenChest:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
unregistersymbol(_InstantOpenChest)
dealloc(newmem)
//"FC64.dll"+926A24:
_InstantOpenChest:
addss xmm0,[rcx+000000C8]
//Alt: db F3 0F 58 81 C8 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>307</ID>
          <Description>"iNSTANT VEHiCLE REPAiR"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_InstantVehicleRepair,FC64.dll,F3 0F 10 B3 38 01 00 00 48)
registersymbol(_InstantVehicleRepair)
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rbx+00000138],(float)1000


originalcode:
movss xmm6,[rbx+00000138]

exit:
jmp returnhere

//"FC64.dll"+8FB99D:
_InstantVehicleRepair:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
unregistersymbol(_InstantVehicleRepair)
dealloc(newmem)
//"FC64.dll"+8FB99D:
_InstantVehicleRepair:
movss xmm6,[rbx+00000138]
//Alt: db F3 0F 10 B3 38 01 00 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>3352</ID>
      <Description>"debug"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>C0C0C0</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>3057</ID>
          <Description>"Player Model Freeze"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(exit)

newmem:
//movaps [rax+40],xmm1
mov ecx,[rbx]
jmp exit

exit:
jmp returnhere

"FC64.dll"+24815D:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
"FC64.dll"+24815D:
movaps [rax+40],xmm1
mov ecx,[rbx]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>3336</ID>
          <Description>"Resolution"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048,FC64.dll)
label(returnhere)
label(exit)

label(pRes)
registersymbol(pRes)

newmem:
mov [pRes],rax
mov ecx,[rax+08]
mov eax,[rax+0C]
jmp exit

exit:
jmp returnhere

//
pRes:
dd 0
//

"FC64.dll"+1E47FC:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
"FC64.dll"+1E47FC:
mov ecx,[rax+08]
mov eax,[rax+0C]
unregistersymbol(pRes)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>3337</ID>
              <Description>"Res X"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pRes</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>3338</ID>
              <Description>"Res Y"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>404080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pRes</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>disable gravity 1</Description>
      <Address>7FED1DF068E</Address>
      <ModuleName>FC64.dll</ModuleName>
      <ModuleNameOffset>1EE068E</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>49</Byte>
        <Byte>8B</Byte>
        <Byte>F8</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>81</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>78</Byte>
        <Byte>C8</Byte>
        <Byte>49</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>disable gravity 2</Description>
      <Address>7FED1DF0F73</Address>
      <ModuleName>FC64.dll</ModuleName>
      <ModuleNameOffset>1EE0F73</ModuleNameOffset>
      <Before>
        <Byte>28</Byte>
        <Byte>CA</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>D9</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>81</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>3C</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Countdown</Name>
      <Address>04C70000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AmmoAddress</Name>
      <Address>01081D31</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pistolsfiredcheckAOB</Name>
      <Address>012E4BE9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pistolammoclipmaxreadAOB</Name>
      <Address>012D0557</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPistols</Name>
      <Address>07CF00C5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InstantCooldowns</Name>
      <Address>0143CDEF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cameraManip</Name>
      <Address>287A0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSunPosition</Name>
      <Address>3AA20015</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_sunPosition</Name>
      <Address>0089DE46</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CurrentCameraPreset</Name>
      <Address>006A2D84</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cameraPresetPtr</Name>
      <Address>287A0115</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>disableThread</Name>
      <Address>287A0119</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>KeyHandlerOff</Name>
      <Address>287B0500</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bHUD</Name>
      <Address>287B0504</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>timeofdayread1AOB</Name>
      <Address>005A5F36</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>timeofdayread2AOB</Name>
      <Address>005A63E9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>timeofdayspeedwriteAOB</Name>
      <Address>005A638A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTimeOfDay</Name>
      <Address>0E66004C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTimeOfDaySpeed</Name>
      <Address>0E660050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMySpeed</Name>
      <Address>0E660054</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bTimeOfDaySpeedControl</Name>
      <Address>0E660058</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>timeAOB</Name>
      <Address>1401761B5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cameraAOB</Name>
      <Address>14033D4D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_FreezeTimer</Name>
      <Address>7FFE17383527</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteOxygenInWater</Name>
      <Address>7FFE1249154F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteSpecialTimeSyringes</Name>
      <Address>7FF871CD7AFF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_WaterLevelManipulation</Name>
      <Address>7FF86EAAD745</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteSkillPoints</Name>
      <Address>7FFDEE4C0ADA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_NoFallDamage</Name>
      <Address>7FFC630E91DD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_MainHook</Name>
      <Address>7FFC045F9440</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>p0</Name>
      <Address>7FFC03A70050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ClipHook</Name>
      <Address>7FF90085E010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_UseAnyItemForCraft</Name>
      <Address>7FF9CB4F729B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address>7FFEECA62A40</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InstantVehicleRepair</Name>
      <Address>7FFEEB92262D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InstantOpenChest</Name>
      <Address>7FFEEB94D834</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteSyringes</Name>
      <Address>7FFEEBC6865A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteCarHealth</Name>
      <Address>7FFEEBD22C75</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteStamina</Name>
      <Address>7FFEEB930453</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_StaminaElephant</Name>
      <Address>7FFEEB8D2113</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfSyringesEffect1</Name>
      <Address>7FFEEBC776FA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfSyringesEffect2</Name>
      <Address>7FFEEC28C578</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteSpecialSyringes</Name>
      <Address>7FFEEC29BE2A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_NoReload</Name>
      <Address>7FFEEBD64EB0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_FlyUpDownWingsuit</Name>
      <Address>7FFEEB491DD8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_TeleportCode</Name>
      <Address>7FFEECF9EBBF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_SaveWAyPointCoordCode</Name>
      <Address>7FFEEC2B586E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_GetPlayerCoord</Name>
      <Address>7FFEEB4ACD02</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_SuperWeaponRange</Name>
      <Address>7FFEEBD6549E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_SuperSpeedElephant</Name>
      <Address>7FFEEB8D1370</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_Speed</Name>
      <Address>7FFEEBC7BE43</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_SuperJump</Name>
      <Address>7FFEEBC7BF6F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_SkillPoints</Name>
      <Address>7FFEEC36510A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_RemoveWalkSpeedLimitWhenFiring</Name>
      <Address>7FFEEBC95ECA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_RemoveMineLimit</Name>
      <Address>7FFEEBD8A945</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_NoC4Limit</Name>
      <Address>7FFEEBD9CBBB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_OneHitCarKills</Name>
      <Address>7FFEEB91B622</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_NoSway</Name>
      <Address>7FFEEBB9CAB9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_NoSwayAimWalk</Name>
      <Address>7FFEEBB9CD01</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_NoSpread</Name>
      <Address>7FFEEBD68D00</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_NoRecoil</Name>
      <Address>7FFEEBD7DEA8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_NoRecoilNop</Name>
      <Address>7FFEEBD7E06C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_NoFallingDamage</Name>
      <Address>7FFEEBC40F24</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_CrosshairNotDissappear</Name>
      <Address>7FFEEC2EA44B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteHealthElephant</Name>
      <Address>7FFEEB8E3A00</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_NoFallDamageElephant</Name>
      <Address>7FFEEB930445</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_GetMaxExp</Name>
      <Address>7FFEEC4687F6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_DisarmEnemysOnShot</Name>
      <Address>7FFEEBD68117</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_Add_1000_ArenaPoints</Name>
      <Address>7FFEEBE3CDDC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_TimeOfDay</Name>
      <Address>7FED32321A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteOxygen</Name>
      <Address>7FED09DD050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteThrowables</Name>
      <Address>7FED0A9BD83</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCamera</Name>
      <Address>7FED54800AB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCamera2</Name>
      <Address>7FED54800B3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_BowHasAlwaysTension</Name>
      <Address> 7FED62A3000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteMoney</Name>
      <Address> 7FED608F4B7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_MoneyMax</Name>
      <Address> 7FED608C3E6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_Health</Name>
      <Address> 7FED40077D3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTime</Name>
      <Address>7FED3710028</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSpeed</Name>
      <Address>7FED3700028</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_StealthMode</Name>
      <Address> 7FED4E88D99</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_StealthModeDog</Name>
      <Address> 7FED4E88FED</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteAmmo</Name>
      <Address> 7FED42E2284</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_OneHitKills</Name>
      <Address> 7FED4050E28</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>alt_pCamera</Name>
      <Address>7FED36D00AB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>alt_pCamera2</Name>
      <Address>7FED36D00B3</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
