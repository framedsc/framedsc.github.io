<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <Forms>
    <DebugWindow Class="TCEForm" Encoding="Ascii85">ty0Tw)=ArRB#rGlso0bSERZEwSt2P5P^{TFTG{dYB4W]l+o@I4dz8ssGc#[/5A,kd.1l;J^){t=[;qJrf=d6u$Mt#4InQ/o?h8Uzrtcjcqnx+f5M:Qs6A_9-jNn:}K3m2KusG3.?1*@l,W0{5mn[mr/6EsYKpBBN4N/5TS=.EK!NF[=%17iClIhV?GZaR/gm/dbw#OL:y,([U]xW=8FGtmqGND!HoQd[@^=@6n2Wx[g6+T5/ibJ?j8P_K$1aD7.Pt_NdrD-aC0XHCtmHVAg0o+PXmCMp@-Co)fFYVUtrQ5q(v)H(9OpEeL:;F1gN/$^%PG4dsqPlGlat1!mG*U73ZZ1(3,W!N#P51Yk=)b?rPlIs+Unisp:N#tP7-3wABwHfMe=?MDVg#y=vo}S[RA.JXu3OcN6Zerm/GowaaVjF@OeDOX!j{xV/0U_}/KaAIoEA@v1PjN9FcEl0!x;29ja$tei8xp1OtUmash!+%3wutYb:vE8W5iC)yE2_1GBjSfBdS5@f1r.rEElS0ymUVx#vGiXWH,!4b#.3F;F}gK.SMFH0e.:ShqLhQ*w^:gB4T_68jS@C=Ap@%BIkK8m1!(0(omBDCl8Y,WH--#kZFyg;2aX4%K!H:_N4[M^$Ex6[2:uNRl{]g6uPq/^b]Ox-idH#=uEr:S.f3j[Jqp3D8.Dtm%Em8^^a</DebugWindow>
    <Swapper Class="TCEForm" Encoding="Ascii85">m6J/u,b_G7X}^8VDIXN+qKhuL3bF]-qBn;fyD@Z(2Be}ETBa=,GDjfCaol6^Bt1b-)q*g)=n}.@q.40/jzdy2?6AwOd[vOc:p9W5!x88.O{4x(h3=+n1$uYAYay38]rkT!3Z=h^.FFwV=+H)j81!7_aR$mn.Y^92CD-z@Ak9I7yF$:lW*i8Eb}WH7N;II^p%UvIYpNU$3Mmx,DH7FjTO@o+k=u3vFX2io[?:/4B!{%-rQEDyt_;KmC,;wNp%u8124i?jL-j$!rmP*aw,=Bido30APTe(I3nnU+rMqev/^a4$HZ0=c8H-m5e^6*mlV{7AFX}j?uW+cF-2^YAl.zG:@rR[#H7lx)/0.oxCzf-03v(?Pu][TaL0HEwa{cz/^UGJDiR,/9$WyJ{P]OoQ/##+#T5l6khz!{b71=ry4B;=]FJ/iPGrG}%j6eTjJa-8U/E)f)g8ww1EkHk=Ih=4r/?C5F+c-vKb!@Z3Rwv#df)q=CEurQpYNI!.k#_/ny:v(b5[,k!9JGlJ[^yG.#_PhLV6H]fJ)cF5,IS=eKP34L</Swapper>
    <Debugger Class="TCEForm" Encoding="Ascii85">tyar!8(w#d87H2x9fw^dnzp2_DkQq0/kAfV3E5M-j$#?sGbKn!h=AL9((cCB*.Y%_$!nAahz.TicmrObOE!o#Y/K[]h;CNY%W.OL3$n=}]2WBE]?jEk(L1tq?W,E},jsi_glEnpc)RyGAYK^4XSDW?Qy.;364BbPR=SEA,6!a#I1Xu4]]of!FsCs{;zhZAK!Ag()/LM)6r^BCekTK3bCVdRG;2**[YB1uBNB5MyD;,P.4]pDXxod;+ZZjt$g}HrZ4;$gK8M(=XC%j90$r3,jFNTjZAUP,US**T6NIf-itiUzvm4O)Ipi+O!v]l]1R;qAyJ-,1Oj?g8%Ixc4%3+9UJ;n:1nD!8+Xl6LfV=PbysU.o^aR^,x7!5x_DnVw#tc.i%dj3D[]FobpW:S1@Fh-9tTFe[qE{EbDXLBgi;8Nz9dm?_LDw{T(r?NqN5GP3@57+$X9q#+%8@uZJ#piK4xzBM#GTs}n=1NR]EdSh36M!dhh.V$*lmv.r5nwVzGc/uIS]cB(Djc7},ZBGFK{[S_bzT{7FT!y.Ed@U:ZXWZ8!iwCwXq-n[GQFlH3C[?h,M7X.?O+tFGWH^wGTD42i;UEeZ9}QokKz/smR2b1ZLLn/7]BU(#VjS3*!3)SrdpxRpUHiXGNKb:+6nT;Vn_56E/b6#VzgMP-3SJ)r%vnc!C.Xja=D.DS)(ekGT*PBw*XSdwzzRef*/#jVKf.gZ!-:#;hUMpIPGi;hH=)D;YRtxn_6GY:cZ@GR{WJUCNSV,,z6y;hOWtQ?}wv!X-EoYEM2{+]e960](/.s;Q0vD4MFOOBK5MQQ+FhEr=f7.[/+[n-hvTIo!.o[JOoruM$I-etPO!RQdmD2xoCB1Zy%/tmci6,X9)i82*Uw^rr^p(NgBda8R?QBU7auUK/ldPotShYcv;K?8kH,zH{_wfBQ0.qzf7)B^xowjoxXCAdVZzrxurB%Go8b%OzWA4d?nVm6go#VSP?t,ffJZG;c85lA7*YB5;eh(]EM0M3y6oUF}E#8n-qkd3b/Vfx2wZFR(aL/QDmPl/CQd!29,8N3Jr:m$x}HhSy]36oPZ-11(jUKvixqAr;]}Y39pI}^K+u_KF,$]^J%!/Rw=GvZ]$I=lxy}dc]:VybnVpfV$loIl_0KcxhCV6:ki6q%WewHn,o(bKgaTF8DwcREqyebuC(c)@Y5k2c{GRtEA:Mn49hcFtFHco,,%HwVs=cY#H@_DWgSpRE4,GusFVAKF711Y+!aQ#mOOQ7#pklLTc$4U2bW5[#+,^?5EJd)SW.Ek/f=8iZM@F$kXLBLROO7hw4YS2eU,9,.aq{#XI!d=,Wjj#,uPd{])sZkyP?xoD,.GykQ2/+PQGj?J(@2vG@$ZQ%2As/m5$2{I$E*qK7{*,Qsy}Grj2X@d?nb@Q=(tpdE+Vx:693w1w%(KF]8b$ZZ8SD9{}Mt2*[,7m#B28ImZZx#}92RL-zMC</Debugger>
    <LootWindow Class="TCEForm" Encoding="Ascii85">T}y0+,AtKA1wnvGQu3HKJ3gSplyut-1}SQn0S]D$yHxN@tg+3NOF,8psz1?M:-;2Hx{uV0n{Qaedynqp,:uK_5%S!d55yacZg^$Ejyac*EcW?PI*-Oi]AurKz,M7b]GYGSPw?58BlBfY]GU!SCX)@EcB-8@9)^[SGiE{z1](f.mVUO.3%_O^1:EhCk=/ir)@Vvo:K/f]#U2%+LsLS8oWL4VWGh{=3b1CdA;L/}@GIaG?KwQUVtBpJdG#;q$BTfc!aky+x}b7nI{jSqw0*h14wsTIQ9I9lCt,z}.j^V-s6UOP=}S@uXPWwuVnn7^ox+O+HSez@-,8:I$Sw0;4iPN0)WL[J0g=faBAN+BC*?^NE3{AwqGVmIvr.T#)aO}@i.bODW}!lD[EfzdOT?9316YDTOz8$SH388bQc0U%5kh}r,bu=xlC{p(WBORO]gkB?N4s]/hjyqq(BAWJdg{BLYN!Diro=$jd?A9;w0Ewm(Kla*5?{G8n!aA^=hSBgU;55a$[I!*;G?TD.)UPbta5/6S*Dmt(tjg=1(d$0+#:nceNb/}$MbzGV}DMbebfZS+9UMv/+V4oR:L/k$z(R/6/(m-l;=c!,Yr?d^eVV3ll7512bwMdv!(mPBHw09,B7v^SyvGQ8ovNJDIAQx3yS{5e$8/w?G4E}POT#9RTj08N4,nJSG94.,BVJyq$=/UU4sA=s;]or.J8DzxF+GqGR1k8qLrt3C^x)lxMQgAf}wyM]Ue</LootWindow>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>346</ID>
      <Description>"-&gt; Enable [F2]"</Description>
      <Options moAllowManualCollapseAndExpand="1"/>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(basemem,2048)
aobscan(aobBasePointer,8B 06 8B 4D EC 8D 04 88 85 C0 0F 84)

label(aobBasePointer_r)
label(pBasePointer)
label(lblBasePointer)
label(lblBasePointerReturn)
registersymbol(pBasePointer)
registersymbol(aobBasePointer_r)

basemem:

lblBasePointer:
mov dword ptr [pBasePointer],esi
mov eax,[esi]     // Original code
mov ecx,[ebp-14]  // Original code
jmp lblBasePointerReturn
nop

pBasePointer:
dd 0

aobBasePointer:
aobBasePointer_r:
jmp lblBasePointer
lblBasePointerReturn:

alloc( Player_EPhysics_Hook, 1024 )
registersymbol( Player_EPhysics_Hook )
label( p0 )					                // WorldInfo
registersymbol( p0 )
label( p1 )					                // WillowPlayerPawn
registersymbol( p1 )
label( p2 )					                // WillowPlayerController
registersymbol( p2 )
label( back )

Player_EPhysics_Hook+100:
p0:
dd 0

Player_EPhysics_Hook+104:
p1:
dd 0

Player_EPhysics_Hook+108:
p2:
dd 0

Player_EPhysics_Hook:
push ebx
mov [p1],ecx
mov ebx,[ecx+E0]
mov [p0],ebx
mov ebx,[ecx+A4]
mov [p2],ebx
pop ebx
cmp byte ptr [ecx+9C],1
jmp back

aobscan( dwPlayer_EPhysics_Hook_AOB, 80B9????????010F??????????F30F????????????F30F )
label( dwPlayer_EPhysics_Hook )
registersymbol( dwPlayer_EPhysics_Hook )
dwPlayer_EPhysics_Hook_AOB:
dwPlayer_EPhysics_Hook:
jmp Player_EPhysics_Hook
db 90 90
back:

aobscan( GetIndex_AOB, 558BEC83EC148B4134565733FF )
label( GetIndex )
registersymbol( GetIndex )
GetIndex_AOB:
GetIndex:

aobscan( SetIndex_AOB, 558BEC5153568BF18B4614578975FC85C0 )
label( SetIndex )
registersymbol( SetIndex )
SetIndex_AOB:
SetIndex:

[DISABLE]
aobBasePointer_r:
db 8B 06 8B 4D EC
unregistersymbol(aobBasePointer_r)
unregistersymbol(pBasePointer)
dealloc(basemem)

dwPlayer_EPhysics_Hook:
cmp byte ptr [ecx+9C],1
unregistersymbol( p2 )
unregistersymbol( p1 )
unregistersymbol( p0 )
unregistersymbol( dwPlayer_EPhysics_Hook )
unregistersymbol( Player_EPhysics_Hook )
dealloc( Player_EPhysics_Hook )
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>113</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>9440</ID>
          <Description>"Screenshotting"</Description>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>246</ID>
              <Description>"UE3 Cheats [F3]"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>0000FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

alloc( KeyHandlerThread, 4096 )
registersymbol( KeyHandlerThread )
CreateThread( KeyHandlerThread )
label( Toggle )
label( Toggler )
registersymbol( Toggler )
label( KeyHandlerOff )
registersymbol( KeyHandlerOff )
label( ExitKeyHandler )
label( TogglePlayersOnly )
label( TogglePlayersOnly_exit )
label( bPlayersOnly )
registersymbol( bPlayersOnly )
label( ToggleFly )
label( bFly )
registersymbol( bFly )
label( ToggleFly_exit )
label( ToggleGhost )
label( bGhost )
registersymbol( bGhost )
label( ToggleGhost_exit )
label( ToggleGod )
label( bGod )
registersymbol( bGod )
label( ToggleGod_exit )
label( ToggleSloMo1 )
label( ToggleSloMo2 )
label( ToggleSloMo3 )

KeyHandlerThread+300:
Toggler:
dd 1

KeyHandlerThread+304:
KeyHandlerOff:
dd 0

KeyHandlerThread+308:
bPlayersOnly:
dd 0

KeyHandlerThread+30C:
bFly:
dd 0

KeyHandlerThread+310:
bGhost:
dd 0

KeyHandlerThread+314:
bGod:
dd 0

KeyHandlerThread:
push 0a
call kernel32.Sleep

cmp [KeyHandlerOff],1
je ExitKeyHandler

push 71 //F2
call GetAsyncKeyState
test ax,ax
jne Toggle

cmp [Toggler],1
jne KeyHandlerThread

push 61 //VK_NUMPAD1
call GetAsyncKeyState
test ax,ax
jne TogglePlayersOnly

push 62 //VK_NUMPAD2
call GetAsyncKeyState
test ax,ax
jne ToggleFly

push 63 //VK_NUMPAD3
call GetAsyncKeyState
test ax,ax
jne ToggleGhost

push 65 //VK_NUMPAD4
call GetAsyncKeyState
test ax,ax
jne ToggleGod

push 67 //VK_NUMPAD7
call GetAsyncKeyState
test ax,ax
jne ToggleSloMo1

push 68 //VK_NUMPAD8
call GetAsyncKeyState
test ax,ax
jne ToggleSloMo2

push 69 //VK_NUMPAD9
call GetAsyncKeyState
test ax,ax
jne ToggleSloMo3
jmp KeyHandlerThread

TogglePlayersOnly:
xor [bPlayersOnly],1
cmp [bPlayersOnly],0
je @f
mov ecx,[p0]
or dword ptr [ecx+284],200
jmp TogglePlayersOnly_exit
@@:
mov ecx,[p0]
and dword ptr [ecx+284],FFFFF1FF
TogglePlayersOnly_exit:
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ToggleFly:
xor [bFly],1
cmp [bFly],0
je @f
push 0
push 397
mov ecx,[p2]
call GetIndex
mov ebx,[p1]
mov ecx,[ebx+A4]
mov ecx,[ecx+14]
mov [ecx+10],eax
mov [ecx+28],eax
mov byte ptr [ebx+9C],4
mov ecx,[ebx+100]
mov [ecx+1E8],(float)2.0
mov [ebx+320],(float)40.0
jmp ToggleFly_exit
@@:
push 0
push 393
mov ecx,[p2]
call GetIndex
mov ebx,[p1]
mov ecx,[ebx+A4]
mov ecx,[ecx+14]
mov [ecx+28],eax
push 0
push 64
mov ecx,[p2]
call SetIndex
mov ebx,[p1]
mov byte ptr [ebx+9C],1
mov ecx,[ebx+100]
mov [ecx+1E8],(float)0.3
mov [ebx+320],(float)1.0
ToggleFly_exit:
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ToggleGhost:
xor [bGhost],1
cmp [bGhost],0
je @f
mov ebx,[p1]
mov byte ptr [ebx+BF],E1
jmp ToggleGhost_exit
@@:
mov ebx,[p1]
mov byte ptr [ebx+BF],D9
ToggleGhost_exit:
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ToggleGod:
xor [bGod],1
cmp [bGod],0
je @f
mov ebx,[p2]
mov byte ptr [ebx+1A0],9B
jmp ToggleGod_exit
@@:
mov ebx,[p2]
mov byte ptr [ebx+1A0],83
ToggleGod_exit:
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ToggleSloMo1:
mov ebx,[p0]
mov [ebx+2E8],(float)0.001
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ToggleSloMo2:
mov ebx,[p0]
mov [ebx+2E8],(float)0.5
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ToggleSloMo3:
mov ebx,[p0]
mov [ebx+2E8],(float)1.0
push C8
call kernel32.Sleep
jmp KeyHandlerThread

Toggle:
xor [Toggler],1
push 96
call kernel32.Sleep
jmp KeyHandlerThread

ExitKeyHandler:
ret

[DISABLE]

KeyHandlerOff:
dd 1

unregistersymbol( bPlayersOnly )
unregistersymbol( bGod )
unregistersymbol( bGhost )
unregistersymbol( bFly )
unregistersymbol( KeyHandlerOff )
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>114</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>146</ID>
                  <Description>"PlayersOnly"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
                  <LastState Value="??" Activated="0" RealAddress="10740308"/>
                  <Color>404080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bPlayersOnly</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>147</ID>
                  <Description>"Fly"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
                  <LastState Value="??" Activated="0" RealAddress="1074030C"/>
                  <Color>404080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bFly</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>148</ID>
                  <Description>"Ghost"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
                  <LastState Value="??" Activated="0" RealAddress="10740310"/>
                  <Color>404080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bGhost</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>249</ID>
                  <Description>"God Mode"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
                  <LastState Value="??" Activated="0" RealAddress="10740314"/>
                  <Color>404080</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bGod</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>145</ID>
                  <Description>"SloMo"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>p0</Address>
                  <Offsets>
                    <Offset>328</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>242</ID>
              <Description>"Time of Day [F6]"</Description>
              <LastState Activated="0"/>
              <Color>0000FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>/*
All credits for this mod goes to SunBeam!
Borderlands 2 - UnrealEngine 3 Topic:
http://forum.cheatengine.org/viewtopic.php?t=565668
*/
[ENABLE]

alloc( DayNight_Hook, 1024 )
label( pTime )
registersymbol( pTime )
label( pScale )
registersymbol( pScale )
label( back )

DayNight_Hook+100:
pTime:
dd 0

DayNight_Hook+104:
pScale:
dd 0

DayNight_Hook:
mov [pScale],esi
mov [pTime],edi
fld dword ptr [edi+00000130]
jmp back

aobscan( dwDayNight_AOB, D987????????6A00D99E????????F30F10??????????8B )
label( dwDayNight )
registersymbol( dwDayNight )

dwDayNight_AOB:
dwDayNight:
jmp DayNight_Hook
db 90
back:

[DISABLE]

dwDayNight:
fld dword ptr [edi+00000130]

unregistersymbol( pScale )
unregistersymbol( pTime )
dealloc( DayNight_Hook)

</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>117</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>243</ID>
                  <Description>"Day Night Moment"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>404080</Color>
                  <VariableType>Float</VariableType>
                  <Address>pTime</Address>
                  <Offsets>
                    <Offset>130</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>219</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>221</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>221</Key>
                      </Keys>
                      <Value>10</Value>
                      <ID>2</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>219</Key>
                      </Keys>
                      <Value>10</Value>
                      <ID>3</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Toggle Activation</Action>
                      <Keys>
                        <Key>106</Key>
                      </Keys>
                      <ID>4</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>11098</ID>
              <Description>"FOV [F4]"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>0000FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//aobscanmodule(fovAOB,engine_x64_rwdi.dll,F3 0F 11 B3 x x x x F3 0F 59 35 x x x x 0F 28 C6 E8)
alloc(newmem,2048)
label(returnhere)
label(exit)

label(fov)
registersymbol(fov)
//registersymbol(fovAOB)

newmem:
mov [fov],esi
jmp exit

exit:
jmp returnhere

////

///
fov:
dq 0
///

"BorderlandsPreSequel.exe"+8E6BBD:
jmp newmem
nop
nop
nop
returnhere:


[DISABLE]
dealloc(newmem)
"BorderlandsPreSequel.exe"+8E6BBD:
movss [esi+00000F14],xmm0
unregistersymbol(fov)
//unregistersymbol(fovAOB)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>115</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>11101</ID>
                  <Description>"Numpad +/-"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fov</Address>
                  <Offsets>
                    <Offset>F14</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>109</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>107</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>107</Key>
                      </Keys>
                      <Value>10</Value>
                      <ID>2</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>109</Key>
                      </Keys>
                      <Value>10</Value>
                      <ID>3</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>3586</ID>
              <Description>"Visibility"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <VariableType>Byte</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>BF</Offset>
                <Offset>A4</Offset>
                <Offset>30</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>86</Key>
                  </Keys>
                  <Value>216</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>66</Key>
                  </Keys>
                  <Value>217</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>11102</ID>
              <Description>"Third Person Mod"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(thirdpersonsubAOB1,F6 81 90 0B 00 00 14 75 ** B8)
label(thirdpersonsubAOB1_jmp)
registersymbol(thirdpersonsubAOB1_jmp)
aobscan(thirdpersonsubAOB2,55 8B EC 83 EC 14 53 56 8B F1 8B 9E 84)
label(thirdpersonsubAOB2_jmp)
registersymbol(thirdpersonsubAOB2_jmp)
globalalloc(pCamera,4)
globalalloc(bToggleKeyPressed,4)
globalalloc(bScriptEnabled,4)
globalalloc(vCameraSet,4)
globalalloc(vCamreaMode,4)

///
pCamera:
dd 0
bToggleKeyPressed:
dd 0
bScriptEnabled:
dd 0
vCameraSet:
dd 0
vCamreaMode:
dd 000C0008
///

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(togglescript)
label(checktoggle)
label(thirdpersonmodestart)
label(setfirstperson)
label(setthirdpsrson)
label(dochangecamera)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [ecx+00000190],0
je originalcode

mov [pCamera],ecx

pushad
push 0x74 //Toggle Key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je togglescript
mov [bToggleKeyPressed],0
jmp checktoggle

togglescript:
cmp [bToggleKeyPressed],1
je originalcode
mov [bToggleKeyPressed],1
xor [bScriptEnabled],1
jmp checktoggle

checktoggle:
cmp [bScriptEnabled],1
je thirdpersonmodestart
jmp setfirstperson

thirdpersonmodestart:
pushad
push 02 //key mouse right
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setfirstperson
jmp setthirdpsrson

setfirstperson:
cmp [vCameraSet],0
je dochangecamera
jmp originalcode

setthirdpsrson:
cmp [vCameraSet],1
je dochangecamera
jmp originalcode

dochangecamera:
pushad
mov esi,ecx
mov ecx,[vCameraSet]
mov ecx,[vCamreaMode+ecx*2]      //get new camera value
mov byte ptr [esi+00000B90],cl   //assign new camera value
mov dword ptr [esi+00000784],0   //unknown
mov ecx,esi
mov eax,dword ptr [esi+00000190] //data
push eax
call thirdpersonsubAOB2_jmp
popad
xor [vCameraSet],1
jmp originalcode

originalcode:
test byte ptr [ecx+00000B90],14

exit:
jmp returnhere

thirdpersonsubAOB1:
thirdpersonsubAOB1_jmp:
jmp newmem
nop
nop
returnhere:

thirdpersonsubAOB2: //?
thirdpersonsubAOB2_jmp:


[DISABLE]
dealloc(newmem)
thirdpersonsubAOB1_jmp:
db F6 81 90 0B 00 00 14

thirdpersonsubAOB2_jmp: //?
//

unregistersymbol(thirdpersonsubAOB1_jmp)
unregistersymbol(thirdpersonsubAOB2_jmp)
dealloc(pCamera)
dealloc(bToggleKeyPressed)
dealloc(bScriptEnabled)
dealloc(vCameraSet)
dealloc(vCamreaMode)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>102</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>11105</ID>
              <Description>"3rd Person Camera Offsets [F7]"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>0000FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//aobscanmodule(fovAOB,engine_x64_rwdi.dll,F3 0F 11 B3 x x x x F3 0F 59 35 x x x x 0F 28 C6 E8)
alloc(newmem,2048)
label(returnhere)
label(exit)

label(pOffsets)
registersymbol(pOffsets)
//registersymbol(fovAOB)

newmem:
mov [pOffsets],esi
mulss xmm0,[esi+00000904]
jmp exit

exit:
jmp returnhere

////

///
pOffsets:
dq 0
///

"BorderlandsPreSequel.exe"+9DB41:
jmp newmem
nop
nop
nop
returnhere:


[DISABLE]
dealloc(newmem)
"BorderlandsPreSequel.exe"+9DB41:
mulss xmm0,[esi+00000904]
unregistersymbol(pOffsets)
//unregistersymbol(fovAOB)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>118</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>11106</ID>
                  <Description>"Forward \ Backward"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pOffsets</Address>
                  <Offsets>
                    <Offset>900</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>38</Key>
                      </Keys>
                      <Value>.5</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>40</Key>
                      </Keys>
                      <Value>.5</Value>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>119</Key>
                      </Keys>
                      <Value>5</Value>
                      <ID>2</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>11108</ID>
                  <Description>"Left\Right"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pOffsets</Address>
                  <Offsets>
                    <Offset>904</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>39</Key>
                      </Keys>
                      <Value>.5</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>37</Key>
                      </Keys>
                      <Value>.5</Value>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>119</Key>
                      </Keys>
                      <Value>3</Value>
                      <ID>2</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>11107</ID>
                  <Description>"Up \ Down"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pOffsets</Address>
                  <Offsets>
                    <Offset>908</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>33</Key>
                      </Keys>
                      <Value>.5</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>34</Key>
                      </Keys>
                      <Value>.5</Value>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>119</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>2</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>6059</ID>
          <Description>"[Shield, Health and Oz]"</Description>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>6054</ID>
              <Description>"Health"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>3B8</Offset>
                <Offset>24</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>6055</ID>
                  <Description>"Scaled Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>58</Offset>
                    <Offset>3B8</Offset>
                    <Offset>24</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6056</ID>
                  <Description>"Base Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>5C</Offset>
                    <Offset>3B8</Offset>
                    <Offset>24</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>6057</ID>
              <Description>"Health Switch"</Description>
              <Options moHideChildren="1"/>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">5:Normal
6:God
</DropDownList>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>108</Offset>
                <Offset>3B8</Offset>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6050</ID>
              <Description>"Shield"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>3C4</Offset>
                <Offset>24</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>6051</ID>
                  <Description>"Scaled Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>58</Offset>
                    <Offset>3C4</Offset>
                    <Offset>24</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6052</ID>
                  <Description>"Base Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>5C</Offset>
                    <Offset>3C4</Offset>
                    <Offset>24</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>6053</ID>
              <Description>"Shield Switch"</Description>
              <Options moHideChildren="1"/>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">5:Normal
6:God
</DropDownList>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>108</Offset>
                <Offset>3C4</Offset>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6320</ID>
              <Description>"Oz"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasepointer]</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>3D0</Offset>
                <Offset>24</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>79</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>79</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>6322</ID>
                  <Description>"Scaled Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasepointer]</Address>
                  <Offsets>
                    <Offset>58</Offset>
                    <Offset>3D0</Offset>
                    <Offset>24</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6321</ID>
                  <Description>"Base Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasepointer]</Address>
                  <Offsets>
                    <Offset>5C</Offset>
                    <Offset>3D0</Offset>
                    <Offset>24</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>6323</ID>
              <Description>"Oz Switch"</Description>
              <Options moHideChildren="1"/>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">5:Normal
6:God
</DropDownList>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>108</Offset>
                <Offset>3D0</Offset>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>6061</ID>
          <Description>"[Currency]"</Description>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>149</ID>
              <Description>"Money"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>2AC</Offset>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>150</ID>
              <Description>"Moon Shards"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>2C0</Offset>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>3319</ID>
              <Description>"Shift Coins"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>310</Offset>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>3037</ID>
          <Description>"[Location and Movement]"</Description>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>280</ID>
              <Description>"Viewing Height"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>360</Offset>
                <Offset>DC</Offset>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>9424</ID>
              <Description>"Movement Acceleration Rate"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>2D8</Offset>
                <Offset>A4</Offset>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>3038</ID>
              <Description>"Player Pos -&gt; X"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>60</Offset>
                <Offset>A4</Offset>
                <Offset>30</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>190</Key>
                  </Keys>
                  <Value>15</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>188</Key>
                  </Keys>
                  <Value>15</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>3039</ID>
              <Description>"Player Pos -&gt; Y"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>64</Offset>
                <Offset>A4</Offset>
                <Offset>30</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>222</Key>
                  </Keys>
                  <Value>15</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>186</Key>
                  </Keys>
                  <Value>15</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>3040</ID>
              <Description>"Player Pos -&gt; Z"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>68</Offset>
                <Offset>A4</Offset>
                <Offset>30</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>222</Key>
                  </Keys>
                  <Value>15</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>186</Key>
                  </Keys>
                  <Value>15</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>3041</ID>
              <Description>"MoveVector -&gt; X"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>104</Offset>
                <Offset>A4</Offset>
                <Offset>30</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>90</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>3042</ID>
              <Description>"MoveVector -&gt; Y"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>108</Offset>
                <Offset>A4</Offset>
                <Offset>30</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>90</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>3043</ID>
              <Description>"MoveVector -&gt; Z"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>10C</Offset>
                <Offset>A4</Offset>
                <Offset>30</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>90</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>6372</ID>
          <Description>"Experience"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>FF80FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>38</ID>
              <Description>"Level"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasepointer]</Address>
              <Offsets>
                <Offset>258</Offset>
                <Offset>0</Offset>
                <Offset>1C4</Offset>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>36</ID>
              <Description>"EXP"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasepointer]</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>1B0</Offset>
                <Offset>3B0</Offset>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>2129</ID>
              <Description>"EXP To Next Level"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>268</Offset>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6046</ID>
              <Description>"EXP Multiplier"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>144</Offset>
                <Offset>C4C</Offset>
                <Offset>A4</Offset>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>3054</ID>
          <Description>"[Inventory and Storage]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>3827</ID>
              <Description>"!Bank Size and Backpack Used Space are just for show!"</Description>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>522</ID>
              <Description>"Bank Size"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>40</Offset>
                <Offset>230</Offset>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>151</ID>
              <Description>"Weapon Deck Size"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>1DC</Offset>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>152</ID>
              <Description>"Backpack Size"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>1D8</Offset>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>3189</ID>
              <Description>"Backpack Used Space"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>1F8</Offset>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>199</ID>
          <Description>"[Scripts]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>3318</ID>
              <Description>"[Lua Script Enablers]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>400000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>3198</ID>
                  <Description>"Teleport Mod Enabler"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Activated="0"/>
                  <Color>004000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>/*
- Location Teleport Mod
-
- How to use:
- Start CE.
- Attach CE to BL2.
- Execute the Lua script. (Ctrl+Alt+L)
- Enable the Teleport Mod Enabler in the cheat table under [Scripts] -&gt; [Lua Script Enablers]
- Press &lt;Numpad 0&gt; to Store Location
- Press &lt;Numpad .&gt; to Load Location
- Use the &lt;Numpad Keys 1 - 3&gt; to change the save slot
-    By using the numpad keys, you can store up to 3 different
     save locations
- Press &lt;Numpad +&gt; to warp all the players to your current location
- Press &lt;Numpad 4 - 6&gt; to warp a specific player to you
-    Player 2 = Numpad 4
-    Player 3 = Numpad 5
-    Player 4 = Numpad 6
- Press &lt;Numpad 7 - 9&gt; to warp to a specific player
-    Player 2 = Numpad 7
-    Player 3 = Numpad 8
-    Player 4 = Numpad 9
*/

[ENABLE]
alloc(data, 32)
label(bTeleModLoaded)
label(iTeleModSavePos)

registersymbol(bTeleModLoaded)
registersymbol(iTeleModSavePos)

data:
bTeleModLoaded:
dd 1
iTeleModSavePos:
dd 1

[DISABLE]
unregistersymbol(bTeleModLoaded)
unregistersymbol(iTeleModSavePos)
dealloc(data)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>3200</ID>
                      <Description>"Save Slot Position"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>iTeleModSavePos</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>97</Key>
                          </Keys>
                          <Value>1</Value>
                          <ID>0</ID>
                        </Hotkey>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>98</Key>
                          </Keys>
                          <Value>2</Value>
                          <ID>1</ID>
                        </Hotkey>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>99</Key>
                          </Keys>
                          <Value>3</Value>
                          <ID>2</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>3636</ID>
                  <Description>"Blink Mod Enabler"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Activated="0"/>
                  <Color>004000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>/*
- Blink Mod
-
- How to use:
- Start CE.
- Attach CE to BL2.
- Execute the Lua script. (Ctrl+Alt+L)
- Enable the Blink Mod Enabler in the cheat table under [Scripts] -&gt; [Lua Script Enablers]
- Fire a shot
- Press &lt;Q&gt; or &lt;F6&gt; to teleport to your last bullet position
-     This is either where the bullet hole is or where the bull drops off in the
      distance. Please note that elemental or multi-shot weapons may be buggy.
*/
[ENABLE]
alloc(data, 32)
label(bBlinkModLoaded)
registersymbol(bBlinkModLoaded)

data:
bBlinkModLoaded:
dd 1

[DISABLE]
unregistersymbol(bBlinkModLoaded)
dealloc(data)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>3741</ID>
                  <Description>"Enemy Swapper Mod"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Activated="0"/>
                  <Color>004000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>/*
- Enemy Swapper Mod and Spawn Manipulator
- Start CE.
- Attach CE to BL2.
- Execute the Lua script. (Ctrl+Alt+L)
- Enable the Enemy Spawn Swapper Mod in the cheat table under [Scripts] -&gt; [Lua Script Enablers]
- &lt;INSERT&gt; to find the dens in the current area.
- &lt;HOME&gt; will reset the kill counts of all dens to 0.
- &lt;SCROLL LOCK&gt; will max the kill counts of all dens at 255.
- &lt;PAGEUP&gt; and &lt;PAGEDOWN&gt; will increase/decrease the amount can spawn from each den.
- &lt;PAGEUP&gt; after you have reached the enemy limit will cause only 1 more spawn.
- &lt;PAUSE BREAK&gt; will reset all dens back to their original spawn counts and spawns
- Kill off current varkid population.
- When you see a larva, run (as all varkids, when they are unable to cause damage to a player,
- will want to evolve). Wait for the adult pod to hatch, spawning the vermi.
*/
[ENABLE]
alloc(data, 32)
label(bSpawnModLoaded)
registersymbol(bSpawnModLoaded)

data:
bSpawnModLoaded:
dd 1

luacall(SwapOpen())
[DISABLE]
unregistersymbol(bSpawnModLoaded)
dealloc(data)
luacall(SwapClose())
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>3790</ID>
                  <Description>"Loot Sploder (More Loot Drops)"</Description>
                  <LastState Activated="0"/>
                  <Color>004000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
luacall(LootSplosion())
[DISABLE]
luacall(SploDisable())
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>9429</ID>
                  <Description>"Loot Sploder Advanced"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Activated="0"/>
                  <Color>004000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
LuaCall(LootSplosionAdvance())

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>9431</ID>
                  <Description>"Show Loot Menu"</Description>
                  <LastState Activated="0"/>
                  <Color>004000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
LuaCall(ShowLootForm())


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
LuaCall(HideLootForm())
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>3309</ID>
              <Description>"[Ammo SDU Upgrade Mod]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>6786</ID>
                  <Description>"Reset Ammo Upgrades Mod"</Description>
                  <LastState Activated="0"/>
                  <Color>000000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>/*
Usage:
- Go to Black Market (sanctuary)
- Enable ResetAmmoStorageUpgrades script,
- Open Shop, then leave,
- Disable Reset Ammo Storage Upgrades Mod script,
- Enable Ammo Storage Upgrade Leveler Mod script, change Desired Ammo Storage Level,
- go to shop, buy what you want (ammo upgrades, grenade),
- Now disable all ammo upgrade scripts,

Side note:
DesiredAmmoStorageLevel, better if value is less than 496
(because numbers do not fit. Look at image above, it is level 500)
*/
[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscan(ResetAmmoStorageUpgradesAOB,8B 47 50 3B F0 7C 24 85 F6 75 04 85 C0 74 1C 68 xx xx xx xx 68 57 02 00 00 68 xx xx xx xx 68 xx xx xx xx E8 xx xx xx xx 83 C4 10 8B 47 4C 8B 04 B0 5F 5E 5D C2 04 00)
label(codeResetAmmoStorageUpgrades)
registersymbol(codeResetAmmoStorageUpgrades)

newmem:
cmp esi,7
je originalcode
cmp esi,8
je originalcode

mov [eax+esi*4],0

originalcode:
mov eax,[eax+esi*4]
pop edi
pop esi

exit:
jmp returnhere

ResetAmmoStorageUpgradesAOB+34:
codeResetAmmoStorageUpgrades:
jmp newmem
returnhere:

[DISABLE]
codeResetAmmoStorageUpgrades:
db 8B 04 B0 5F 5E

dealloc(newmem)

unregistersymbol(codeResetAmmoStorageUpgrades)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>6787</ID>
                  <Description>"Ammo Upgrade Mod"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Activated="0"/>
                  <Color>000080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>/*
Usage:
- Go to Black Market (sanctuary)
- Enable ResetAmmoStorageUpgrades script,
- Open Shop, then leave,
- Disable Reset Ammo Storage Upgrades Mod script,
- Enable Ammo Storage Upgrade Leveler Mod script, change Desired Ammo Storage Level,
- go to shop, buy what you want (ammo upgrades, grenade),
- Now disable all ammo upgrade scripts,

Side note:
DesiredAmmoStorageLevel, better if value is less than 496
(because numbers do not fit. Look at image above, it is level 500)
*/
[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(DesiredAmmoStorageLevel)
registersymbol(DesiredAmmoStorageLevel)

aobscan(AmmoStorageUpgradeAOB,FF 04 B0 8B 8F E0 00 00 00 8B 89 5C 03 00 00 8D 04 B0 53)
label(CodeAmmoUpgrade)
registersymbol(CodeAmmoUpgrade)

newmem:
cmp esi,7
je originalcode
cmp esi,8
je originalcode

mov ecx,[DesiredAmmoStorageLevel]
add [eax+esi*4],ecx
jmp short exit

originalcode:
inc [eax+esi*4]

exit:
mov ecx,[edi+000000E0]
jmp returnhere

DesiredAmmoStorageLevel:
dd (int)100

AmmoStorageUpgradeAOB:
CodeAmmoUpgrade:
jmp newmem
nop
nop
nop
nop
returnhere:

[DISABLE]
CodeAmmoUpgrade:
db FF 04 B0 8B 8F E0 00 00 00

unregistersymbol(CodeAmmoUpgrade)
unregistersymbol(DesiredAmmoStorageLevel)

dealloc(newmem)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>6788</ID>
                      <Description>"Desired Ammo Storage Level"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>DesiredAmmoStorageLevel</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>3530</ID>
              <Description>"[Item Rarity Drop Mod]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>3738</ID>
                  <Description>"Item Rarity Drop Modifier"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Activated="0"/>
                  <Color>000080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
LuaCall(GetRarityChancesMemoryRecords())
[DISABLE]
LuaCall(RevertAndDisableRarity())

</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>3739</ID>
                      <Description>"[Item Drop Rates]"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" Activated="0" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>3</ID>
                          <Description>"Drop Rates (1 Player)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000000"/>
                          <Color>808040</Color>
                          <VariableType>Float</VariableType>
                          <Address>DropsWeaponAndGear1</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>4</ID>
                          <Description>"Drop Rates (2 Players)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000000"/>
                          <Color>808040</Color>
                          <VariableType>Float</VariableType>
                          <Address>DropsWeaponAndGear2</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>5</ID>
                          <Description>"Drop Rates (3 Players)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000000"/>
                          <Color>808040</Color>
                          <VariableType>Float</VariableType>
                          <Address>DropsWeaponAndGear3</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>6</ID>
                          <Description>"Drop Rates (4 Players)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000000"/>
                          <Color>808040</Color>
                          <VariableType>Float</VariableType>
                          <Address>DropsWeaponAndGear4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>3789</ID>
                          <Description>"Drop Rates (Boss)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000000"/>
                          <Color>808040</Color>
                          <VariableType>Float</VariableType>
                          <Address>DropsWeaponAndGearBoss</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>7</ID>
                      <Description>"[Skin Drop Rates]"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" Activated="0" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>8</ID>
                          <Description>"Vehicle Skins Odds"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000000"/>
                          <Color>808040</Color>
                          <VariableType>Float</VariableType>
                          <Address>VehicleSkinsOdds</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>9</ID>
                          <Description>"Skins Odds"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000000"/>
                          <Color>808040</Color>
                          <VariableType>Float</VariableType>
                          <Address>SkinsOdds</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>10</ID>
                      <Description>"[Rarity Weight Presets]"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" Activated="0" RealAddress="00000000"/>
                      <Color>800080</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>11</ID>
                          <Description>"Revert All - Original"</Description>
                          <LastState Activated="0"/>
                          <Color>808040</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>12</ID>
                          <Description>"Preset 01 (Legendary Only)"</Description>
                          <LastState Activated="0"/>
                          <Color>808040</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>13</ID>
                          <Description>"Preset 02 (Purple Only)"</Description>
                          <LastState Activated="0"/>
                          <Color>808040</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14</ID>
                          <Description>"Preset 03 (Blue Only)"</Description>
                          <LastState Activated="0"/>
                          <Color>808040</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>15</ID>
                          <Description>"Preset 04 (Eridium Only)"</Description>
                          <LastState Activated="0"/>
                          <Color>808040</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>16</ID>
                          <Description>"Preset 05 (Green Only)"</Description>
                          <LastState Activated="0"/>
                          <Color>808040</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>17</ID>
                          <Description>"Preset 06 (White Only)"</Description>
                          <LastState Activated="0"/>
                          <Color>808040</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>18</ID>
                          <Description>"Preset 07 (Health Only)"</Description>
                          <LastState Activated="0"/>
                          <Color>808040</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>19</ID>
                          <Description>"Preset 08 (Legendaries 5x more likely)"</Description>
                          <LastState Activated="0"/>
                          <Color>808040</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>20</ID>
                          <Description>"Preset 09 (Legendaries 10x more likely)"</Description>
                          <LastState Activated="0"/>
                          <Color>808040</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>4099</ID>
                          <Description>"Preset 10 (Legendaries 100x more likely)"</Description>
                          <LastState Activated="0"/>
                          <Color>808040</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>4100</ID>
                          <Description>"Preset 11 (Legendaries 1000x more likely)"</Description>
                          <LastState Activated="0"/>
                          <Color>808040</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>21</ID>
                      <Description>"Weight 0: Very Common (Health)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>Weight_0_VeryCommon</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>22</ID>
                      <Description>"Weight 1: Common (White)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>Weight_1_Common</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>23</ID>
                      <Description>"Weight 2: Uncommon (Green)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>Weight_2_Uncommon</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>24</ID>
                      <Description>"Weight 3: Very Uncommon (Eridium)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>Weight_3_Uncommoner</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>25</ID>
                      <Description>"Weight 4: Rare (Blue)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>Weight_4_Rare</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>26</ID>
                      <Description>"Weight 5: Very Rare (Purple)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>Weight_5_VeryRare</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>27</ID>
                      <Description>"Weight 6: Legendary (Orange, Pearlescent)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>Weight_6_Legendary</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>6594</ID>
              <Description>"[Camera Mods]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>3395</ID>
                  <Description>"Third Person Mod v3.2 (F5 Toggle, Right Mouse Aim)"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
aobscan(thirdpersonsubAOB1,F6 81 90 0B 00 00 14 75 ** B8)
label(thirdpersonsubAOB1_jmp)
registersymbol(thirdpersonsubAOB1_jmp)
aobscan(thirdpersonsubAOB2,55 8B EC 83 EC 14 53 56 8B F1 8B 9E 84)
label(thirdpersonsubAOB2_jmp)
registersymbol(thirdpersonsubAOB2_jmp)
globalalloc(pCamera,4)
globalalloc(bToggleKeyPressed,4)
globalalloc(bScriptEnabled,4)
globalalloc(vCameraSet,4)
globalalloc(vCamreaMode,4)

///
pCamera:
dd 0
bToggleKeyPressed:
dd 0
bScriptEnabled:
dd 0
vCameraSet:
dd 0
vCamreaMode:
dd 000C0008
///

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(togglescript)
label(checktoggle)
label(thirdpersonmodestart)
label(setfirstperson)
label(setthirdpsrson)
label(dochangecamera)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [ecx+00000190],0
je originalcode

mov [pCamera],ecx

pushad
push 0x74 //Toggle Key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je togglescript
mov [bToggleKeyPressed],0
jmp checktoggle

togglescript:
cmp [bToggleKeyPressed],1
je originalcode
mov [bToggleKeyPressed],1
xor [bScriptEnabled],1
jmp checktoggle

checktoggle:
cmp [bScriptEnabled],1
je thirdpersonmodestart
jmp setfirstperson

thirdpersonmodestart:
pushad
push 02 //key mouse right
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setfirstperson
jmp setthirdpsrson

setfirstperson:
cmp [vCameraSet],0
je dochangecamera
jmp originalcode

setthirdpsrson:
cmp [vCameraSet],1
je dochangecamera
jmp originalcode

dochangecamera:
pushad
mov esi,ecx
mov ecx,[vCameraSet]
mov ecx,[vCamreaMode+ecx*2]      //get new camera value
mov byte ptr [esi+00000B90],cl   //assign new camera value
mov dword ptr [esi+00000784],0   //unknown
mov ecx,esi
mov eax,dword ptr [esi+00000190] //data
push eax
call thirdpersonsubAOB2_jmp
popad
xor [vCameraSet],1
jmp originalcode

originalcode:
test byte ptr [ecx+00000B90],14

exit:
jmp returnhere

thirdpersonsubAOB1:
thirdpersonsubAOB1_jmp:
jmp newmem
nop
nop
returnhere:

thirdpersonsubAOB2: //?
thirdpersonsubAOB2_jmp:


[DISABLE]
dealloc(newmem)
thirdpersonsubAOB1_jmp:
db F6 81 90 0B 00 00 14

thirdpersonsubAOB2_jmp: //?
//

unregistersymbol(thirdpersonsubAOB1_jmp)
unregistersymbol(thirdpersonsubAOB2_jmp)
dealloc(pCamera)
dealloc(bToggleKeyPressed)
dealloc(bScriptEnabled)
dealloc(vCameraSet)
dealloc(vCamreaMode)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>7244</ID>
              <Description>"[Unlimited Ammo + No Recoil]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>7245</ID>
                  <Description>"!Notice: Use only one of these at a time"</Description>
                  <LastState Value="" Activated="0" RealAddress="00000000"/>
                  <Color>0000FF</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>245</ID>
                  <Description>"Unlimited Ammo + No Recoil (ASM)"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
alloc( UnlimitedAmmo_Hook, 2048 )
label( back_0 )
label( exit_0 )
label( VariableBullets_Hook )
label( back_1 )
label( exit_1 )

UnlimitedAmmo_Hook:
pushfd
pushad
mov eax,[p1]
mov eax,[eax+480]
cmp eax,esi
jne exit_0

//********************
//** Unlimited Ammo **
//********************

mov [esi+9D8],0                        // subtract delta from magazine set to 0
mov eax,[eax+9CC]
mov [eax+108],2                        // flip ammo_decrease switch

//*******************
//** Remove Recoil **
//*******************

mov ecx,FFFFFFFF
mov edi,[p2]
mov [edi+F94],ecx
mov [edi+F98],ecx
mov [edi+F9C],ecx
mov [edi+FA0],ecx
mov [edi+FA4],ecx
mov [edi+FA8],ecx

exit_0:
popad
popfd
mov eax,[esi+A24]
jmp back_0

VariableBullets_Hook:
pushfd
pushad
mov ecx,[p1]
mov ecx,[ecx+480]
cmp eax,ecx
jne exit_1

//************************************************************
//** Rig stack value with 0, instead of 1 or -2 or whatever **
//************************************************************

mov [esp+2C],0

exit_1:
popad
popfd
push ebp
mov ebp,esp
push -1
jmp back_1

aobscan( dwUnlimitedAmmo_AOB, 885DFC8B75F08B86????????33C93BC30F9EC133D24923C88B86????????3BC3 )
label( dwUnlimitedAmmo )
registersymbol( dwUnlimitedAmmo )

dwUnlimitedAmmo_AOB+6:
dwUnlimitedAmmo:
jmp UnlimitedAmmo_Hook
db 90
back_0:

// for variable increase/decrease bullets

aobscan( dwVariableBullets_AOB, 897D??897D??897D??8B068B55??8B80????????8D )
label( dwVariableBullets )
registersymbol( dwVariableBullets )

dwVariableBullets_AOB-2F:
dwVariableBullets:
jmp VariableBullets_Hook
back_1:

[DISABLE]
dwUnlimitedAmmo:
mov eax,[esi+A24]

dwVariableBullets:
push ebp
mov ebp,esp
push -1

unregistersymbol( dwVariableBullets )
unregistersymbol( dwUnlimitedAmmo )
dealloc( UnlimitedAmmo_Hook )
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>7247</ID>
                  <Description>"Unlimited Ammo (ASM)"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
alloc( UnlimitedAmmo_Hook, 2048 )
label( back_0 )
label( exit_0 )
label( VariableBullets_Hook )
label( back_1 )
label( exit_1 )

UnlimitedAmmo_Hook:
pushfd
pushad
mov eax,[p1]
mov eax,[eax+480]
cmp eax,esi
jne exit_0

//********************
//** Unlimited Ammo **
//********************

mov [esi+9D8],0                        // subtract delta from magazine set to 0
mov eax,[eax+9CC]
mov [eax+108],2                        // flip ammo_decrease switch

exit_0:
popad
popfd
mov eax,[esi+A24]
jmp back_0

VariableBullets_Hook:
pushfd
pushad
mov ecx,[p1]
mov ecx,[ecx+480]
cmp eax,ecx
jne exit_1

//************************************************************
//** Rig stack value with 0, instead of 1 or -2 or whatever **
//************************************************************

mov [esp+2C],0

exit_1:
popad
popfd
push ebp
mov ebp,esp
push -1
jmp back_1

aobscan( dwUnlimitedAmmo_AOB, 885DFC8B75F08B86????????33C93BC30F9EC133D24923C88B86????????3BC3 )
label( dwUnlimitedAmmo )
registersymbol( dwUnlimitedAmmo )

dwUnlimitedAmmo_AOB+6:
dwUnlimitedAmmo:
jmp UnlimitedAmmo_Hook
db 90
back_0:

// for variable increase/decrease bullets

aobscan( dwVariableBullets_AOB, 897D??897D??897D??8B068B55??8B80????????8D )
label( dwVariableBullets )
registersymbol( dwVariableBullets )

dwVariableBullets_AOB-2F:
dwVariableBullets:
jmp VariableBullets_Hook
back_1:

[DISABLE]
dwUnlimitedAmmo:
mov eax,[esi+A24]

dwVariableBullets:
push ebp
mov ebp,esp
push -1

unregistersymbol( dwVariableBullets )
unregistersymbol( dwUnlimitedAmmo )
dealloc( UnlimitedAmmo_Hook )
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>7246</ID>
                  <Description>"No Recoil (ASM)"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
alloc( UnlimitedAmmo_Hook, 2048 )
label( back_0 )
label( exit_0 )

UnlimitedAmmo_Hook:
pushfd
pushad
mov eax,[p1]
mov eax,[eax+480]
cmp eax,esi
jne exit_0

//*******************
//** Remove Recoil **
//*******************

mov ecx,FFFFFFFF
mov edi,[p2]
mov [edi+F94],ecx
mov [edi+F98],ecx
mov [edi+F9C],ecx
mov [edi+FA0],ecx
mov [edi+FA4],ecx
mov [edi+FA8],ecx

exit_0:
popad
popfd
mov eax,[esi+A24]
jmp back_0

//************************************************************
//** Rig stack value with 0, instead of 1 or -2 or whatever **
//************************************************************

mov [esp+2C],0

aobscan( dwUnlimitedAmmo_AOB, 885DFC8B75F08B86????????33C93BC30F9EC133D24923C88B86????????3BC3 )
label( dwUnlimitedAmmo )
registersymbol( dwUnlimitedAmmo )

dwUnlimitedAmmo_AOB+6:
dwUnlimitedAmmo:
jmp UnlimitedAmmo_Hook
db 90
back_0:

[DISABLE]
dwUnlimitedAmmo:
mov eax,[esi+A24]

unregistersymbol( dwUnlimitedAmmo )
dealloc( UnlimitedAmmo_Hook )
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>3647</ID>
              <Description>"Fix Slot Machine"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>804000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>/*
By default, this will spit out legendary (orange) items every pull.
If you want, you can play around with the "Type" variable to force other results.

~Borderlands Pre-Sequel Slots~
Normal Slots:
00000 - 06711 = White Weapon X-X-Head
06712 - 11745 = Green Weapon 3 x Cherries
11746 - 12249 = Blue Weapon 3 x Legs (NOT AN AXE)
12250 - 12299 = Purple/Pink Weapon 3 x Marcus
12300 - 12305 = Orange Weapon 3 x Vault (Jackpot)
12306 - 13143 = 3 x Moonstone
13144 - 13395 = 3 x Double Moonstone
13396 - 13470 = 3 x Triple Moonstone (Jackpot)
13471 - 21860 = Money (Random amount)
21861 - 24377 = Boom 3 x Head
24378 - 26055 = Skin 777
26056 - 32767 = Nothing
32768 - XXXXX = Break (Reload area to fix)
*/

[ENABLE]
aobscan(aobFixSlots,8B 7D D8 8B 3F 8B C8 03 C9 F3 0F 10 54 CF 04 F3 0F 58 D0)
alloc(newmem,512)
label(aobFixSlots_r)
label(lblFixSlots)
label(lblFixSlotsExit)
label(lblFixSlotsReturn)
label(lblNormalSlots)
label(iRiggedValueNormal)
label(iUsageCounter)
registersymbol(aobFixSlots_r)
registersymbol(iRiggedValueNormal)
registersymbol(iUsageCounter)

newmem:
lblFixSlots:
cmp [esi],0x434347AE         // Normal
jnz lblFixSlotsExit
jmp lblNormalSlots

lblNormalSlots:
add [iUsageCounter],1
mov eax,[iRiggedValueNormal]
and eax,0x7FFF
jmp lblFixSlotsExit

lblFixSlotsExit:
movss xmm1,[esi] // Original code
xorps xmm0,xmm0  // Original code
jmp lblFixSlotsReturn

iRiggedValueNormal:
dd (int)12300
iUsageCounter:
dd 0

aobFixSlots-63:
aobFixSlots_r:
jmp lblFixSlots
nop
nop
lblFixSlotsReturn:

[DISABLE]
aobFixSlots_r:
movss xmm1,[esi]
xorps xmm0,xmm0

unregistersymbol(aobFixSlots_r)
unregistersymbol(iRiggedValueNormal)
unregistersymbol(iUsageCounter)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>6854</ID>
                  <Description>"!For the 3 Vault Symbol (Legendary) result to work, you need to be around level 10 or higher."</Description>
                  <LastState Value="" Activated="0" RealAddress="00000000"/>
                  <Color>0000FF</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>3648</ID>
                  <Description>"Slot Rigged Value (Normal)"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iRiggedValueNormal</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>3650</ID>
                  <Description>"Usage Counter"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>FF8000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iUsageCounter</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>2497</ID>
              <Description>"Vendor Shop Timer"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>804000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>/*
  Once you have to enabled the script, visit at least one vending machine to
  allow the script to retrieve the required pointer.
  The timer itself is a floating point value representing the number of seconds
  until the special deal in the vending machines (all vending machines) expire.
  In this table, the hotkey "F9" has been assigned to set the bResetTimer to 1,
  which will instruct the script to set the vending machine timer to 0.2, which
  is 1/5th of a second.
  If you are visiting the shop when the timer expires, you need to exit the
  shop and come back to see the new special deal item.
*/
[ENABLE]
aobscan(address,F3 0F 10 86 C0 04 00 00)

alloc(newmem,$1000)

label(continue)
label(return)
label(inject_shoptimer1)
registersymbol(inject_shoptimer1)

label(FLAG_ShopTimer)
label(POINTER_ShopTimer)
registersymbol(FLAG_ShopTimer)
registersymbol(POINTER_ShopTimer)

newmem:
  mov [POINTER_ShopTimer],esi
  cmp dword ptr [FLAG_ShopTimer],00000001
  jne continue
  mov dword ptr [FLAG_ShopTimer],00000000
  mov dword ptr [esi+000004C0],(float)0.2 // 0.2 second

continue:
  movss xmm0,[esi+000004C0]
  jmp return

FLAG_ShopTimer:
  dd 0 // set to 1 to lower shop timer next time it is open
POINTER_ShopTimer:
  dd 0 // set to 1 to lower shop timer next time it is open

//-----------------------------------------------------------------------------
// Inject our code
//-----------------------------------------------------------------------------
address:
inject_shoptimer1:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]
inject_shoptimer1:
  db F3 0F 10 86 C0 04 00 00

unregistersymbol(FLAG_ShopTimer)
unregistersymbol(POINTER_ShopTimer)
unregistersymbol(inject_shoptimer1)

dealloc(newmem)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>2508</ID>
                  <Description>"Reset Timer (F9)"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>FLAG_ShopTimer</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>120</Key>
                      </Keys>
                      <Value>1</Value>
                      <Description>Set flag to reset timer</Description>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>2506</ID>
                  <Description>"Shop Timer"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>FF8000</Color>
                  <VariableType>Float</VariableType>
                  <Address>POINTER_ShopTimer</Address>
                  <Offsets>
                    <Offset>4C0</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>120</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>7146</ID>
              <Description>"Loot Control and Scalar"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>804000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
Key Bindings:
DELETE: Remove all items on the ground
EQUAL: Remove all low level gear
PRINTSCREEN: Pull all items to you.

Enable the loot scaler to make Legendary and Very Rare gear larger.
}
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(PlyPosAOB,8d 45 c4 50 68 * * * * ff d2 33)
aobscan(ItemPosAOB,8b 0d * * * * 33 c0 85 c9 74 06)
alloc(ItemPosData,8)

label(PlyPos)
label(ItemPos)
label(ItemDataPoint)
registersymbol(PlyPos)
registersymbol(ItemPos)
registersymbol(ItemDataPoint)

ItemPosData:
ItemDataPoint:

[PlyPosAOB+5]:
PlyPos:

[ItemPosAOB+2]:
ItemPos:

alloc(icmem,2048)
label(ItemControlEnabled)
registersymbol(ItemControlEnabled)
icmem:
ItemControlEnabled:
dd 1

LuaCall(ItemHelperEnable())
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
LuaCall(StopItemScaleTimer())
dealloc(ItemPosData)
unregistersymbol(PlyPos)
unregistersymbol(ItemPos)
unregistersymbol(ItemDataPoint)
dealloc(icmem)
unregistersymbol(ItemControlEnabled)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>7147</ID>
                  <Description>"Item Scaler Status"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ItemDataPoint</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7148</ID>
                  <Description>"[DEBUG]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" Activated="0" RealAddress="00000000"/>
                  <Color>C0C0C0</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>7149</ID>
                      <Description>"X"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>000000</Color>
                      <VariableType>Float</VariableType>
                      <Address>plypos</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>7150</ID>
                      <Description>"Y"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>000000</Color>
                      <VariableType>Float</VariableType>
                      <Address>plypos+4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>7151</ID>
                      <Description>"Z"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>000000</Color>
                      <VariableType>Float</VariableType>
                      <Address>plypos+8</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>7152</ID>
                      <Description>"Number of items on ground"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>000000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>ItemPos</Address>
                      <Offsets>
                        <Offset>194</Offset>
                        <Offset>144</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>420</ID>
              <Description>"No Golden Keys Required (Gold Chest)"</Description>
              <LastState Activated="0"/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
label(chest)
registersymbol(chest)
aobscan(aobchest,74 1D 8A 54)

aobchest:
chest:
db EB 1D 8A 54

[DISABLE]
chest:
db 74 1D 8A 54
unregistersymbol(chest)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>3573</ID>
              <Description>"Resource Bypass (Gold Chest, Slots, etc)"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>/*
An AoB that removes the need to have a key at all.
It also makes some other things free, like the slots.
*/

[ENABLE]
aobscan(aobBypass,74 1D 8A 54 08)

label(aobBypass_r)
registersymbol(aobBypass_r)

aobBypass:
aobBypass_r:
db EB

[DISABLE]
aobBypass_r:
db 74

unregistersymbol(aobBypass_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2660</ID>
              <Description>"Free Moxi Drinks"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(DrinkAOB,8B 81 DC 00 00 00 8b 4d 10)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(DrinkStart)
registersymbol(DrinkStart)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//mov eax,[ecx+000000DC]
mov eax,0

exit:
jmp returnhere

DrinkAOB:
DrinkStart:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
DrinkStart:
db 8B 81 DC 00 00 00
unregistersymbol(DrinkStart)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1</ID>
              <Description>"Unlimited Moxxi's Drink Duration"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(address,F3 0F 11 8E BC 10 00 00)
alloc(newmem,2048)
label(MoxxiDrinkTime)
registersymbol(MoxxiDrinkTime)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
db 90 90 90 90 90 90 90 90
//movss [esi+000010BC],xmm1
jmp returnhere

exit:
jmp returnhere

address:
MoxxiDrinkTime:
 jmp newmem
 nop
 nop
 nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
MoxxiDrinkTime:
db F3 0F 11 8E BC 10 00 00
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2757</ID>
              <Description>"Infinite Double Jump"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(DoubleJAOB,8B 8B 98 0B 00 00 C1 E9 09)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(DJStart)
registersymbol(DJStart)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ecx,[ebx+00000B98]
mov byte ptr [ebx+00000B99],10

exit:
jmp returnhere

DoubleJAOB:
DJStart:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
DJStart:
db 8B 8B 98 0B 00 00
unregistersymbol(DJStart)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>9421</ID>
              <Description>"Auto Moon Shard Pick Up"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(StringAOB,A1 * * * * 8B 0C B0 68 00 10 00 00 6a)
aobscan(ObjectAOB,8b 0d * * * * 89 1c b9)
alloc(newmem,2024)

label(pBase)
registersymbol(pBase)

newmem:

pBase:
dd StringAOB+1
dd ObjectAOB+2

luacall(AutoMoonEnableDelay())
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
luacall(AutoMoonDisable())
dealloc(newmem)
unregistersymbol(pBase)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>6855</ID>
              <Description>"Item Deletion Check Bypass"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(AlphaAOB,83 7E 10 00 8D 46 10 74 ?? 50 8D 4D E8)
aobscan(BetaAOB,83 7E 14 00 8D 46 14 74 ?? 50 8D 4D E8)
aobscan(GammaAOB,83 7E 18 00 8D 46 18 74 ?? 50 8D 4D E8)
aobscan(DeltaAOB,83 7E 1C 00 8D 46 1C 74 ?? 50 8D 4D E8)
aobscan(EpsilonAOB,83 7E 20 00 8D 46 20 74 ?? 50 8D 4D E8)
aobscan(ZetaAOB,83 7E 24 00 8D 46 24 74 ?? 50 8D 4D E8)
aobscan(EtaAOB,83 7E 28 00 8D 46 28 74 ?? 50 8D 4D E8)
aobscan(ThetaAOB,83 7E 2C 00 8D 46 2C 74 ?? 50 8D 4D E8)
aobscan(MaterialAOB,83 3e 00 74 ?? 56 8d 4d e8)
aobscan(CheckAOB,E9 ?? ?? ?? ?? 8D 04 88 85 C0 0F 84)
label(AlphaCheck)
label(BetaCheck)
label(GammaCheck)
label(DeltaCheck)
label(EpsilonCheck)
label(ZetaCheck)
label(EtaCheck)
label(ThetaCheck)
label(MaterialCheck)
registersymbol(AlphaCheck)
registersymbol(BetaCheck)
registersymbol(GammaCheck)
registersymbol(DeltaCheck)
registersymbol(EpsilonCheck)
registersymbol(ZetaCheck)
registersymbol(EtaCheck)
registersymbol(ThetaCheck)
registersymbol(MaterialCheck)

AlphaAOB:
AlphaCheck:
db 83 7E 10 FF 8D 46 10 75

BetaAOB:
BetaCheck:
db 83 7E 14 FF 8D 46 14 75

GammaAOB:
GammaCheck:
db 83 7E 18 FF 8D 46 18 75

DeltaAOB:
DeltaCheck:
db 83 7E 1C FF 8D 46 1C 75

EpsilonAOB:
EpsilonCheck:
db 83 7E 20 FF 8D 46 20 75

ZetaAOB:
ZetaCheck:
db 83 7E 24 FF 8D 46 24 75

EtaAOB:
EtaCheck:
db 83 7E 28 FF 8D 46 28 75

ThetaAOB:
ThetaCheck:
db 83 7E 2C FF 8D 46 2C 75

MaterialAOB:
MaterialCheck:
db 83 3e FF 75


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
AlphaCheck:
db 83 7E 10 00 8D 46 10 74
BetaCheck:
db 83 7E 14 00 8D 46 14 74
GammaCheck:
db 83 7E 18 00 8D 46 18 74
DeltaCheck:
db 83 7E 1C 00 8D 46 1C 74
EpsilonCheck:
db 83 7E 20 00 8D 46 20 74
ZetaCheck:
db 83 7E 24 00 8D 46 24 74
EtaCheck:
db 83 7E 28 00 8D 46 28 74
ThetaCheck:
db 83 7E 2C 00 8D 46 2C 74
MaterialCheck:
db 83 3e 00 74

unregistersymbol(AlphaCheck)
unregistersymbol(BetaCheck)
unregistersymbol(GammaCheck)
unregistersymbol(DeltaCheck)
unregistersymbol(EpsilonCheck)
unregistersymbol(ZetaCheck)
unregistersymbol(EtaCheck)
unregistersymbol(ThetaCheck)
unregistersymbol(MaterialCheck)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>7185</ID>
          <Description>"[Vehicle]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>7186</ID>
              <Description>"[Current Vehicle]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>7189</ID>
                  <Description>"Vehicle Health"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>394</Offset>
                    <Offset>450</Offset>
                    <Offset>A4</Offset>
                    <Offset>30</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7192</ID>
                  <Description>"Vehicle Boost"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>188</Offset>
                    <Offset>38C</Offset>
                    <Offset>450</Offset>
                    <Offset>A4</Offset>
                    <Offset>30</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7193</ID>
                  <Description>"Vehicle Scale"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>000080</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>78</Offset>
                    <Offset>450</Offset>
                    <Offset>A4</Offset>
                    <Offset>30</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>7191</ID>
                      <Description>"Base Vehicle Scale"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>[pBasePointer]</Address>
                      <Offsets>
                        <Offset>78</Offset>
                        <Offset>38</Offset>
                        <Offset>450</Offset>
                        <Offset>A4</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>7184</ID>
                  <Description>"Vehicle Pos -&gt; X"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>60</Offset>
                    <Offset>450</Offset>
                    <Offset>A4</Offset>
                    <Offset>30</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7188</ID>
                  <Description>"Vehicle Pos -&gt; Y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>64</Offset>
                    <Offset>450</Offset>
                    <Offset>A4</Offset>
                    <Offset>30</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7187</ID>
                  <Description>"Vehicle Pos -&gt; Z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>68</Offset>
                    <Offset>450</Offset>
                    <Offset>A4</Offset>
                    <Offset>30</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>7195</ID>
              <Description>"[Vehicle 1]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>7197</ID>
                  <Description>"Vehicle Health"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>394</Offset>
                    <Offset>378</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7203</ID>
                  <Description>"Vehicle Boost"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>188</Offset>
                    <Offset>38C</Offset>
                    <Offset>378</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7198</ID>
                  <Description>"Vehicle Scale"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>000080</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>78</Offset>
                    <Offset>378</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>7199</ID>
                      <Description>"Base Vehicle Scale"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>[pBasePointer]</Address>
                      <Offsets>
                        <Offset>78</Offset>
                        <Offset>38</Offset>
                        <Offset>378</Offset>
                        <Offset>10</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>7200</ID>
                  <Description>"Vehicle Pos -&gt; X"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>60</Offset>
                    <Offset>378</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7201</ID>
                  <Description>"Vehicle Pos -&gt; Y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>64</Offset>
                    <Offset>378</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7202</ID>
                  <Description>"Vehicle Pos -&gt; Z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>68</Offset>
                    <Offset>378</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>7204</ID>
              <Description>"[Vehicle 2]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>7205</ID>
                  <Description>"Vehicle Health"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>394</Offset>
                    <Offset>37C</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7206</ID>
                  <Description>"Vehicle Boost"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>188</Offset>
                    <Offset>38C</Offset>
                    <Offset>37C</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7207</ID>
                  <Description>"Vehicle Scale"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>000080</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>78</Offset>
                    <Offset>37C</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>7208</ID>
                      <Description>"Base Vehicle Scale"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>[pBasePointer]</Address>
                      <Offsets>
                        <Offset>78</Offset>
                        <Offset>38</Offset>
                        <Offset>37C</Offset>
                        <Offset>10</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>7209</ID>
                  <Description>"Vehicle Pos -&gt; X"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>60</Offset>
                    <Offset>37C</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7210</ID>
                  <Description>"Vehicle Pos -&gt; Y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>64</Offset>
                    <Offset>37C</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7211</ID>
                  <Description>"Vehicle Pos -&gt; Z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>68</Offset>
                    <Offset>37C</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>7212</ID>
              <Description>"[Vehicle 3]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>7213</ID>
                  <Description>"Vehicle Health"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>394</Offset>
                    <Offset>380</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7214</ID>
                  <Description>"Vehicle Boost"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>188</Offset>
                    <Offset>38C</Offset>
                    <Offset>380</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7215</ID>
                  <Description>"Vehicle Scale"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>000080</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>78</Offset>
                    <Offset>380</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>7216</ID>
                      <Description>"Base Vehicle Scale"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>[pBasePointer]</Address>
                      <Offsets>
                        <Offset>78</Offset>
                        <Offset>38</Offset>
                        <Offset>380</Offset>
                        <Offset>10</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>7217</ID>
                  <Description>"Vehicle Pos -&gt; X"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>60</Offset>
                    <Offset>380</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7218</ID>
                  <Description>"Vehicle Pos -&gt; Y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>64</Offset>
                    <Offset>380</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7219</ID>
                  <Description>"Vehicle Pos -&gt; Z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>68</Offset>
                    <Offset>380</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>7220</ID>
              <Description>"[Vehicle 4]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>7221</ID>
                  <Description>"Vehicle Health"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>394</Offset>
                    <Offset>384</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7222</ID>
                  <Description>"Vehicle Boost"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>188</Offset>
                    <Offset>38C</Offset>
                    <Offset>384</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7223</ID>
                  <Description>"Vehicle Scale"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>000080</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>78</Offset>
                    <Offset>384</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>7224</ID>
                      <Description>"Base Vehicle Scale"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>[pBasePointer]</Address>
                      <Offsets>
                        <Offset>78</Offset>
                        <Offset>38</Offset>
                        <Offset>384</Offset>
                        <Offset>10</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>7225</ID>
                  <Description>"Vehicle Pos -&gt; X"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>60</Offset>
                    <Offset>384</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7226</ID>
                  <Description>"Vehicle Pos -&gt; Y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>64</Offset>
                    <Offset>384</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7227</ID>
                  <Description>"Vehicle Pos -&gt; Z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>68</Offset>
                    <Offset>384</Offset>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>335</ID>
          <Description>"[Ammo]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>3850</ID>
              <Description>"[Ammo Regen Rate]"</Description>
              <Options moHideChildren="1" moRecursiveSetValue="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>3851</ID>
                  <Description>"Assault Rifle Regen Rate"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>FF8000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>84</Offset>
                    <Offset>188</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>3854</ID>
                  <Description>"Shotgun Regen Rate"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>FF8000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>84</Offset>
                    <Offset>18C</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>3857</ID>
                  <Description>"Grenade Regen Rate"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>FF8000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>84</Offset>
                    <Offset>190</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>3860</ID>
                  <Description>"SMG Regen Rate"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>FF8000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>84</Offset>
                    <Offset>194</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>3863</ID>
                  <Description>"Pistol Regen Rate"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>FF8000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>84</Offset>
                    <Offset>198</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>3866</ID>
                  <Description>"Rocket Regen Rate"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>FF8000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>84</Offset>
                    <Offset>19C</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>3869</ID>
                  <Description>"Sniper Rifle Regen Rate"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>FF8000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>84</Offset>
                    <Offset>1A0</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6309</ID>
                  <Description>"Laser Regen Rate"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>FF8000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>84</Offset>
                    <Offset>1A4</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1106</ID>
              <Description>"[Ammo State Switches]"</Description>
              <Options moHideChildren="1" moRecursiveSetValue="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>6442</ID>
                  <Description>"!State Switches: Normal Value = 1 or 5; Infinite  = 6"</Description>
                  <LastState Value="" Activated="0" RealAddress="00000000"/>
                  <Color>0000FF</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>6385</ID>
                  <Description>"Assault Rifle Ammo Switch"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>004000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>[pBasepointer]</Address>
                  <Offsets>
                    <Offset>108</Offset>
                    <Offset>188</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>0</ID>
                  <Description>"Shotgun Ammo Switch"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>004000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>[pBasepointer]</Address>
                  <Offsets>
                    <Offset>108</Offset>
                    <Offset>18C</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6373</ID>
                  <Description>"Grenade Ammo Switch"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>004000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>[pBasepointer]</Address>
                  <Offsets>
                    <Offset>108</Offset>
                    <Offset>190</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6375</ID>
                  <Description>"SMG Ammo Switch"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>004000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>[pBasepointer]</Address>
                  <Offsets>
                    <Offset>108</Offset>
                    <Offset>194</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6376</ID>
                  <Description>"Pistol Ammo Switch"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>004000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>[pBasepointer]</Address>
                  <Offsets>
                    <Offset>108</Offset>
                    <Offset>198</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6377</ID>
                  <Description>"Rocket Ammo Switch"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>004000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>[pBasepointer]</Address>
                  <Offsets>
                    <Offset>108</Offset>
                    <Offset>19C</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6387</ID>
                  <Description>"Sniper Rifle Ammo Switch"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>004000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>[pBasepointer]</Address>
                  <Offsets>
                    <Offset>108</Offset>
                    <Offset>1A0</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6386</ID>
                  <Description>"Laser Ammo Switch"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>004000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>[pBasepointer]</Address>
                  <Offsets>
                    <Offset>108</Offset>
                    <Offset>1A4</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>153</ID>
              <Description>"Assault Rifle Ammo"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>188</Offset>
                <Offset>2C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>154</ID>
                  <Description>"Scaled Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>58</Offset>
                    <Offset>188</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>155</ID>
                  <Description>"Base Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>5C</Offset>
                    <Offset>188</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>156</ID>
              <Description>"Shotgun Ammo"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>18C</Offset>
                <Offset>2C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>157</ID>
                  <Description>"Scaled Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>58</Offset>
                    <Offset>18C</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>158</ID>
                  <Description>"Base Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>5C</Offset>
                    <Offset>18C</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>159</ID>
              <Description>"Grenade Ammo"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>190</Offset>
                <Offset>2C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>160</ID>
                  <Description>"Scaled Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>58</Offset>
                    <Offset>190</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>161</ID>
                  <Description>"Base Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>5C</Offset>
                    <Offset>190</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>162</ID>
              <Description>"SMG Ammo"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>194</Offset>
                <Offset>2C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>163</ID>
                  <Description>"Scaled Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>58</Offset>
                    <Offset>194</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>164</ID>
                  <Description>"Base Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>5C</Offset>
                    <Offset>194</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>165</ID>
              <Description>"Pistol Ammo"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>198</Offset>
                <Offset>2C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>166</ID>
                  <Description>"Base Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>58</Offset>
                    <Offset>198</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>167</ID>
                  <Description>"Base Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>5C</Offset>
                    <Offset>198</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>168</ID>
              <Description>"Rocket Ammo"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>19C</Offset>
                <Offset>2C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>169</ID>
                  <Description>"Scaled Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>58</Offset>
                    <Offset>19C</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>170</ID>
                  <Description>"Base Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>5C</Offset>
                    <Offset>19C</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>171</ID>
              <Description>"Sniper Rifle Ammo"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>1A0</Offset>
                <Offset>2C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>172</ID>
                  <Description>"Scaled Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>58</Offset>
                    <Offset>1A0</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>173</ID>
                  <Description>"Base Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>5C</Offset>
                    <Offset>1A0</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>6306</ID>
              <Description>"Laser Ammo"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Float</VariableType>
              <Address>[pBasePointer]</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>1A4</Offset>
                <Offset>2C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>6307</ID>
                  <Description>"Scaled Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>58</Offset>
                    <Offset>1A4</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6308</ID>
                  <Description>"Base Maximum"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>[pBasePointer]</Address>
                  <Offsets>
                    <Offset>5C</Offset>
                    <Offset>1A4</Offset>
                    <Offset>2C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>6207</ID>
          <Description>"[Golden Keys]"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
LuaCall(findKeyBase())

[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>6213</ID>
              <Description>"!If these don't work, try the No Golden Keys or Resource Bypass script under [Scripts]"</Description>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>6209</ID>
              <Description>"Base Golden Keys Used"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>KeysPointerBase</Address>
              <Offsets>
                <Offset>2</Offset>
                <Offset>640</Offset>
                <Offset>48</Offset>
                <Offset>134</Offset>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6212</ID>
              <Description>"Shift Golden Keys Used"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>KeysPointerBase</Address>
              <Offsets>
                <Offset>5</Offset>
                <Offset>640</Offset>
                <Offset>48</Offset>
                <Offset>134</Offset>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6208</ID>
              <Description>"Base Golden Keys Total"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>KeysPointerBase</Address>
              <Offsets>
                <Offset>1</Offset>
                <Offset>640</Offset>
                <Offset>48</Offset>
                <Offset>134</Offset>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6210</ID>
              <Description>"SHiFT Golden Keys Total"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>KeysPointerBase</Address>
              <Offsets>
                <Offset>4</Offset>
                <Offset>640</Offset>
                <Offset>48</Offset>
                <Offset>134</Offset>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>6389</ID>
          <Description>"[DEBUG]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>C0C0C0</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>6390</ID>
              <Description>"!WARNING: Be careful using anything within the DEBUG section"</Description>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>6863</ID>
              <Description>"[Unreal Debug]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>0080FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>6864</ID>
                  <Description>"p0 [WorldInfo]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p0</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>6865</ID>
                      <Description>"PlayersOnly [XOR with 0x200, on / AND FFFFFF1FF, off]"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>p0</Address>
                      <Offsets>
                        <Offset>284</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>6866</ID>
                      <Description>"SloMo"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>p0</Address>
                      <Offsets>
                        <Offset>2E8</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>6867</ID>
                  <Description>"p1 [WillowPlayerPawn]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>6868</ID>
                      <Description>"EPhysics [1 - PHYS_Walking / 4 - PHYS_Flying]"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>9C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>6869</ID>
                      <Description>"Ghost [0xD9, off / 0xE1, on]"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>BF</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>6870</ID>
                  <Description>"p2 [WillowPlayerController]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p2</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>6871</ID>
                      <Description>"God [0x83, off / 0x9B, on]"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>p2</Address>
                      <Offsets>
                        <Offset>1A0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>247</ID>
                      <Description>"PHYS_EPhysics_A"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>p2</Address>
                      <Offsets>
                        <Offset>10</Offset>
                        <Offset>14</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>248</ID>
                      <Description>"PHYS_EPhysics_B"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>p2</Address>
                      <Offsets>
                        <Offset>28</Offset>
                        <Offset>14</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>9422</ID>
              <Description>"Researcher Assistant"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>004000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(StringAOB,A1 * * * * 8B 0C B0 68 00 10 00 00 6a)
aobscan(ObjectAOB,8b 0d * * * * 89 1c b9)
alloc(newmem,2024)

label(pBase)
registersymbol(pBase)

newmem:

pBase:
dd StringAOB+1
dd ObjectAOB+2

luacall(form_show(Debugger))
[DISABLE]
luacall(form_hide(Debugger))

dealloc(newmem)
unregistersymbol(pBase)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>6858</ID>
              <Description>"pBasePointer"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[pBasePointer]</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>6856</ID>
              <Description>"Revert [Enable] AoB"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>/* 89 35 ?? ?? ?? ?? 8B 06 8B 4D EC E9 ?? ?? ?? ?? 90 */
[ENABLE]
aobscan(aobEnablePointer1,E9 * * * * 8D 04 88 85 C0 0F 84)
aobEnablePointer1:
db 8B 06 8B 4D EC
unregistersymbol(aobBasePointer_r)
unregistersymbol(pBasePointer)

aobscan(aobEnablePointer2,E9????????90900F??????????F30F????????????F30F)
aobEnablePointer2:
cmp byte ptr [ecx+9C],1
unregistersymbol( p2 )
unregistersymbol( p1 )
unregistersymbol( p0 )
unregistersymbol( dwPlayer_EPhysics_Hook )
unregistersymbol( Player_EPhysics_Hook )

LuaCall(unfreezeAllMemoryRecords())
[DISABLE]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2656</ID>
              <Description>"Disable Console Say"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(DisSayAOB,80 7d 0b 00 0f 84 * * * * 68)
registersymbol(DisSayAOB)


DisSayAOB:
db 80 7D 0B 01



[DISABLE]
//code from here till the end of the code will be used to disable the cheat
DisSayAOB:
db 80 7D 0B 00
unregistersymbol(DisSayAOB)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>2</ID>
                  <Description>"Say String"</Description>
                  <LastState Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>String</VariableType>
                  <Length>3</Length>
                  <Unicode>1</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>BorderlandsPreSequel.exe+1877244</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>6421</ID>
              <Description>"Base Addresses"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(StringAOB,A1 * * * * 8B 0C B0 68 00 10 00 00 6a)
aobscan(ObjectAOB,8b 0d * * * * 89 1c b9)
alloc(newmem,2024)

label(pBase)
registersymbol(pBase)

newmem:

pBase:
dd StringAOB+1
dd ObjectAOB+2

LuaCall(BaseObjectAdderDelay())
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
unregistersymbol(pBase)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>7133</ID>
                  <Description>"Body Class Death Definition"</Description>
                  <LastState Value="??" Activated="0" RealAddress="05C96218"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>5C96218</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7134</ID>
                  <Description>"Body Class Definition"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00E7C318"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>E7C318</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7135</ID>
                  <Description>"Player Head/Skin Base"</Description>
                  <LastState Value="??" Activated="0" RealAddress="06E67158"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>6E67158</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7136</ID>
                  <Description>"Dlc Item Set Base"</Description>
                  <LastState Value="??" Activated="0" RealAddress="08D9BE18"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>8D9BE18</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7137</ID>
                  <Description>"Package Def Base"</Description>
                  <LastState Value="??" Activated="0" RealAddress="08D9BD78"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>8D9BD78</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7138</ID>
                  <Description>"Usable Item Definition"</Description>
                  <LastState Value="??" Activated="0" RealAddress="0935A518"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>935A518</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7139</ID>
                  <Description>"Loot Pool Base"</Description>
                  <LastState Value="??" Activated="0" RealAddress="08D9B7D8"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>8D9B7D8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7140</ID>
                  <Description>"Pool List Defination"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00EA0898"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>EA0898</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7141</ID>
                  <Description>"Population Den Base"</Description>
                  <LastState Value="??" Activated="0" RealAddress="060A6918"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>60A6918</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7142</ID>
                  <Description>"Fast Travel Base"</Description>
                  <LastState Value="??" Activated="0" RealAddress="06E666D8"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>6E666D8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7143</ID>
                  <Description>"VSSUI Vehicle Base"</Description>
                  <LastState Value="??" Activated="0" RealAddress="06E66558"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>6E66558</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7144</ID>
                  <Description>"Pawn Balance Base"</Description>
                  <LastState Value="??" Activated="0" RealAddress="05C92D98"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>5C92D98</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7145</ID>
                  <Description>"Willow Player Stats"</Description>
                  <LastState Value="??" Activated="0" RealAddress="09354618"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>9354618</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>9433</ID>
                  <Description>"Shift Update/Account Info"</Description>
                  <LastState Value="??" Activated="0" RealAddress="05C46718"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>5C46718</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>9434</ID>
                  <Description>"Mission Weapon Balance"</Description>
                  <LastState Value="??" Activated="0" RealAddress="08D9B878"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>8D9B878</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>9435</ID>
                  <Description>"KeyedItemPoolDefinition"</Description>
                  <LastState Value="??" Activated="0" RealAddress="08D9B698"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>8D9B698</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>9436</ID>
                  <Description>"Player Save Game"</Description>
                  <LastState Value="??" Activated="0" RealAddress="09359618"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>9359618</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>9437</ID>
                  <Description>"Player Controller"</Description>
                  <LastState Value="??" Activated="0" RealAddress="0682C018"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>682C018</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>9438</ID>
                  <Description>"Willow Game Replication Info"</Description>
                  <LastState Value="??" Activated="0" RealAddress="06DADE18"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>6DADE18</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>9439</ID>
                  <Description>"WillowPopulationPoint"</Description>
                  <LastState Value="??" Activated="0" RealAddress="09356B98"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>9356B98</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>6405</ID>
              <Description>"Current Object Look"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(LookatAOB,89 81 28 0E 00 00 89 91 2C 0E 00 00)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(Lookat)
label(LookStart)
registersymbol(Lookat)
registersymbol(LookStart)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [ecx+00000E28],eax
mov [Lookat],ecx

exit:
jmp returnhere

Lookat:

LookatAOB:
LookStart:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
LookStart:
db 89 81 28 0E 00 00
unregistersymbol(Lookat)
unregistersymbol(LookStart)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>6406</ID>
                  <Description>"Base"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6407</ID>
                  <Description>"GameStage"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>278</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6408</ID>
                  <Description>"Currency To Use [1]"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>210</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6409</ID>
                  <Description>"Currency To Use [2]"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>211</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6410</ID>
                  <Description>"Cost To Use [1]"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>214</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6411</ID>
                  <Description>"Cost To Use [2]"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>218</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6412</ID>
                  <Description>"Shop Pools"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>310</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>6413</ID>
              <Description>"Current Object Look2"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(LookatAOB,8B 8E 88 13 00 00 85 c9 74 2b)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(Lookat)
label(LookStart)
registersymbol(Lookat)
registersymbol(LookStart)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ecx,[esi+00001388]
mov [Lookat],esi

exit:
jmp returnhere

Lookat:

LookatAOB:
LookStart:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
LookStart:
db 8B 8E 88 13 00 00
unregistersymbol(Lookat)
unregistersymbol(LookStart)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>59</ID>
                  <Description>"Base"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6414</ID>
                  <Description>"GameStage"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>278</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6415</ID>
                  <Description>"Currency To Use [1]"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>210</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6416</ID>
                  <Description>"Currency To Use [2]"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>211</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6417</ID>
                  <Description>"Cost To Use [1]"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>214</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6418</ID>
                  <Description>"Cost To Use [2]"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>218</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6419</ID>
                  <Description>"Shop Pools"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Lookat</Address>
                  <Offsets>
                    <Offset>310</Offset>
                    <Offset>E28</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>9430</ID>
              <Description>"Manual Loot Splosion Update"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
LuaCall(LootSplosionUpdate(true))


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>aobBypass_r</Name>
      <Address>0070CDAC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MoxxiDrinkTime</Name>
      <Address>01792E8F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCamera</Name>
      <Address>0FE10000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bToggleKeyPressed</Name>
      <Address>0FE10010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bScriptEnabled</Name>
      <Address>0FE10020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vCameraSet</Name>
      <Address>0FE10030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vCamreaMode</Name>
      <Address>0FE10040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fov</Name>
      <Address>13AA0010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBasePointer</Name>
      <Address>10720011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobBasePointer_r</Name>
      <Address>0106194D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>p0</Name>
      <Address>10720900</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>p1</Name>
      <Address>10720904</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>p2</Name>
      <Address>10720908</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>dwPlayer_EPhysics_Hook</Name>
      <Address>002F9BF8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetIndex</Name>
      <Address>00568520</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SetIndex</Name>
      <Address>00AE78F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTime</Name>
      <Address>0FE00100</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pScale</Name>
      <Address>0FE00104</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>dwDayNight</Name>
      <Address>00EF7251</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>thirdpersonsubAOB1_jmp</Name>
      <Address>00B51480</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>thirdpersonsubAOB2_jmp</Name>
      <Address>0043CB70</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pOffsets</Name>
      <Address>10990018</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Toggler</Name>
      <Address>10740300</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>KeyHandlerOff</Name>
      <Address>10740304</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bPlayersOnly</Name>
      <Address>10740308</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFly</Name>
      <Address>1074030C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bGhost</Name>
      <Address>10740310</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bGod</Name>
      <Address>10740314</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DJStart</Name>
      <Address>0075F238</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>controlMainForm = getMainForm()
AddressList = getAddressList()
-- Remove the first hyphen from the next line to comment out the Cheat Engine slim line code
---[[
--Compact mode
  control_setVisible(wincontrol_getControl(controlMainForm,0), false)
  control_setVisible(wincontrol_getControl(controlMainForm,2), false)
  control_setVisible(wincontrol_getControl(controlMainForm,3), false)
--end
--Disable header sorting and items dragging
  AddressListTreeview = component_getComponent(AddressList,0)
  AddressListHeader   = component_getComponent(AddressList,1)
  setMethodProperty(AddressListHeader  ,"OnSectionClick",nil)
  setMethodProperty(AddressListTreeview,"OnDragOver"    ,nil)
  setMethodProperty(AddressListTreeview,"OnDragDrop"    ,nil)
  setMethodProperty(AddressListTreeview,"OnEndDrag"     ,nil)
--end

--show main window
  ShowMainWindowTimer = createTimer(nil,false)
  timer_setInterval(ShowMainWindowTimer, 1)
  timer_onTimer(ShowMainWindowTimer, function (sender)
    object_destroy(sender)
    control_setVisible(controlMainForm,true) -- set visible
    form_setMenu(controlMainForm,nil)        -- hide menu
  end)
  timer_setEnabled(ShowMainWindowTimer, true)
--end
--]]--

if getCEVersion == nil or getCEVersion() &lt; 6.3 then
  messageDialog('It is recommended to use at least Cheat Engine 6.3! (Your Version: '..getCEVersion()..')', mtError, mbOK)
end

errorOnLookupFailure(false)
DefaultProccessName = "BorderlandsPreSequel.exe"
strings_add(getAutoAttachList(), DefaultProccessName)
--]]--
---------------------------------------------------------------------------------------------------
--[[
- Utility Functions
]]--

--Debug Logger
debug_log_already_visible = false
function DebugLog(sLog)
  if not sLog or not trim(sLog) then return end
  if not debug_log_already_visible then
    form_show(DebugWindow)
    debug_log_already_visible = true
  end
  memo_append(DebugWindow_Log, trim(sLog))
end
Log = DebugLog

function DebugMessage(sMessage)
  if not sMessage or not trim(sMessage) then return end
  sMessage = trim(sMessage)
  DebugLog(sMessage); showMessage(sMessage)
end

function Dec2Hex(nValue)
  return string.format("%X", 0+nValue)
end

function Hex2Dec(sValue)
  return tonumber(sValue, 16).."";
end

function trim(s)
  return s:find'^%s*$' and '' or s:match'^%s*(.*%S)'
end

function triml(s)
  return s:match'^%s*(.*)'
end

function trimr(s)
  return s:find'^%s*$' and '' or s:match'^(.*%S)'
end

function getn(tt)
  local count = 0
  for ii,xx in pairs(tt) do count = count + 1 end
  return count
end

function sin(Count,Distance,Number)
  return(math.sin((6.28318/Count)*Number)*Distance)
end

function cos(Count,Distance,Number)
  return(math.cos((6.28318/Count)*Number)*Distance)
end

function round(what, precision)
   if what == nil then return 0 end
   return math.floor(what*math.pow(10,precision)+0.5) / math.pow(10,precision)
end

function clearDebugLog()
  strings_clear(memo_getLines(DebugWindow_Log))
end

function unfreezeAllMemoryRecords()
  local count = addresslist_getCount(AddressList)
  for i=0,count-1 do
    local record = addresslist_getMemoryRecord(AddressList, i)
    memoryrecord_unfreeze(record)
  end
end

function getProcessNameFromProcessID(iProcessID)
  if iProcessID &lt; 1 then return 0 end
  local plist = createStringlist()
  getProcesslist(plist)
  for i=1, strings_getCount(plist)-1 do
    local process = strings_getString(plist, i)
    local offset = string.find(process,'-')
    local pid = tonumber('0x'..string.sub(process,1,offset-1))
    local pname = string.sub(process,offset+1)
    if pid == iProcessID then return pname end
  end
  return 0
end

function getOpenedProcessName()
  local process = getOpenedProcessID()
  if process ~= 0 and getProcessIDFromProcessName(DefaultProccessName) == getOpenedProcessID() then
    if checkOpenedProcess(DefaultProccessName) == true then return DefaultProccessName end
    return 0
  end
  return getProcessNameFromProcessID(getOpenedProcessID())
end

function checkOpenedProcess(process)
  if process == nil or process == 0 or process == false then
    process = getOpenedProcessID()
    if process ~= 0 and getProcessIDFromProcessName(DefaultProccessName) == process then
      process = DefaultProccessName
    end
  end
  if type(process) == "number" then process = getProcessNameFromProcessID(process) end
  if process ~= nil and process ~= 0 then
    if readInteger(process) then return true end
  end
  return false
end

function checkProccessAttached()
  if DefaultProccessName == nil then return end
  if checkOpenedProcess() == false then openProcess(DefaultProccessName) end
end

function CheckVariable(sVar)
  if type(sVar) == 'string' then sVar = readInteger(getAddress(sVar)) end
  if sVar == nil or sVar == false or sVar &lt;= 0 then return false end
  return true
end

function CheckEnabled(sVar,CheckVar)
   if checkOpenedProcess() == false or CheckVariable('pBasePointer') == false then return false end
   if sVar ~= nil then
     local bEnabled = readInteger(getAddress(sVar))
     if CheckVar == true then return CheckVariable(bEnabled) end
     if bEnabled == nil or (bEnabled ~= 1 and bEnabled ~= true) then return false end
   end
   return true
end

--for ByteArray and -W+X-C (something like AOBScan() function, but only one result; and faster)
function ScanForItByteArray(scanThis)
  local newscanObj = createMemScan()

  memscan_returnOnlyOneResult(newscanObj,true)
  memscan_firstScan(newscanObj, soExactValue, vtByteArray, rtTruncated,
                    scanThis,nil,"00000000","7fffffff","-W+X-C",fsmNotAligned,
                    "", true, false, false, false);
  memscan_waitTillDone(newscanObj)

  local RESULT = memscan_getOnlyResult(newscanObj)
  object_destroy(newscanObj)
  return RESULT
end

--for Grouped and +W-X-C
function ScanForItGrouped(scanThis,alignment)
  local newscanObj = createMemScan()

  memscan_returnOnlyOneResult(newscanObj,true)
  memscan_firstScan(newscanObj, soExactValue, vtGrouped, rtTruncated,
                    scanThis,nil,"00000000","7fffffff","+W-X-C",fsmAligned,
                    alignment, false, false, false, false);
  memscan_waitTillDone(newscanObj)

  local RESULT = memscan_getOnlyResult(newscanObj)
  object_destroy(newscanObj)
  return RESULT
end

--for Dword and +W
function ScanForItDword(scanThis)
  local newscanObj = createMemScan()

  memscan_firstScan(newscanObj,soExactValue,vtDword,"",
                    scanThis,"0","0x00000000","7fffffff","+W",fsmAligned,
                    "4",false,false,true,false)
  memscan_waitTillDone(newscanObj)
  local ScanResults = createFoundList(newscanObj)
  foundlist_initialize(ScanResults)
  object_destroy(newscanObj)
  return ScanResults
end

--Base Address Scan
function BaseAddressScan(Address,isHex,PBar)
  local ScanOutput = {}
  local BaseAddrScan = createMemScan(PBar)
  if isHex == true then Address = Hex2Dec(Address) end
  BaseAddrScan.firstScan(soExactValue,vtDword,rtTruncated,Address,"0","0x00000000","0x70000000","+W",fsmAligned,"4",false,false,false,false)
  BaseAddrScan.waitTillDone()
  local AdderResult = createFoundList(BaseAddrScan)
  AdderResult.initialize()
  for i=0,AdderResult.getCount()-1 do
    table.insert(ScanOutput,AdderResult.getAddress(i))
  end
  BaseAddrScan:destroy()
  AdderResult:destroy()
  return ScanOutput
end

--Base Address Scan with Name
function BaseAddressScanWithName(Address,isHex,isPart)
  local ScanOutput = {}
  local BaseAddrScan = createMemScan(PBar)
  if isHex == true then Address = Hex2Dec(Address) end
  BaseAddrScan.firstScan(soExactValue,vtDword,rtTruncated,Address,"0","0x00000000","0x70000000","+W",fsmAligned,"4",false,false,false,false)
  BaseAddrScan.waitTillDone()
  local AdderResult = createFoundList(BaseAddrScan)
  AdderResult.initialize()
  for i=0,AdderResult.getCount()-1 do
    local ObjResult = AdderResult.getAddress(i)
    ScanOutput[GetFullString(ObjResult,true,isPart)] = ObjResult
  end
  BaseAddrScan:destroy()
  AdderResult:destroy()
  return ScanOutput
end

--Base Address Search
function BaseObjectSearch(BaseFinder)
  local BaseObj = getAddress(ObjectBase)
  local ResultCount = 0
  local ReturnTable = {}
  for i=0,9000 do
    local Objec = readInteger(BaseObj+i*4)
    local ObjIndex = readInteger(Objec+0x2c)
    local ObjString = GetStringByIndex(ObjIndex)
    local iFound = nil
    for k,v in pairs(BaseFinder) do
      if v == ObjString then iFound = v break end
    end
    if iFound ~= nil then
      ResultCount = ResultCount + 1
      ReturnTable[iFound] = BaseAddressScanWithName(readInteger(Objec))
    end
    if ResultCount == #BaseFinder then break end
  end
  return ReturnTable
end

--Get String by Index
function GetStringByIndex(Index, StringTable)
  if not StringTable then StringTable = StringPointer end
  local IOffset = readInteger(getAddress(StringTable)+Index*4)
  if IOffset == 0 or IOffset == nil then
    return "[Invalid Index]"
  else
    return readString(IOffset+0x10,70)
  end
end

--HotKey Control
if aHotKey ~= nil and getn(aHotKey) ~= 0 then
  for k,v in pairs(aHotKey) do aHotKey[k].destroy(); object_destroy(aHotKey[k]); aHotKey[k] = nil end
end
aHotKey = {}

function addHotKey(func, button)
  if func == nil or button == nil then return end
  local aKey = func..'-'..button
  if aHotKey[aKey] ~= nil then aHotKey[aKey].destroy(); object_destroy(aHotKey[aKey]); aHotKey[aKey] = nil end
  aHotKey[aKey] = createHotkey(func, button)
end

function delHotKey(func, button)
  if func == nil or button == nil then return end
  local aKey = func..'-'..button
  if aHotKey[aKey] ~= nil then aHotKey[aKey].destroy(); object_destroy(aHotKey[aKey]); aHotKey[aKey] = nil end
end
removeHotKey = removeHotKey

--[[ -------------------------------------------------------------------- ]]--
--[[
- Starting Message
]]--

clearDebugLog()
control_setCaption(controlMainForm,"Borderlands Pre-Sequel Cheat Compilation by TechnoJacker - Cheat Engine " .. getCEVersion())
---[[
DebugLog('************************************************************************')
DebugLog('*Borderlands Pre-Sequel Cheat Compilation by TechnoJacker')
DebugLog('*Cheat Engine Support Topic: http://goo.gl/rgm8io')
DebugLog('*Latest Cheat Compilation Locations:')
DebugLog('*Google Drive: http://goo.gl/XIMV80')
DebugLog('*Dropbox: http://goo.gl/eJc5X6')
DebugLog('************************************************************************')

local OpenedProcess = getOpenedProcessName()
if OpenedProcess ~= 0 then
  DebugLog("~Hooked Process: "..OpenedProcess..' ('..getOpenedProcessID()..')')
end

function onOpenProcess(processid)
  DebugLog("~Hooking Process: "..getProcessNameFromProcessID(processid)..' ('..processid..')')
  unfreezeAllMemoryRecords()
  beep()
end

setGlobalDelayBetweenHotkeyActivation(200)
--]]--

if AttachTimer ~= nil then
  timer_setEnabled(AttachTimer, false); object_destroy(AttachTimer); AttachTimer = nil;
end
AttachTimer = createTimer(nil)
timer_onTimer(AttachTimer, checkProccessAttached)
timer_setInterval(AttachTimer,10000)
timer_setEnabled(AttachTimer, true)

--[[ -------------------------------------------------------------------- ]]--
--[[
- Change Item Level
]]--

function ItemLevelUpdate(AutoUpdate)
  if CheckEnabled("ItemUpdateEnabled") == false then return end
  if AutoUpdate ~= true then DebugLog("@Function: ItemLevelUpdate()") end
  local DesiredLevel = readInteger("DesiredLevel")
  if DesiredLevel == 0 then
    local PlayerLevel = readInteger('[[[pBasePointer]]+24]+258')
    if PlayerLevel ~= nil then
      DesiredLevel = PlayerLevel
    end
    if DesiredLevel &lt;= 0 then return end
  end
  local offset = "8AC"
  if readQword("[ItemAddressBase]+4C") == 0 then
    offset = "E84"
  end
  local CurrentItemLevel = readInteger("[ItemAddressBase]+"..offset)
  local CurrentDisplayLevel = readInteger("[ItemAddressBase]+1DC")
  if CurrentItemLevel ~= CurrentDisplayLevel then
    if AutoUpdate ~= true then
      DebugLog("-Current item level ("..CurrentItemLevel..") is not equal to display level ("..CurrentDisplayLevel..")")
    end
    return
  end
  if CurrentItemLevel == DesiredLevel then
    if AutoUpdate ~= true then
      DebugLog("-Current item level ("..CurrentItemLevel..") is equal to desired level ("..DesiredLevel..")")
    end
    return
  end
  local success = writeInteger("[ItemAddressBase]+"..offset,DesiredLevel)
  if success then
    writeInteger("[ItemAddressBase]+1DC",DesiredLevel)
    if AutoUpdate ~= true then
      DebugLog("-Updated item at address " .. Dec2Hex(readInteger("ItemAddressBase")) .. " to level " .. DesiredLevel)
      beep()
    end
  elseif AutoUpdate ~= true then
    DebugLog("!Error: Failed to update item level")
  end
end

function CheckItemUpdate()
  if CheckEnabled("ItemUpdateEnabled") == false then
    StopItemUpdateTimer()
    return
  end
  if CheckEnabled('UpdateTimerEnabled') == false then
    timer_setInterval(AUITimer,5000)
    return
  else
    timer_setInterval(AUITimer,1000)
  end
  ItemLevelUpdate(true)
end

function StartItemUpdateTimerDelay()
  StopItemUpdateTimer()
  AddAutoUpdateToggles()
  AUITimer = createTimer(nil,true)
  timer_onTimer(AUITimer,StartItemUpdateTimer)
end

function StopItemUpdateTimer()
  if AUITimer ~= nil then
    timer_setEnabled(AUITimer, false)
    object_destroy(AUITimer)
    AUITimer = nil
  end
end

function StartItemUpdateTimer()
  StopItemUpdateTimer()
  if CheckEnabled("ItemUpdateEnabled") == false then return end
  AUITimer = createTimer(nil)
  timer_onTimer(AUITimer, CheckItemUpdate)
  timer_setInterval(AUITimer,100)
  timer_setEnabled(AUITimer, true)
end
StartItemUpdateTimer()

function ToggleAutoUpdateOn(memrec)
  if AutoUpdateAddr then writeInteger('UpdateTimerEnabled', 1) end
  return true
end

function ToggleAutoUpdateOff(memrec)
  if AutoUpdateAddr then writeInteger('UpdateTimerEnabled', 0) end
  return true
end

function AddAutoUpdateToggles()
  AutoUpdateAddr = addresslist_getMemoryRecordByDescription(AddressList, 'Auto Update Item Levels')
  if AutoUpdateAddr then
    memoryrecord_onActivate(AutoUpdateAddr, ToggleAutoUpdateOn)
    memoryrecord_onDeactivate(AutoUpdateAddr, ToggleAutoUpdateOff)
  end
end

addHotKey("ItemLevelUpdate", VK_F2)

--[[ -------------------------------------------------------------------- ]]--
--[[
- Teleport
]]--

SaveLoc = {}; SavePos = 0
CordAddressData = {
  [1] = "[[[[[[[pBasePointer]]+10]+1C4]+0]+A4]+C30]+60",
  [2] = "[[[[[[[pBasePointer]]+10]+1C4]+4]+A4]+C30]+60",
  [3] = "[[[[[[[pBasePointer]]+10]+1C4]+8]+A4]+C30]+60",
  [4] = "[[[[[[[pBasePointer]]+10]+1C4]+C]+A4]+C30]+60"
}

function TeleportSave()
  if CheckEnabled('bTeleModLoaded') == false then return end
  DebugLog("@Function: TeleportSave()")

  local BaseAddressString = getAddress(CordAddressData[1])
  SavePos = readInteger("iTeleModSavePos")
  SaveLoc[SavePos] = { x = readFloat(BaseAddressString+0),
                       y = readFloat(BaseAddressString+4),
                       z = readFloat(BaseAddressString+8) }

  DebugLog("-Saved Location: Pos = " .. SavePos ..
           " :: X = " .. SaveLoc[SavePos]['x'] ..
           " :: Y = " .. SaveLoc[SavePos]['y'] ..
           " :: Z = " .. SaveLoc[SavePos]['z'])
  beep()
end

function TeleportLoad()
  if CheckEnabled('bTeleModLoaded') == false then return end

  SavePos = readInteger("iTeleModSavePos")
  if SaveLoc[SavePos] == nil then return end
  DebugLog("@Function: TeleportLoad()")

  local BaseAddressString = getAddress(CordAddressData[1])
  writeFloat(BaseAddressString+0, SaveLoc[SavePos]['x'])
  writeFloat(BaseAddressString+4, SaveLoc[SavePos]['y'])
  writeFloat(BaseAddressString+8, SaveLoc[SavePos]['z'])

  DebugLog("-Loaded Location: Pos = " .. SavePos ..
           " :: X = " .. SaveLoc[SavePos]['x'] ..
           " :: Y = " .. SaveLoc[SavePos]['y'] ..
           " :: Z = " .. SaveLoc[SavePos]['z'])
  beep()
end

function TeleportToHost()
  if CheckEnabled('bTeleModLoaded') == false then return end
  DebugLog("@Function: TeleportToHost()")

  local BaseAddressString = getAddress(CordAddressData[1])
  local WarpedPlayer = false
  for i=2,#CordAddressData do
    local CordAddressString = getAddress(CordAddressData[i])
    if CordAddressString &lt; 1000 then break end

    writeFloat(CordAddressString+0, readFloat(BaseAddressString+0))
    writeFloat(CordAddressString+4, readFloat(BaseAddressString+4))
    writeFloat(CordAddressString+8, readFloat(BaseAddressString+8))
    WarpedPlayer = true
  end
  if WarpedPlayer == true then beep() end
end

function TeleportToPlayer(PlayerID)
  if CheckEnabled('bTeleModLoaded') == false then return end
  if PlayerID == nil or type(PlayerID) ~= 'number' or PlayerID &lt; 2 or PlayerID &gt; 4 then return end
  DebugLog("@Function: TeleportToPlayer("..PlayerID..")")

  local BaseAddressString = getAddress(CordAddressData[1])
  local CordAddressString = getAddress(CordAddressData[PlayerID])
  if CordAddressString &gt; 1000 then
    writeFloat(BaseAddressString+0, readFloat(CordAddressString+0))
    writeFloat(BaseAddressString+4, readFloat(CordAddressString+4))
    writeFloat(BaseAddressString+8, readFloat(CordAddressString+8))
    beep()
  end
end

function TeleportPlayer(PlayerID)
  if CheckEnabled('bTeleModLoaded') == false then return end
  if PlayerID == nil or type(PlayerID) ~= 'number' or PlayerID &lt; 2 or PlayerID &gt; 4 then return end
  DebugLog("@Function: TeleportPlayer("..PlayerID..")")

  local BaseAddressString = getAddress(CordAddressData[1])
  local CordAddressString = getAddress(CordAddressData[PlayerID])
  if CordAddressString &gt; 1000 then
    writeFloat(CordAddressString+0, readFloat(BaseAddressString+0))
    writeFloat(CordAddressString+4, readFloat(BaseAddressString+4))
    writeFloat(CordAddressString+8, readFloat(BaseAddressString+8))
    beep()
  end
end

TeleportToPlayerTwo = function() return TeleportToPlayer(2) end
TeleportToPlayerThree = function() return TeleportToPlayer(3) end
TeleportToPlayerFour = function() return TeleportToPlayer(4) end

TeleportPlayerTwo = function() return TeleportPlayer(2) end
TeleportPlayerThree = function() return TeleportPlayer(3) end
TeleportPlayerFour = function() return TeleportPlayer(4) end

addHotKey("TeleportSave", VK_NUMPAD0)
addHotKey("TeleportLoad", VK_DECIMAL)
addHotKey("TeleportToHost", VK_ADD)

addHotKey("TeleportPlayerTwo", VK_NUMPAD4)
addHotKey("TeleportPlayerThree", VK_NUMPAD5)
addHotKey("TeleportPlayerFour", VK_NUMPAD6)

addHotKey("TeleportToPlayerTwo", VK_NUMPAD7)
addHotKey("TeleportToPlayerThree", VK_NUMPAD8)
addHotKey("TeleportToPlayerFour", VK_NUMPAD9)

--[[ -------------------------------------------------------------------- ]]--
--[[
- Rarity Drop Rate
]]--

RarityChances_Grouped =
 {
  Weight_0_VeryCommon = "4:45 w:20 4:0 4:1 4:* 4:0 4:0 4:1065353216 4:1065353216", -- ID 2D
  Weight_1_Common     = "4:47 w:20 4:0 4:1 4:* 4:0 4:0 4:1065353216 4:1065353216", -- ID 2F
  Weight_2_Uncommon   = "4:50 w:20 4:0 4:1 4:* 4:0 4:0 4:1065353216 4:1065353216", -- ID 32
  Weight_3_Uncommoner = "4:51 w:20 4:0 4:1 4:* 4:0 4:0 4:1065353216 4:1065353216", -- ID 33
  Weight_4_Rare       = "4:52 w:20 4:0 4:1 4:* 4:0 4:0 4:1065353216 4:1065353216", -- ID 34
  Weight_5_VeryRare   = "4:53 w:20 4:0 4:1 4:* 4:0 4:0 4:1065353216 4:1065353216", -- ID 35
  Weight_6_Legendary  = "4:54 w:20 4:0 4:1 4:* 4:0 4:0 4:1065353216 4:1065353216"  -- ID 36
 }

RarityPresets =
 {
  ["Revert All - Original"]                     = {200, 100,  10,    5,    1,  0.1,  0.01},

  ["Preset 01 (Legendary Only)"]                = {0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 100000},
  ["Preset 02 (Purple Only)"]                   = {0.001, 0.001, 0.001, 0.001, 0.001, 100,   0.001},
  ["Preset 03 (Blue Only)"]                     = {0.001, 0.001, 0.001, 0.001, 100,   0.001, 0.001},
  ["Preset 04 (Eridium Only)"]                  = {0.001, 0.001, 0.001, 100,   0.001, 0.001, 0.001},
  ["Preset 05 (Green Only)"]                    = {0.001, 0.001, 100,   0.001, 0.001, 0.001, 0.001},
  ["Preset 06 (White Only)"]                    = {0.001, 100,   0.001, 0.001, 0.001, 0.001, 0.001},
  ["Preset 07 (Health Only)"]                   = {100,   0.001, 0.001, 0.001, 0.001, 0.001, 0.001},

  ["Preset 08 (Legendaries 5x more likely)"]    = {200, 100,  10,    5,    1,  0.1,   0.05},
  ["Preset 09 (Legendaries 10x more likely)"]   = {200, 100,  10,    5,    1,  0.1,   0.1},
  ["Preset 10 (Legendaries 100x more likely)"]  = {200, 100,  10,    5,    1,  0.1,   1},
  ["Preset 11 (Legendaries 1000x more likely)"] = {200, 100,  10,    5,    1,  0.1,   10}
 }

RaritySymbols =
 {
   'Weight_0_VeryCommon',
   'Weight_1_Common',
   'Weight_2_Uncommon',
   'Weight_3_Uncommoner',
   'Weight_4_Rare',
   'Weight_5_VeryRare',
   'Weight_6_Legendary'
 }

DropsWeaponAndGear_Boss = [[4:1023879938 8:0]]
DropsWeaponAndGear_Grouped = [[
4:1034818683 8:0 4:1065353216 4:* 4:1 4:1
4:1032805417 8:0 4:1065353216 4:* 4:1 4:1
4:1031127695 8:0 4:1065353216 4:* 4:1 4:1
4:1028443341 8:0 4:1065353216 4:* 4:1 4:1]]

DropsWeaponAndGear_Grouped = DropsWeaponAndGear_Grouped:gsub("\n"," ")
DropsWeaponAndGearSymbols = {'DropsWeaponAndGear1','DropsWeaponAndGear2','DropsWeaponAndGear3','DropsWeaponAndGear4','DropsWeaponAndGearBoss'}

Skins_Grouped = [[4:2 w:8 f:0.050 w:176 4:1 w:8 f:0.0020]]
SkinsSymbols  = {'VehicleSkinsOdds','SkinsOdds'}

function GetRarityChancesMemoryRecords()
  local timer = createTimer(nil,true)
  timer_onTimer(timer,GetRarityChancesMemoryRecordsDelayed)
end

function GetRarityChancesMemoryRecordsDelayed(timer)
    object_destroy(timer)
    if CheckEnabled() == false then return end

    DebugLog("@Function: GetRarityChancesMemoryRecordsDelayed()")
    DebugLog("-Rarity Mod Status: Scanning... Please wait")
    processMessages()

    local address = nil
    --RarityChances
    for symbol,groupscancommand in pairs(RarityChances_Grouped) do
      address = ScanForItGrouped(groupscancommand,"4")
      if address~=nil then
        DebugLog("-Registering Symbol: " .. symbol .. " (" .. Dec2Hex(address+32) .. ")")
        registerSymbol(symbol, address+32, true)
      end
    end

    --DropsWeaponAndGear
    address = ScanForItGrouped(DropsWeaponAndGear_Grouped,"4")
    if address ~= nil then
      for i=1,#DropsWeaponAndGearSymbols-1 do
        DebugLog("-Registering Symbol: " .. DropsWeaponAndGearSymbols[i] .. " (" .. Dec2Hex(address+(i-1)*0x1C) .. ")")
        registerSymbol(DropsWeaponAndGearSymbols[i], address+(i-1)*0x1C, true)
      end
    end

    --DropsWeaponAndGearBoss
    address = ScanForItGrouped(DropsWeaponAndGear_Boss,"4")
    if address ~= nil then
      DebugLog("-Registering Symbol: " .. DropsWeaponAndGearSymbols[5] .." (" .. Dec2Hex(address) .. ")")
      registerSymbol(DropsWeaponAndGearSymbols[5], address, true)
    end

    --Skins
    address = ScanForItGrouped(Skins_Grouped,"4")
    if address ~= nil then
      DebugLog("-Registering Symbol: " .. SkinsSymbols[1] .. " (" .. Dec2Hex(address+0x0C) .. ")")
      registerSymbol(SkinsSymbols[1], address+0x0C, true)
      DebugLog("-Registering Symbol: " .. SkinsSymbols[2] .. " (" .. Dec2Hex(address+0xCC) .. ")")
      registerSymbol(SkinsSymbols[2], address+0xCC, true)
    end

  DebugLog("-Rarity Mod Status: Done")
end

function RevertAndDisableRarity()
  if CheckEnabled() == false then return end
  DebugLog("@Function: RevertAndDisableRarity()")
  local defaultValues1 = {200, 100, 10, 5, 1, 0.1, 0.01}  -- RarityChances
  local defaultValues2 = {0.085, 0.07, 0.06, 0.05}        -- DropsWeaponAndGear
  local defaultValues3 = {0.05, 0.002}                    -- Skins
  local defaultValues4 = {1023879938}                     -- Boss

  -- restore RarityChances defaults
  for i=1,#RaritySymbols do
    DebugLog("-Unregistering Symbol: " .. RaritySymbols[i])
    writeFloat(RaritySymbols[i], defaultValues1[i])
    unregisterSymbol(RaritySymbols[i])
  end

  -- restore DropsWeaponAndGear defaults
  for i=1,#DropsWeaponAndGearSymbols-1 do
    DebugLog("-Unregistering Symbol: " .. DropsWeaponAndGearSymbols[i])
    writeFloat(DropsWeaponAndGearSymbols[i], defaultValues2[i])
    unregisterSymbol(DropsWeaponAndGearSymbols[i])
  end

  -- restore DropsWeaponAndGearBoss defaults
  DebugLog("-Unregistering Symbol: " .. DropsWeaponAndGearSymbols[5])
  writeInteger(DropsWeaponAndGearSymbols[5], defaultValues4[1])
  unregisterSymbol(DropsWeaponAndGearSymbols[5])

  -- restore Skins defaults
  DebugLog("-Unregistering Symbol: " .. SkinsSymbols[1])
  DebugLog("-Unregistering Symbol: " .. SkinsSymbols[2])
  writeFloat(SkinsSymbols[1], defaultValues3[1])
  writeFloat(SkinsSymbols[2], defaultValues3[2])
  unregisterSymbol(SkinsSymbols[1])
  unregisterSymbol(SkinsSymbols[2])
  DebugLog("-Rarity Mod Revert and Disable: Done")
end

function presetSetValues(memrec)
  for description,_ in pairs(RarityPresets) do
    if presetMemoryRecords[description] ~= memrec then
      memoryrecord_unfreeze(presetMemoryRecords[description])
    end
  end

  if CheckEnabled() == false then return true end
  local whichmemrec = memoryrecord_getDescription(memrec)
  for i=1,#RaritySymbols do
    writeFloat(RaritySymbols[i], RarityPresets[whichmemrec][i])
  end
  return true
end

presetMemoryRecords ={}
for description,_ in pairs(RarityPresets) do
 if presetMemoryRecords[description] == nil then
  presetMemoryRecords[description] = addresslist_getMemoryRecordByDescription(AddressList,description)
  memoryrecord_onActivate(presetMemoryRecords[description] ,presetSetValues)
 end
end

--[[ -------------------------------------------------------------------- ]]--
--[[
- Blink Teleportation
]]--

aobscanString        = '83 C4 10 8B 07 8B 0C B0 89 0D XX XX XX XX 5F EB 0A'
LastBulletPosString  = '[[[[[[paste_here]+40]+190]+75C]+68]+654]+1BC'
PlayerPositionString =  '[[[[[paste_here]+40]+190]+480]+A4]+60'

baseFound = false
function findBase()
  if baseFound then return end
  DebugLog("@Function: findBase()")

  local result = ScanForItByteArray(aobscanString)
  if result~=nil then
    baseFound = true
    local baseAdress = string.format('%X',readInteger(result+0x0A))
    LastBulletPosString = LastBulletPosString:gsub('paste_here',baseAdress)
    PlayerPositionString = PlayerPositionString:gsub('paste_here',baseAdress)
    DebugLog('-Blink: Base Array of Bytes found')
  else
    DebugLog('!Error: Blink Array of Bytes not found')
  end
end

function Blink()
  if CheckEnabled('bBlinkModLoaded') == false then return end
  findBase()
  DebugLog("@Function: Blink()")

  local LastBulletPosAddr  = getAddress(LastBulletPosString)
  local PlayerPositionAddr = getAddress(PlayerPositionString)
  if LastBulletPosAddr == 0 or PlayerPositionAddr == 0 then
    DebugLog('!Error: LastBulletPosAddr or PlayerPositionAddr is invalid')
    return
  end

  local LastBulletPos = {}
  LastBulletPos[1],LastBulletPos[2],LastBulletPos[3]=
  readFloat(LastBulletPosAddr),readFloat(LastBulletPosAddr+4),
  readFloat(LastBulletPosAddr+8)

  local PlayerPosition = {}
  PlayerPosition[1],PlayerPosition[2],PlayerPosition[3]=
  readFloat(PlayerPositionAddr),readFloat(PlayerPositionAddr+4),
  readFloat(PlayerPositionAddr+8)

  local ax,ay,az=PlayerPosition[1],PlayerPosition[2],PlayerPosition[3]
  local bx,by,bz=LastBulletPos[1],LastBulletPos[2],LastBulletPos[3]

  if ax==nil or ay==nil or az==nil then return end
  if bx==nil or by==nil or bz==nil then return end

  local D = math.sqrt( (bx-ax)^2 + (by-ay)^2 + (bz-az)^2 )
  if D == 0 then D=1 end

  local u = (D-600.0)/D
  if u&lt;0 then u=0.8 end

  local Px,Py,Pz = (bx-ax)*u,(by-ay)*u,(bz-az)*u
  local Destination = {}
  Destination[1],Destination[2],Destination[3] = ax+Px,ay+Py,az+Pz

  local SpeedVector = {}
  SpeedVector[1] = (LastBulletPos[1]-Destination[1]) * 2.2
  SpeedVector[2] = (LastBulletPos[2]-Destination[2]) * 2.2
  SpeedVector[3] = (LastBulletPos[3]-Destination[3]) * 2.2

  --do blink
  writeFloat(PlayerPositionAddr+0,Destination[1])
  writeFloat(PlayerPositionAddr+4,Destination[2])
  writeFloat(PlayerPositionAddr+8,Destination[3]+100)
  writeFloat(PlayerPositionAddr+164+0,SpeedVector[1])
  writeFloat(PlayerPositionAddr+164+4,SpeedVector[2])
  writeFloat(PlayerPositionAddr+164+8,SpeedVector[3])

  DebugLog('-Blinked to X ('..Destination[1]..'), Y ('..Destination[2]..'), Z ('..Destination[3]..')')
  beep()
end

addHotKey("Blink",VK_F6)
addHotKey("Blink",VK_Q)

--[[ -------------------------------------------------------------------- ]]--
--[[
- Loot Control
]]--

PlyInfo = 'PlyPos'
ItemPosInfo = '[[ItemPos]+144]+190'
ScalerEnablePoint = 'ItemDataPoint'

function ItemScaler()
  if CheckEnabled('ItemDataPoint') == false then return end
  local ItemCount = readInteger(getAddress(ItemPosInfo)+4)
  local ItemAddr = readInteger(ItemPosInfo)
  for i=0,ItemCount-1 do
    local BaseItem = readInteger(ItemAddr+i*4)
    local Rarity = readInteger(BaseItem+0x254)
    if Rarity == 5 or (Rarity &gt;= 7 and Rarity &lt;= 11) or Rarity == 501 then
      writeFloat(BaseItem+0x78,3)
    elseif Rarity == 6 or Rarity == 4 then
      writeFloat(BaseItem+0x78,1.5)
    end
  end
end

function ItemRemoveAll()
  if CheckEnabled('ItemControlEnabled') == false then return end
  DebugLog("@Function: ItemRemoveAll()")
  local ItemCount = readInteger(getAddress(ItemPosInfo)+4)
  local ItemAddr = readInteger(ItemPosInfo)
  for i=0,ItemCount-1 do
    local BaseItem = readInteger(ItemAddr+i*4)
    writeFloat(BaseItem+228,0.1)
  end
  DebugLog('-Removed '..ItemCount..' items')
  beep()
end

function ItemRemoveLow()
  if CheckEnabled('ItemControlEnabled') == false then return end
  DebugLog("@Function: ItemRemoveLow()")
  local ItemCount = readInteger(getAddress(ItemPosInfo)+4)
  local ItemAddr = readInteger(ItemPosInfo)
  for i=0,ItemCount-1 do
    local BaseItem = readInteger(ItemAddr+i*4)
    local DelTimer = readFloat(BaseItem+228)
    if DelTimer &gt; 0 then
      writeFloat(BaseItem+228,0.1)
    end
  end
  DebugLog('-Removed '..ItemCount..' items')
  beep()
end

function ItemPuller()
  if CheckEnabled('ItemControlEnabled') == false then return end
  DebugLog("@Function: ItemPuller()")
  local ItemCount = readInteger(getAddress(ItemPosInfo)+4)
  local ItemAddr = readInteger(ItemPosInfo)
  local PlyInf = getAddress(PlyInfo)
  local PlyX = readFloat(PlyInf)
  local PlyY = readFloat(PlyInf+4)
  local PlyZ = readFloat(PlyInf+8)
  local RaritySort = {}
  for i=0,ItemCount-1 do
    local BaseItem = readInteger(ItemAddr+i*4)
    table.insert(RaritySort,{Addr=BaseItem,Rarity=readInteger(BaseItem+0x254)})
  end
  table.sort(RaritySort,function(a,b) return a.Rarity &gt; b.Rarity end)
  --sorts by rarity
  if ItemCount &lt;= 40 then
    for i=0,ItemCount-1 do
      local BaseItem = RaritySort[i+1].Addr
      writeFloat(BaseItem+0x60,PlyX+sin(ItemCount,150,i))
      writeFloat(BaseItem+0x64,PlyY+cos(ItemCount,150,i))
      writeFloat(BaseItem+0x68,PlyZ-70)
      writeBytes(BaseItem+156,2)
    end
  else
    local CCur = 0
    local CIndex = 0
    local CMax = 40
    local CRad = 150
    while CIndex &lt; (ItemCount-2) do
      if (CMax+CIndex) &gt; (ItemCount-1) then CMax = (ItemCount-1) - (CIndex) end
      for i=CIndex,CMax+CIndex do
        local BaseItem = RaritySort[i+1].Addr
        writeFloat(BaseItem+0x60,PlyX+sin(CMax,CRad,i))
        writeFloat(BaseItem+0x64,PlyY+cos(CMax,CRad,i))
        writeFloat(BaseItem+0x68,PlyZ-70)
        writeBytes(BaseItem+156,2)
        CCur = CCur + 1
      end
      CIndex = CCur
      CRad = CRad + 150
      CMax = math.floor(CMax*1.5)
    end
  end
  sleep(10)
  for i=0,ItemCount-1 do
    local BaseItem = readInteger(ItemAddr+i*4)
    writeBytes(BaseItem+156,0)
  end
  DebugLog('-Pulled '..ItemCount..' items to your location')
  beep()
end

function CheckItemScaler()
  if CheckEnabled('ItemControlEnabled') == false then
    StopItemScaleTimer()
    return
  end
  if CheckEnabled('ItemDataPoint') == false then
    timer_setInterval(ItemScaleTimer,5000)
    return
  else
    timer_setInterval(ItemScaleTimer,1000)
  end
  ItemScaler()
end

function ItemHelperEnable()
  StopItemScaleTimer()
  AddItemScaleToggles()
  ItemScaleTimer = createTimer(nil)
  timer_onTimer(ItemScaleTimer, StartItemScaleTimer)
end

function StopItemScaleTimer()
  if ItemScaleTimer~=nil then
    timer_setEnabled(ItemScaleTimer, false)
    object_destroy(ItemScaleTimer);
    ItemScaleTimer = nil;
  end
end

function StartItemScaleTimer()
  StopItemScaleTimer()
  if CheckEnabled('ItemControlEnabled') == false then return end
  ItemScaleTimer = createTimer(nil)
  timer_onTimer(ItemScaleTimer, CheckItemScaler)
  timer_setInterval(ItemScaleTimer,100)
  timer_setEnabled(ItemScaleTimer, true)
end
StartItemScaleTimer()

function ToggleItemScaleOn(memrec)
  if ItemScaleAddr then writeInteger('ItemDataPoint', 1) end
  return true
end

function ToggleItemScaleOff(memrec)
  if ItemScaleAddr then writeInteger('ItemDataPoint', 0) end
  return true
end

function AddItemScaleToggles()
  ItemScaleAddr = addresslist_getMemoryRecordByDescription(AddressList, 'Item Scaler Status')
  if ItemScaleAddr then
    memoryrecord_onActivate(ItemScaleAddr, ToggleItemScaleOn)
    memoryrecord_onDeactivate(ItemScaleAddr, ToggleItemScaleOff)
  end
end

addHotKey("ItemRemoveAll", VK_DELETE)
addHotKey("ItemRemoveLow", 187)
addHotKey("ItemPuller", VK_SNAPSHOT)

--[[ -------------------------------------------------------------------- ]]--
--[[
- Hero Level Downgrade
]]--

function HeroLevelRecalculate()
  DebugLog("@Function: HeroLevelRecalculate()")

  local EXP_Level = addresslist_getMemoryRecordByDescription(AddressList,'EXP Level')
  local desiredHeroLevel = tonumber(memoryrecord_getValue(EXP_Level))
  if CheckEnabled() == false or CheckVariable(desiredHeroLevel) == false then return end

  local EXP_To_Next_Level = addresslist_getMemoryRecordByDescription(AddressList,'EXP To Next Level')
  local Experience__ = addresslist_getMemoryRecordByDescription(AddressList,'Experience')

  local Experience_Points = math.floor( (desiredHeroLevel^2.8+7.33)*60 ) - 500

  memoryrecord_setValue(EXP_Level,desiredHeroLevel-1)
  memoryrecord_setValue(EXP_To_Next_Level,Experience_Points+1)
  memoryrecord_setValue(Experience__,Experience_Points)

  DebugLog("-Set level to "..(desiredHeroLevel-1).." with "..Experience_Points.." EXP")
end

--[[ -------------------------------------------------------------------- ]]--
--[[
- Spawn Swapper
]]--
BaseEntityAoB = '74 14 51 b9 ?? ?? ?? ?? e8'
StringPointAoB = '83 c4 10 8b 0d ?? ?? ?? ?? 8b 0c b9 68 00 10 00 00'

BaseEntityTable = nil
BaseItemPool = nil
BaseItemPoolList = nil
BaseDen = nil
DenResults = nil
DenCount = nil
BasePointDef = nil
PointCount = nil
BaseEnList = nil
EnListCount = nil
BaseEnemy = nil
EnemyCount = nil
STable = nil
DenData = {['count'] = {}, ['spawn']={}}

addHotKey("FindDens",VK_INSERT)
addHotKey("KillReset",VK_HOME)
addHotKey("MaxKills", VK_SCROLL)
addHotKey("MaxUp",VK_PRIOR)
addHotKey("MaxDown",VK_NEXT)
addHotKey("RestoreDens", VK_PAUSE)

function SwapOpen()
  form_show(Swapper)
end

function SwapClose()
  form_hide(Swapper)
end

function SwapClear()
  strings_clear(listbox_getItems(Swapper_EnGroup))
  strings_clear(listbox_getItems(Swapper_EnSwap))
  strings_clear(listbox_getItems(Swapper_EnList))
end
SwapClear()

function GetString(Address, Length)
  local Length = Length or 80
  local Offset = readInteger(Address + 44)
  if Address == nil or Offset == nil or STable == nil then
    if Address == nil then Address = "nil" end
    if Offset == nil then Offset = "nil" end
    DebugLog("!Error: Unknown GetString - Address = '"..Address.."' Value = '"..Offset.."'")
    return 'Unknown'
  end
  return readString(readInteger((Offset * 4) + readInteger(STable))+16, Length)
end

function StringGetter(Address,listbox)
   strings_add(listbox,GetString(Address))
end

function GetBaseTables()
  if BaseEntityTable == nil then
    DebugLog("-Scanning for the base entity table")
    local EntAOB = strings_getString(AOBScan(BaseEntityAoB),0)
    if not EntAOB or EntAOB == 0 then
      DebugLog("!Error: Base entity table not found")
      return false
    end
    BaseEntityTable = getAddress('[[' .. EntAOB .. '+4]]')
    if not BaseEntityTable or BaseEntityTable == 0 then
      DebugLog("!Error: Base entity table address not found")
      return false
    end
  end
  if STable == nil then
    DebugLog("-Scanning for the base string table")
    local StringPoint = strings_getString(AOBScan(StringPointAoB),0)
    if not StringPoint or StringPoint == 0 then
      DebugLog("!Error: Base string table not found")
      return false
    end
    STable = getAddress('[' .. StringPoint .. '+5]+0')
    if not STable or STable == 0 then
      DebugLog("!Error: Base string table address not found")
      return false
    end
  end
  return true
end

function PopulateDenData()
  if CheckEnabled('bSpawnModLoaded') == false or CheckVariable(DenCount) == false then return end
  DebugLog("@Function: PopulateDenData()")

  local iNewCount = 0; local iTotalCount = 0
  for i=1,DenCount do
   local offset  = foundlist_getAddress(DenResults,i)
   local address = getAddress(offset .. "+244")
   local count   = readInteger(address)

   iTotalCount = iTotalCount + 1
   if DenData['count'][offset] == nil then
     iNewCount = iNewCount + 1
     DenData['count'][offset] = count
    end
  end
  if iNewCount &gt; 0 then
    DebugLog("-Den data populated with " .. iNewCount .. " out of " .. iTotalCount .. " added with total of " .. getn(DenData['count']) .. " entries")
  end
end

function RestoreDens()
  if CheckEnabled('bSpawnModLoaded') == false or (CheckVariable(DenCount) == false and CheckVariable(EnListCount) == false) then return end
  DebugLog("@Function: RestoreDens()")

  if DenCount ~= nil and DenCount &gt; 0 and getn(DenData['count']) &gt; 0 then
    for i=1,DenCount do
      local offset = foundlist_getAddress(DenResults,i)
      local aKillCount = getAddress(offset .. "+268")
      local aSpawnCount = getAddress(offset .. "+244")
      if DenData['count'][offset] ~= nil then
        writeInteger(aSpawnCount, DenData['count'][offset])
      end
      writeInteger(aKillCount, 0)
    end
    DenData['count'] = {}
  end
  if EnListCount ~= nil and EnListCount &gt; 0 and getn(DenData['spawn']) &gt; 0 then
    for Address,Spawn in pairs(DenData['spawn']) do
       writeInteger(Address,Spawn)
    end
    DenData['spawn'] = {}
  end
  DebugLog("-Den original states restored")
  beep()
end

function FindDens()
  if CheckEnabled('bSpawnModLoaded') == false then return end

  DebugLog("@Function: FindDens()")
  if GetBaseTables() == false then return end
  if BaseDen == nil then
    DebugLog("-Scanning for the base den tables")
    for i=0,9000 do
      if GetString(readInteger(BaseEntityTable+(i*4)),90) == "Default__PopulationOpportunityDen" then
        BaseDen = readInteger(readInteger(BaseEntityTable+(i*4)))
        DebugLog("-PopulationOpportunityDen Found")
        break
      end
    end
  end

  DebugLog("-Scanning the base den table for dens")
  DenResults = ScanForItDword(BaseDen)
  DenCount = foundlist_getCount(DenResults) - 1
   if DenCount &lt; 1 then
     DebugLog("!Error: Couldn't find any dens")
     DenCount = 0
   elseif DenCount &gt; 5000 then
     DebugLog("!Error: Too many dens found (" .. DenCount .. ")")
     DenCount = 0
   else
     DebugLog("-Found " .. DenCount .. " dens")
     beep()
   end
end

function KillReset()
  if CheckEnabled('bSpawnModLoaded') == false then return end
  if DenCount == nil then FindDens() end
  if CheckVariable(DenCount) == false then return end

  DebugLog("@Function: KillReset()")
  for i=1,DenCount do
   local offset = foundlist_getAddress(DenResults,i)
   local address = getAddress(offset .. "+268")
   writeInteger(address, 0)
  end
  DebugLog("-Den kill counter reset")
  beep()
end

function MaxKills()
  if CheckEnabled('bSpawnModLoaded') == false then return end
  if DenCount == nil then FindDens() end
  if CheckVariable(DenCount) == false then return end

  DebugLog("@Function: Max Kills()")
  for i=1,DenCount do
   local offset = foundlist_getAddress(DenResults,i)
   local address = getAddress(offset .. "+268")
   writeInteger(address, 255)
  end
  DebugLog("-Dens are now at maxed kills")
  beep()
end

function MaxUp()
  if CheckEnabled('bSpawnModLoaded') == false then return end
  if DenCount == nil then FindDens() end
  if CheckVariable(DenCount) == false then return end

  PopulateDenData()
  DebugLog("@Function: MaxUp()")
  for i=1,DenCount do
   local offset = foundlist_getAddress(DenResults,i)
   local address = getAddress(offset .. "+244")
   local CurVal = readInteger(address)
   writeInteger(address,CurVal + 1)
  end
  DebugLog("-Den spawn max increased")
  beep()
end

function MaxDown()
  if CheckEnabled('bSpawnModLoaded') == false then return end
  if DenCount == nil then FindDens() end
  if CheckVariable(DenCount) == false then return end

  PopulateDenData()
  DebugLog("@Function: DenMaxDown()")
  for i=1,DenCount do
   local offset = foundlist_getAddress(DenResults,i)
   local address = getAddress(offset .. "+244")
   local CurVal = readInteger(address)
   if CurVal &gt; 1 then
     writeInteger(address,CurVal - 1)
   end
  end
  DebugLog("-Den spawn max decreased")
  beep()
end

function EnGenerateClick(sender)
  if CheckEnabled('bSpawnModLoaded') == false then return end

  DebugLog("@Function: EnGenerateClick()")
  if GetBaseTables() == false then return end
  SwapClear()

  local Finder = 0
  local BaseEntityAddress = 0
  if BaseEnList == nil or BaseEnemy == nil or BasePointDef == nil then
    DebugLog("-Scanning for the base population tables")
    for i=0,9000 do
      BaseEntityAddress = readInteger(BaseEntityTable+(i*4))
      if GetString(BaseEntityAddress, 90) == "Default__WillowPopulationDefinition" then
        DebugLog("-WillowPopulationDefinition Found")
        Finder = Finder + 1
        BaseEnList = readInteger(BaseEntityAddress)
      elseif GetString(BaseEntityAddress, 90) == "Default__PopulationFactoryBalancedAIPawn" then
        DebugLog("-PopulationFactoryBalancedAIPawn Found")
        Finder = Finder + 1
        BaseEnemy = readInteger(BaseEntityAddress)
      elseif GetString(BaseEntityAddress, 90) == "Default__WillowPopulationPoint" then
        DebugLog("-WillowPopulationPoint Found")
        Finder = Finder + 1
        BasePointDef = readInteger(BaseEntityAddress)
      elseif GetString(BaseEntityAddress, 90) == "Default__PopulationOpportunityDen" then
        DebugLog("-PopulationOpportunityDen Found")
        BaseDen = readInteger(BaseEntityAddress)
      elseif GetString(BaseEntityAddress, 90) == "Default__ItemPoolDefinition" then
        DebugLog("-ItemPoolDefinition Found")
        BaseItemPool = readInteger(BaseEntityAddress)
      elseif GetString(BaseEntityAddress, 90) == "Default__ItemPoolListDefinition" then
        DebugLog("-ItemPoolListDefinition Found")
        BaseItemPoolList = readInteger(BaseEntityAddress)
      end
      if Finder &gt;= 3 then break end
    end

    if Finder ~= 3 then
      DebugLog("!Error: Only " .. Finder .. " out of 3 Population Tables found")
      return
    end
  end

  DebugLog("-Scanning the base Population Point table")
  PointResults = ScanForItDword(BasePointDef)
  PointCount = foundlist_getCount(PointResults) - 1
  for i=1,PointCount do
    local PointOffset = foundlist_getAddress(PointResults,i)
    local PointAddress = getAddress(PointOffset)+0x1E0
    writeInteger(PointAddress,0)
  end

  DebugLog("-Scanning the base Population Definition table")
  EnListResults = ScanForItDword(BaseEnList)
  EnListCount = foundlist_getCount(EnListResults) - 1
  local EnListItems = listbox_getItems(Swapper_EnGroup)
  strings_clear(EnListItems)
  for i=1,EnListCount do
    local EnListOffset = foundlist_getAddress(EnListResults,i)
    local EnListAddress = getAddress(EnListOffset)
    StringGetter(EnListAddress,EnListItems)
  end

  DebugLog("-Scanning the base Pawn Population table")
  EnemyResults = ScanForItDword(BaseEnemy)
  EnemyCount = foundlist_getCount(EnemyResults) - 1
  local EnemyItems = listbox_getItems(Swapper_EnSwap)
  strings_clear(EnemyItems)
  for i=1,EnemyCount do
    local EnemyOffset = foundlist_getAddress(EnemyResults,i)
    local EnemyAddress = readInteger(getAddress(EnemyOffset .. "+AC"))
    StringGetter(EnemyAddress,EnemyItems)
  end
  DebugLog("-Scanning finished")
end

function EnGroupDblClick(sender)
  if CheckEnabled('bSpawnModLoaded') == false then return end

  local EnListTable = listbox_getItems(Swapper_EnList)
  strings_clear(EnListTable)
  EnGroupIndex = listbox_getItemIndex(sender)
  local EnAddr = foundlist_getAddress(EnListResults,EnGroupIndex + 1)
  local EnCounter = readInteger(getAddress(EnAddr .. '+44'))
  for i=0,EnCounter-1 do
    local EnCheck = GetString(readInteger(readInteger(getAddress(EnAddr .. '+40'))+(40*i)))
    if EnCheck == "PopulationFactoryWillowVehicle" then
      strings_add(EnListTable,"Vehicle")
    else
      local EnSlot = readInteger(readInteger(readInteger(getAddress(EnAddr .. '+40'))+(40*i))+172)
      StringGetter(EnSlot,EnListTable)
    end
  end
end

function EnSwapDblClick(sender)
  if CheckEnabled('bSpawnModLoaded') == false then return end

  local current = listbox_getItemIndex(sender)
  local Enlist = listbox_getItemIndex(Swapper_EnList)
  if current &lt; 0 or Enlist &lt; 0 then return end
  DebugLog("@Function: EnSwapDblClick()")

  local EnListTable = listbox_getItems(Swapper_EnList)
  local EnSwapTable = listbox_getItems(sender)
  local EnSwapAddr = getAddress(foundlist_getAddress(EnemyResults,current + 1))
  local EnAddr = foundlist_getAddress(EnListResults,EnGroupIndex + 1)
  local EnReciever = readInteger(getAddress(EnAddr .. '+40'))+(40*Enlist)

  local OldEnListString = GetString(readInteger(readInteger(readInteger(getAddress(EnAddr .. '+40'))+(40*Enlist))+172))
  if DenData['spawn'][EnReciever] == nil then
    DenData['spawn'][EnReciever] = readInteger(EnReciever)
    DebugLog("-DenData: "..OldEnListString.." ("..Dec2Hex(EnReciever)..") cached ("..Dec2Hex(readInteger(EnReciever))..")")
  end

  writeInteger(EnReciever,EnSwapAddr)
  local NewEnListString = GetString(readInteger(readInteger(readInteger(getAddress(EnAddr .. '+40'))+(40*Enlist))+172))
  strings_setString(EnListTable, Enlist, NewEnListString)

  DebugLog("-"..OldEnListString.." ("..Dec2Hex(EnReciever)..") swapped with "..NewEnListString.." ("..Dec2Hex(EnSwapAddr)..")")
end

--[[ -------------------------------------------------------------------- ]]--
--[[
- Loot Splosion
]]--
SploResults = nil
SploCount = nil

function LootSplosion()
  if CheckEnabled() == false then return end

  DebugLog("@Function: LootSplosion()")
  if GetBaseTables() == false then return end
  if BaseItemPool == nil then
    DebugLog("-Scanning for the base item pool")
    for i=0,9000 do
      if GetString(readInteger(BaseEntityTable+(i*4)),90) == "Default__ItemPoolDefinition" then
        BaseItemPool = readInteger(readInteger(BaseEntityTable+(i*4)))
        DebugLog("-Base item pool found")
        break
      end
    end
  end
  if BaseItemPool == nil then
    DebugLog("!Error: Base item pool not found")
    return
  end
  if SploResults == nil or SploCount == nil then
    DebugLog("-Scanning base item pools")
    SploResults = ScanForItDword(BaseItemPool)
    SploCount = foundlist_getCount(SploResults) - 1
    DebugLog("-Scan Results: Found " .. SploCount .. " items")
  end
  local iCount = 0
  for i=1,SploCount do
    local offset = foundlist_getAddress(SploResults,i)
    local address = getAddress(offset)
    if readFloat(address+92) == 1 then
      iCount = iCount + 1
      writeFloat(address+92,2.4)
    end
  end
  DebugLog("-Finished increasing "..iCount.." base item pools")
  beep()
end

function SploDisable()
  if CheckEnabled() == false then return end

  DebugLog("@Function: SploDisable()")
  if GetBaseTables() == false then return end
  if BaseItemPool == nil then
    DebugLog("-Scanning for the base item pool")
    for i=0,9000 do
      if GetString(readInteger(BaseEntityTable+(i*4)),90) == "Default__ItemPoolDefinition" then
        BaseItemPool = readInteger(readInteger(BaseEntityTable+(i*4)))
        DebugLog("-Base item pool found")
        break
      end
    end
  end
  if BaseItemPool == nil then
    DebugLog("!Error: Base item pool not found")
    return
  end
  if SploResults == nil or SploCount == nil then
    DebugLog("-Scanning base item pools")
    SploResults = ScanForItDword(BaseItemPool)
    SploCount = foundlist_getCount(SploResults) - 1
    DebugLog("-Scan Results: Found " .. SploCount .. " items")
  end
  local iCount = 0
  for i=1,SploCount do
    local offset = foundlist_getAddress(SploResults,i)
    local address = getAddress(offset)
    if round(readFloat(address+92),1) == 2.4 then
      iCount = iCount + 1
      writeFloat(address+92,1)
    end
  end
  DebugLog("-Finished returning "..iCount.." base item pools to original values")
end

--[[ -------------------------------------------------------------------- ]]--
--[[
- Toggle God
]]--

function ToggleGodMode(ToggleState)
  if CheckEnabled() == false then return end

  DebugLog("@Function: ToggleGodMode()")
  local GodModeAddr = addresslist_getMemoryRecordByDescription(AddressList,'God Mode (LUA)')
  local HealthGodAddr = addresslist_getMemoryRecordByDescription(AddressList,'Health Switch')
  local ShieldGodAddr = addresslist_getMemoryRecordByDescription(AddressList,'Shield Switch')
  local OzGodAddr = addresslist_getMemoryRecordByDescription(AddressList,'Oz Switch')
  local HealthGodState = tonumber(memoryrecord_getValue(HealthGodAddr))
  local ShieldGodState = tonumber(memoryrecord_getValue(ShieldGodAddr))
  local OzGodState = tonumber(memoryrecord_getValue(OzGodAddr))
  if CheckVariable(HealthGodState) == false or (HealthGodState ~= 1 and HealthGodState ~= 5 and HealthGodState ~= 6) then
    DebugLog("!Error: Health and shield god switch offsets are incorrect")
    return
  end

  if ToggleState == nil then
    ToggleState = 6
    if HealthGodState == 6 then ToggleState = 5 end
  end

  if ToggleState == 5 then DebugLog("-God mode disabled") end
  if ToggleState == 6 then DebugLog("-God mode enabled") end

  memoryrecord_setValue(HealthGodAddr,ToggleState)
  if ToggleState == 5 then memoryrecord_unfreeze(HealthGodAddr) end
  if ToggleState == 6 then memoryrecord_freeze(HealthGodAddr) end
  if ShieldGodStat ~= 0 and ShieldGodState ~= 33 then
    memoryrecord_setValue(ShieldGodAddr,ToggleState)
    if ToggleState == 5 then memoryrecord_unfreeze(ShieldGodAddr) end
    if ToggleState == 6 then memoryrecord_freeze(ShieldGodAddr) end
  end
  if OzGodState ~= 0 and OzGodState ~= 33 then
    memoryrecord_setValue(OzGodAddr,ToggleState)
    if ToggleState == 5 then memoryrecord_unfreeze(OzGodAddr) end
    if ToggleState == 6 then memoryrecord_freeze(OzGodAddr) end
  end
end

--[[ -------------------------------------------------------------------- ]]--
--[[
- Toggle Unlimited Ammo
]]--

function ToggleUnlimitedAmmo(ToggleState)
  if CheckEnabled() == false then return end
  DebugLog("@Function: ToggleGodMode()")

  local AmmoVars = {
    'Assault Rifle Ammo Switch',
    'Shotgun Ammo Switch',
    'Grenade Ammo Switch',
    'SMG Ammo Switch',
    'Pistol Ammo Switch',
    'Rocket Ammo Switch',
    'Sniper Rifle Ammo Switch',
    'Laser Ammo Switch'
  }

  for i=1,#AmmoVars do
    local AmmoAddr = addresslist_getMemoryRecordByDescription(AddressList, AmmoVars[i])
    local AmmoState = tonumber(memoryrecord_getValue(AmmoAddr))
    if CheckVariable(AmmoState) == false or (AmmoState ~= 1 and AmmoState ~= 5 and AmmoState ~= 6) then
      DebugLog("!Error: "..AmmoVars[i].." switch offsets are incorrect")
      return
    end
    if ToggleState == nil then
      if AmmoState == 6 then ToggleState = 5 else ToggleState = 6 end
    end
    memoryrecord_setValue(AmmoAddr,ToggleState)
    if ToggleState == 5 then memoryrecord_unfreeze(AmmoAddr) end
    if ToggleState == 6 then memoryrecord_freeze(AmmoAddr) end
  end
  if ToggleState == 5 then DebugLog("-Unlimited ammo disabled") end
  if ToggleState == 6 then DebugLog("-Unlimited ammo enabled") end
end

--[[ -------------------------------------------------------------------- ]]--
--[[
- Golden Key Base
]]--

aobKeyString = '8B 0D xx xx xx xx 8b 3c b1 8b 17 8B 42 08 8B CF FF D0 85 C0 74 14'
function findKeyBase()
  if CheckEnabled() == false then return end
  DebugLog("@Function: findKeyBase()")

  local result = ScanForItByteArray(aobKeyString)
  if result~=nil then
    local baseAdress = readInteger(result+2)
    unregisterSymbol('KeysPointerBase')
    registerSymbol('KeysPointerBase', baseAdress, true)
    DebugLog("-Golden key base found")
    return
  end
  DebugLog("!Error: Golden key base not found")
end

--[[ -------------------------------------------------------------------- ]]--
--[[
- Loot Splosion Advance
]]--

StringPointer = nil
EntPointer = nil
CodeColor1 = Hex2Dec("000080")  --Pool Group
CodeColor2 = Hex2Dec("008000") --Probability and Quantity
CodeColor3 = Hex2Dec("800000") --Individual Item Group

function LootSplosionUpdate(isDebugUpdate)
  if CheckEnabled() == false then return end
  DebugLog("@Function: LootSplosionUpdate()")

  if isDebugUpdate ~= true then
    DebugMessage("To save on download size, the table will now be built. CE might lag while this is being done. You can save the table on closing to prevent the long build the next time you play. Delete all entries and reenable if you want a fresh build.")
  end
  if StringPointer == nil or EntPointer == nil then
    DebugLog("-Retrieveing string and entity pointer")
    StringAOB = strings_getString(AOBScan('A1 * * * * 8B 0C B0 68 00 10 00 00 6a'),0)
    EntAOB = strings_getString(AOBScan('8b 0d * * * * 89 1c b9'),0)
    StringPointer = "[[" .. StringAOB .. "+1]]"
    EntPointer = "[[" .. EntAOB .. "+2]]"
  end
  local ObjectBase = getAddress(EntPointer)
  local ObjPoolList = nil
  DebugLog("-Searching for ItemPoolListDefinition")
  for i=0,9000 do
    local CurObj = readInteger(ObjectBase+i*4)
    local ObjIndex = readInteger(CurObj+0x2c)
    local ObjString = GetStringByIndex(ObjIndex)
    if ObjString == "Default__ItemPoolListDefinition" then ObjPoolList = CurObj break end
  end
  if not ObjPoolList then DebugLog("!Error: ItemPoolListDefinition not found"); return end
  DebugLog("-Found ItemPoolListDefinition")
  local TPoolList = BaseAddressScan(readInteger(ObjPoolList))
  local SploderTable = AddressList.getMemoryRecordByDescription("Loot Sploder Advanced")
  for i = SploderTable.Count-1,0,-1 do
    SploderTable.Child[i].destroy()
  end
  if isDebugUpdate ~= true then
    DebugLog("-Updating Loot Splosion item pool information")
    local DelList = {"StandardEnemyGunsAndGear","BadassEnemyGunsAndGear","RaidBossEnemyGunsAndGear"}
    local ShouldDelete = false
    for i=#TPoolList,2,-1 do
      ShouldDelete = true
      local PoolName = GetStringByIndex(readInteger(TPoolList[i].."+2C"))
      for a=1,#DelList do
        if DelList[a] == PoolName then ShouldDelete = false end
      end
      if ShouldDelete == true then
        table.remove(TPoolList,i)
      end
    end
  end
  DebugLog("-Adding Loot Splosion Advance item pool records")
  for i=2,#TPoolList do
    local PoolCount = readInteger(TPoolList[i].."+4C")
    local PoolAddr = readInteger(TPoolList[i].."+48")
    local PoolName = GetStringByIndex(readInteger(TPoolList[i].."+2C"))
    local NewHeader = AddressList.createMemoryRecord()

    if getAddress(PoolName) &gt; 0 then unregisterSymbol(PoolName) end --Set Symbol for base address in pointer
    registerSymbol(PoolName,TPoolList[i],false)

    memoryrecord_appendToEntry(NewHeader,SploderTable)
    NewHeader.IsGroupHeader = true
    NewHeader.Options = "moHideChildren"
    NewHeader.Description = PoolName
    for a=0,PoolCount-1 do
      local CProb = {0x10+a*0x14}
      local CPool = {a*0x14}
      local PoolProb = Dec2Hex(PoolAddr+0x10+a*0x14)
      local LootPool = readInteger(PoolAddr+a*0x14)
      local LPool = RecuPool(NewHeader,LootPool,CProb,PoolName.."+48",CPool)
    end
  end
  DebugLog("-Loot Splosion Advance update complete")
end

function RecuPool(ParentCheat,PoolAddress,Probability,BaseSymbol,PoolPointer)
  local PoolName = GetStringByIndex(readInteger(PoolAddress+0x2c))
  local SubCount = readInteger(PoolAddress+0x54)
  local SubAddr = readInteger(PoolAddress+0x50)
  local QuanAddr = Dec2Hex(PoolAddress+0x5c)
  local BaseCheat = AddressList.createMemoryRecord()
  BaseCheat.Description = PoolName
  BaseCheat.IsGroupHeader = true
  BaseCheat.Options = "moHideChildren"
  BaseCheat.Color = CodeColor1
  memoryrecord_appendToEntry(BaseCheat,ParentCheat)

  local ProbCheat = AddressList.createMemoryRecord()
  ProbCheat.Description = "Base Probability"
  ProbCheat.setAddress(BaseSymbol,Probability)
  ProbCheat.Type = vtSingle
  ProbCheat.Color = CodeColor2
  memoryrecord_appendToEntry(ProbCheat,BaseCheat)

  local QuantCheat = AddressList.createMemoryRecord()
  local CQuant = CopyNumberTable(PoolPointer)
  table.insert(CQuant,1,0x5c)
  QuantCheat.Description = "Quantity"
  QuantCheat.setAddress(BaseSymbol,CQuant)
  QuantCheat.Type = vtSingle
  QuantCheat.Color = CodeColor2
  memoryrecord_appendToEntry(QuantCheat,BaseCheat)

  for i=0,SubCount-1 do
    local ItemDef = readInteger(SubAddr+i*0x1c)
    local BalanceDef = readInteger(SubAddr+4+i*0x1c)
    --local DefProb = Dec2Hex(SubAddr+0x14+i*0x1c)
    local DefProb = CopyNumberTable(PoolPointer)
      table.insert(DefProb,1,0x50)
      table.insert(DefProb,1,0x14+i*0x1c)
    local CPPoint = CopyNumberTable(PoolPointer)
      table.insert(CPPoint,1,0x50)
      table.insert(CPPoint,1,i*0x1c)
    if ItemDef ~= 0 then
      RecuPool(BaseCheat,ItemDef,DefProb,BaseSymbol,CPPoint)
    elseif BalanceDef ~= 0 then
      local BalCheat = AddressList.createMemoryRecord()
      BalCheat.IsGroupHeader = true
      BalCheat.Options = "moHideChildren"
      BalCheat.Description = GetStringByIndex(readInteger(BalanceDef+0x2c))
      BalCheat.Color = CodeColor3
      memoryrecord_appendToEntry(BalCheat,BaseCheat)
      local ProbCheat = AddressList.createMemoryRecord()
      ProbCheat.Type = vtSingle
      ProbCheat.setAddress(BaseSymbol,DefProb)
      ProbCheat.Description = "Base Probability"
      ProbCheat.Color = CodeColor2
      memoryrecord_appendToEntry(ProbCheat,BalCheat)
    end
  end

  return BaseCheat
end

function CopyNumberTable(InputTable)
  local TempTab = {}
  for k,v in pairs(InputTable)do
    TempTab[k] = v
  end
  return TempTab
end

function LootSplosionAdvance()
  if CheckEnabled() == false then return end
  DebugLog("@Function: LootSplosionAdvance()")

  if StringPointer == nil or EntPointer == nil then
    DebugLog("-Retrieveing string and entity pointer")
    StringAOB = strings_getString(AOBScan('A1 * * * * 8B 0C B0 68 00 10 00 00 6a'),0)
    EntAOB = strings_getString(AOBScan('8b 0d * * * * 89 1c b9'),0)
    StringPointer = "[[" .. StringAOB .. "+1]]"
    EntPointer = "[[" .. EntAOB .. "+2]]"
  end
  local ObjectBase = getAddress(EntPointer)
  local ObjPoolList = nil
  DebugLog("-Searching for ItemPoolListDefinition")
  for i=0,9000 do
    local CurObj = readInteger(ObjectBase+i*4)
    local ObjIndex = readInteger(CurObj+0x2c)
    local ObjString = GetStringByIndex(ObjIndex)
    if ObjString == "Default__ItemPoolListDefinition" then ObjPoolList = CurObj break end
  end
  if not ObjPoolList then DebugLog("!Error: ItemPoolListDefinition not found"); return end
  DebugLog("-Found ItemPoolListDefinition")
  local TPoolList = BaseAddressScan(readInteger(ObjPoolList))
  local SploderTable = AddressList.getMemoryRecordByDescription("Loot Sploder Advanced")
  if SploderTable.Count == 0 then
    DebugLog("-Updating Loot Splosion Advance item pool addresses")
    LootSplosionUpdate()
  else
    DebugLog("-Updating Loot Splosion memory records")
    for i=2,#TPoolList do
      local PoolName = GetStringByIndex(readInteger(TPoolList[i].."+2C"))
      if getAddress(PoolName) &gt; 0 then unregisterSymbol(PoolName) end --Set Symbol for base address in pointer
      registerSymbol(PoolName,TPoolList[i],false)
    end
  end
  DebugLog("-Loot Splosion Advance is now finished")
end

--[[ -------------------------------------------------------------------- ]]--
--[[
- Auto Moon Shard Pickup
]]--

ItemDefResults = nil

function AutoMoonEnableDelay()
  AutoMoonTimer = createTimer(nil,true)
  timer_onTimer(AutoMoonTimer,AutoMoonEnable)
end

function AutoMoonEnable()
  if AutoMoonTimer ~= nil then
    timer_setEnabled(AutoMoonTimer, false); object_destroy(AutoMoonTimer); AutoMoonTimer = nil
  end
  if CheckEnabled('pBase', true) == false then return end
  DebugLog("@Function: AutoMoonEnable()")

  if ItemDefResults == nil then
    ItemDefResults = BaseObjectSearch({"Default__UsableItemDefinition"})
  end
  local MoonAddr = getAddress(ItemDefResults["Default__UsableItemDefinition"]["GD_Currency.A_Item.Moonstone"])+0x40
  local MoonLargeAddr = getAddress(ItemDefResults["Default__UsableItemDefinition"]["GD_Currency.A_Item.MoonstoneCluster"])+0x40
  local MoonXor = bXor(readInteger(MoonAddr),1)
  local LargeXor = bXor(readInteger(MoonLargeAddr),1)
  writeInteger(MoonAddr,MoonXor)
  writeInteger(MoonLargeAddr,LargeXor)
end

function AutoMoonDisable()
  if CheckEnabled('pBase', true) == false then return end
  DebugLog("@Function: AutoMoonDisable()")

  if ItemDefResults == nil then
    ItemDefResults = BaseObjectSearch({"Default__UsableItemDefinition"})
  end
  local MoonAddr = getAddress(ItemDefResults["Default__UsableItemDefinition"]["GD_Currency.A_Item.Moonstone"])+0x40
  local MoonLargeAddr = getAddress(ItemDefResults["Default__UsableItemDefinition"]["GD_Currency.A_Item.MoonstoneCluster"])+0x40
  local MoonXor = bXor(readInteger(MoonAddr),1)
  local LargeXor = bXor(readInteger(MoonLargeAddr),1)
  writeInteger(MoonAddr,MoonXor)
  writeInteger(MoonLargeAddr,LargeXor)
end

--[[ -------------------------------------------------------------------- ]]--
--[[
- Loot List Window
]]--

BaseLootPool = '"BorderlandsPreSequel.exe"+19ECB88'
StringTableStart = '[BorderlandsPreSequel.exe+1BE1624]'
SearchIndex = 0
SearchTable = {}

function GetStringName(Index)
  return readString(readInteger(getAddress(StringTableStart)+Index*4)+0x10,70)
end

function GetPartName(Address,isHex,isItem)
  if isHex == true then Address = Hex2Dec(Address) end
  local NameTable = {}
  local SubCount = 0
  local TempAddr = Address
  while readInteger(TempAddr+0x28) &gt;0 do
    SubCount = SubCount + 1
    TempAddr = readInteger(TempAddr+0x28)
  end
  for i=0,SubCount do
    local StringIndex = readInteger(Address+0x2c)
    local PartString = GetStringName(StringIndex)
    if i == 0 and isItem and readInteger(Address+0x30) ~= 0 then
      PartString = PartString .. "_" .. readInteger(Address+0x30)
    end
    table.insert(NameTable,1,PartString)
    Address = readInteger(Address+0x28)
  end
  return table.concat(NameTable,".")
end

function BUpdateClick(sender)
  SearchTable = {}
  local PoolList = BaseAddressScan(getAddress(BaseLootPool))
  table.sort(PoolList,function(a,b) return GetPartName(a,true) &lt; GetPartName(b,true) end)
  local PoolNodes = LootWindow_TVPools.getItems()
  PoolNodes.clear()
  for k,v in pairs(PoolList) do
    local MainNode = PoolNodes.add(GetPartName(v,true))
    SearchTable[k] = {}
    SearchTable[k].Child = {}
    SearchTable[k].Node = MainNode
    SearchTable[k].Name = GetPartName(v,true):lower()
    --local MainNode = PoolNodes.add(v)
    local PoolCount = readInteger(v .. "+54")
    MainNode.add("Spawn Amount: " .. readFloat(v .. "+5c"))
    if PoolCount &gt;0 then
      for i=0,PoolCount-1 do
        local PoolInt = readInteger("[" .. v .. "+50]+" .. Dec2Hex(i*0x1c))
        local ItemInt = readInteger("[" .. v .. "+50]+" .. Dec2Hex(i*0x1c +4))
        local ScalerInt = readInteger("[" .. v .. "+50]+" .. Dec2Hex(i*0x1c +0x10))
        local Scaler = nil
        local ScaleF = readFloat("[" .. v .. "+50]+" .. Dec2Hex(i*0x1c +0x8))
        local OddsMul = readFloat("[" .. v .. "+50]+" .. Dec2Hex(i*0x1c +0x14))
        if ScalerInt &gt;0 then Scaler = GetStringName(readInteger(ScalerInt + 0x2c)) .. " : " .. "ScaleF" end
        local SubNode = nil
        if PoolInt &gt;0 then
          SearchTable[k].Child[i]={}
          local PoolName = GetStringName(readInteger(Dec2Hex(PoolInt) .. "+2c"))
          SubNode = MainNode.add(PoolName)
          SearchTable[k].Child[i].Node = SubNode
          SearchTable[k].Child[i].Name = PoolName:lower()
          if Scaler ~= nil then SubNode.add(Scaler) end
        elseif ItemInt &gt;0 then
          SearchTable[k].Child[i]={}
          local ItemName = GetStringName(readInteger(Dec2Hex(ItemInt) .. "+2c"))
          SubNode = MainNode.add(ItemName)
          SearchTable[k].Child[i].Node = SubNode
          SearchTable[k].Child[i].Name = ItemName:lower()
          if Scaler ~= nil then SubNode.add(Scaler) end
        end
        SubNode.add("Odds Multiplier : " .. OddsMul)
      end
    end
  end
end

function BPNextClick(sender)
  if #SearchTable == 0 then showMessage("Please update the list first.") return end
  local SearchIt = LootWindow_EPSearch.text:lower()
  local isChecked = LootWindow_CBPDeep.Checked
  for k,v in pairs(SearchTable) do
    local DoBreak = false
    if k &gt; SearchIndex then
      if isChecked == true then
        for i=0, #v.Child do
        --showMessage(v.Child[i].Name)
          if v.Child[i] ~= nil and string.find(v.Child[i].Name,SearchIt) ~= nil then
            SearchIndex = k+1
            v.Node.expand(false)
            LootWindow_TVPools.setSelected(v.Child[i].Node)
            DoBreak = true
            break
          end
        end
        if DoBreak == true then break end
      else
        if string.find(v.Name,SearchIt) ~= nil then
          SearchIndex = k+1
          LootWindow_TVPools.setSelected(v.Node)
          break
        end
      end
    end
  end
end

function EPSearchChange(sender)
  SearchIndex = 0
end

function ShowLootForm()
  LootWindow.show()
end

function HideLootForm()
  LootWindow.close()
end

--[[ -------------------------------------------------------------------- ]]--
--[[
- Debug Stuff
]]--

AddrList = {}
StringBase = '[[[pbase]]]'
ObjectBase = '[[[pbase+4]]]'
ChildList = {}

BaseFinderTable = {
{Find = "Default__VSSUIDefinition",CheatName = "VSSUI Vehicle Base"},
{Find = "Default__PopulationOpportunityDen",CheatName = "Population Den Base"},
{Find = "Default__CustomizationDefinition",CheatName = "Player Head/Skin Base"},
{Find = "Default__DownloadablePackageDefinition",CheatName = "Package Def Base"},
{Find = "Default__DownloadableItemSetDefinition",CheatName = "Dlc Item Set Base"},
{Find = "Default__FastTravelStationDefinition",CheatName = "Fast Travel Base"},
{Find = "Default__ItemPoolDefinition",CheatName = "Loot Pool Base"},
{Find = "Default__AIPawnBalanceDefinition",CheatName = "Pawn Balance Base"},
{Find = "Default__ItemPoolListDefinition",CheatName = "Pool List Defination"},
{Find = "Default__BodyClassDefinition",CheatName = "Body Class Definition"},
{Find = "Default__BodyClassDeathDefinition",CheatName = "Body Class Death Definition"},
{Find = "Default__WillowPlayerStats",CheatName = "Willow Player Stats"},
{Find = "Default__UsableItemDefinition",CheatName = "Usable Item Definition"},
{Find = "Default__WillowPlayerController",CheatName = "Player Controller"},
{Find = "Default__KeyedItemPoolDefinition",CheatName = "KeyedItemPoolDefinition"},
{Find = "Default__WillowPopulationPoint",CheatName = "WillowPopulationPoint"},
{Find = "Default__MissionWeaponBalanceDefinition",CheatName = "Mission Weapon Balance"},
{Find = "Default__PlayerSaveGame",CheatName = "Player Save Game"},
{Find = "Default__GearboxAccountData",CheatName = "Shift Update/Account Info"},
{Find = "Default__OzGravityDefinition",CheatName = "Gravity"},
{Find = "Default__WillowGameReplicationInfo",CheatName = "Willow Game Replication Info"},
}

function GetStringByOffset(Index)
  local IOffset = readInteger(getAddress(StringBase)+Index*4)
  if IOffset == 0 or IOffset == nil then
    return "[Invalid Index]"
  else
    return readString(IOffset+0x10,70)
  end
end

function BaseCheatAdder(Desc,EntryAddr,Name)
  if type(EntryAddr) == "number" then EntryAddr = Dec2Hex(EntryAddr) end
  if AddressList.getMemoryRecordByDescription(Name) == nil then
    local MainGroup = AddressList.getMemoryRecordByDescription(Desc)
    local NewCheat = addresslist_createMemoryRecord(AddressList)
    NewCheat.Description = Name
    NewCheat.Address = EntryAddr
    NewCheat.appendToEntry(MainGroup)
  else
    NewCheat = AddressList.getMemoryRecordByDescription(Name)
    NewCheat.Address = EntryAddr
  end
end

function BaseObjectAdderDelay()
  BaseObjectAdderTimer = createTimer(nil,true)
  timer_onTimer(BaseObjectAdderTimer,BaseObjectAdder)
end

function BaseObjectAdder()
  if BaseObjectAdderTimer ~= nil then
    timer_setEnabled(BaseObjectAdderTimer, false); object_destroy(BaseObjectAdderTimer); BaseObjectAdderTimer = nil
  end
  if CheckEnabled('pBase', true) == false then return end
  local BaseObj = getAddress(ObjectBase)
  local ResultCount = 0
  for i=0,9000 do
    local Objec = readInteger(BaseObj+i*4)
    local ObjIndex = readInteger(Objec+0x2c)
    local ObjString = GetStringByOffset(ObjIndex)
    local iFound = nil
    for k,v in pairs(BaseFinderTable) do
      if v.Find == ObjString then iFound = k break end
    end
    if iFound ~= nil then
      ResultCount = ResultCount + 1
      BaseCheatAdder("Base Addresses",Objec,BaseFinderTable[iFound].CheatName)
    end
    if ResultCount == #BaseFinderTable then break end
  end
end

function GetFullString(Address,isHex,isItem)
  if isHex == true then Address = Hex2Dec(Address) end
  local NameTable = {}
  local SubCount = 0
  local TempAddr = Address
  while readInteger(TempAddr+0x1c) == -1 and readInteger(TempAddr+0x28) &gt;0 do
    SubCount = SubCount + 1
    TempAddr = readInteger(TempAddr+0x28)
  end
  for i=0,SubCount do
    local StringIndex = readInteger(Address+0x2c)
    local PartString = GetStringByOffset(StringIndex)
    if i == 0 and isItem and readInteger(Address+0x30) ~= 0 then
      PartString = PartString .. "_" .. readInteger(Address+0x30)
    end
    table.insert(NameTable,1,PartString)
    Address = readInteger(Address+0x28)
  end
  return table.concat(NameTable,".")
end

function EIndexerChange(sender)
  local Indexer = tonumber(sender.text)
  if Indexer == nil then
    Debugger_EIString.text = "[Invalid Index]"
  else
    Debugger_EIString.text = GetStringByOffset(Indexer)
  end
  --read index*4
end

function BLUpdateClick(sender)
  AddrList = {}
  local IsHex = Debugger_CKCopyHex.checked
  local BaseList = BaseAddressScan(Debugger_EAddr.text,IsHex)
  for k,v in pairs(BaseList) do
    local SingleS = GetStringByOffset(readInteger(v .. "+2c"))
    local FullS = GetFullString(v,true)
    local ObjectIndex = readInteger(v.."+30")
    if ObjectIndex &gt; 0 then
      SingleS = SingleS .. "_" .. tostring(ObjectIndex-1)
      FullS = FullS .. "_" .. tostring(ObjectIndex-1)
    end
    table.insert(AddrList,{Full=FullS,Single=SingleS,Address=v})
  end
  Debugger_LBList.clear()
  local LBox = Debugger_LBList.getItems()
  for k,v in pairs(AddrList) do
    if Debugger_CKFull.checked == false then
      LBox.add(v.Single)
    else
      LBox.add(v.Full)
    end
  end
end

function LBListChangeBounds(sender)
  local LIndex = sender.ItemIndex
  if Debugger_RCopyType.ItemIndex == 0 then
    writeToClipboard(AddrList[LIndex+1].Address)
  else
    writeToClipboard(AddrList[LIndex+1].Full)
  end
end

function BChildUpdateClick(sender)
  Debugger_LBChildList.clear()
  local ChildNames = Debugger_LBChildList.getItems()
  local AOBString = "FF FF FF FF * * * * * * * * "
  local ChildAddr = Debugger_EChildAddr.text
  if Debugger_CBChildHex.checked == false then
    ChildAddr = tonumber(ChildAddr)
  else
    ChildAddr = getAddress(ChildAddr)
  end
  ChildAddr = dwordToByteTable(ChildAddr)
  for k,v in pairs(ChildAddr) do ChildAddr[k] = Dec2Hex(v) end
  local AOBSearch = AOBString .. table.concat(ChildAddr," ")
  local AOBResult = AOBScan(AOBSearch)
  local TempChildTable = {}
  for i=0,AOBResult.getCount()-1 do
    local BaseAddr = getAddress(AOBResult.getString(i).."-1c")
    local TempChild = {}
    TempChild.Address = BaseAddr
    TempChild.Name = GetFullString(BaseAddr)
    TempChildTable[i] = TempChild
  end
  table.sort(TempChildTable,function(a,b) return a.Name &lt; b.Name end)
  for k,v in pairs(TempChildTable) do
    ChildNames.add(v.Name)
  end
  ChildList = TempChildTable
  AOBResult.destroy()
  AOBResult = nil
end

function LBChildListSelectionChange(sender, user)
  local LIndex = sender.ItemIndex
  writeToClipboard(Dec2Hex(ChildList[LIndex+1].Address))
end

function FindPointers()
  local LookRes = ""
  local LookAddr = Debugger_EPointBase.text
  local StepCount = tonumber(Debugger_EPointStep.text)
  local Lines = Debugger_EPointText.getLines()
  Lines.clear()
  if Debugger_CBPointHex.checked == true then
    LookAddr = Hex2Dec(LookAddr)
  else
    LookAddr = tonumber(LookAddr)
  end
  for i=0,StepCount do
    local TempAddr = readInteger(LookAddr+i*4)
    if readInteger(TempAddr+0x1c) == -1 and readInteger(TempAddr+0x18) == 0 then
       LookRes = "0x" .. Dec2Hex(i*4) .. ": " .. GetFullString(TempAddr)
       Debugger_EPointText.append(LookRes)
    end
  end
end
</LuaScript>
</CheatTable>
