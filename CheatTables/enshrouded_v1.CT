<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>31059</ID>
      <Description>"Read Camera (leave on)"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(cam_read,enshrouded.exe,0F 10 86 18 03 00 00 44 8B 8F 64 F6 FF FF)
alloc(newmem,$1000)
label(return)
label(exit)

label(camP)
registersymbol(camP)

///// CUSTOM CODE //////
newmem:
mov [camP], rsi
movups xmm0,[rsi+00000318]
mov r9d,[rdi-0000099C]
jmp exit

exit:
jmp return

//////// DEFAULTS ///////
camP:
dd 0
////////


//// INJECT POINTS ////
cam_read:
jmp newmem
return:

////// DISABLE ///////

[DISABLE]
dealloc(newmem)
cam_read:
movups xmm0,[rsi+00000318]
mov r9d,[rdi-0000099C]
unregistersymbol(camP)

{
// ORIGINAL CODE - INJECTION POINT: enshrouded.exe+299FA1

enshrouded.exe+299F6F: 89 8F 68 F6 FF FF        - mov [rdi-00000998],ecx
enshrouded.exe+299F75: 41 8B 16                 - mov edx,[r14]
enshrouded.exe+299F78: 48 8B 8E 08 03 00 00     - mov rcx,[rsi+00000308]
enshrouded.exe+299F7F: E8 6C 5F 5F 00           - call enshrouded.exe+88FEF0
enshrouded.exe+299F84: 8B 97 64 F6 FF FF        - mov edx,[rdi-0000099C]
enshrouded.exe+299F8A: 48 89 07                 - mov [rdi],rax
enshrouded.exe+299F8D: 40 88 6F 08              - mov [rdi+08],bpl
enshrouded.exe+299F91: 44 88 6F 09              - mov [rdi+09],r13b
enshrouded.exe+299F95: 48 8B 8E 60 03 00 00     - mov rcx,[rsi+00000360]
enshrouded.exe+299F9C: E8 CF 8F F7 FF           - call enshrouded.exe+212F70
// ---------- INJECTING HERE ----------
enshrouded.exe+299FA1: 0F 10 86 18 03 00 00     - movups xmm0,[rsi+00000318]
// ---------- DONE INJECTING  ----------
enshrouded.exe+299FA8: 44 8B 8F 64 F6 FF FF     - mov r9d,[rdi-0000099C]
enshrouded.exe+299FAF: 48 8D 4C 24 30           - lea rcx,[rsp+30]
enshrouded.exe+299FB4: 0F 10 8E 28 03 00 00     - movups xmm1,[rsi+00000328]
enshrouded.exe+299FBB: 44 8B 05 46 2F 61 01     - mov r8d,[enshrouded.exe+18ACF08]
enshrouded.exe+299FC2: 48 8B 56 08              - mov rdx,[rsi+08]
enshrouded.exe+299FC6: 0F 11 44 24 40           - movups [rsp+40],xmm0
enshrouded.exe+299FCB: 0F 10 86 38 03 00 00     - movups xmm0,[rsi+00000338]
enshrouded.exe+299FD2: 0F 11 4C 24 50           - movups [rsp+50],xmm1
enshrouded.exe+299FD7: F2 0F 10 8E 48 03 00 00  - movsd xmm1,[rsi+00000348]
enshrouded.exe+299FDF: 0F 11 44 24 60           - movups [rsp+60],xmm0
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>46</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>31070</ID>
          <Description>"Toggle Free Camera"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(cameraWrite,enshrouded.exe,48 89 07 4C 89 4F 08 4C 89 47 10)
registersymbol(cameraWrite)

cameraWrite:
db 90 90 90 90 90 90 90 90 90 90 90

{$lua}
local cos = math.cos
local sin = math.sin
local asin = math.asin
local floor = math.floor
local atan2 = math.atan2

function moveCamera()
  local camera_move_speed = 500000000
  local cam_address = getAddress("[camP]")
  local coord_address = cam_address+0x318
  local quat_address = cam_address+0x330

  local q = {readFloat(quat_address+0xC),
            readFloat(quat_address+0x8),
            readFloat(quat_address+0x4),
            readFloat(quat_address+0x0)}

  local coords = {readQword(coord_address+0x0),
              readQword(coord_address+0x8),
              readQword(coord_address+0x10)}

  --q[1] = q.y
  --q[2] = q.w
  --q[3] = q.z
  --q[4] = q.w

  --https://stackoverflow.com/questions/5782658/extracting-yaw-from-a-quaternion
  --var yaw = atan2(2.0*(q.y*q.z + q.w*q.x), q.w*q.w - q.x*q.x - q.y*q.y + q.z*q.z);
  --var pitch = asin(-2.0*(q.x*q.z - q.w*q.y));

  local yaw = atan2(2.0*(q[1]*q[3] + q[4]*q[2]), q[4]*q[4] - q[2]*q[2] - q[1]*q[1] + q[3]*q[3])
  local pitch = asin(-2.0*(q[2]*q[3] - q[4]*q[1]))

  local x_speed = 0
  local y_speed = 0

  -- X/Y movement
  --flipped for some reason!

  if isKeyPressed(VK_LCONTROL) then
     local camera_move_speed = 100000000
  end

  if isKeyPressed(VK_NUMPAD8) then
     y_speed = -camera_move_speed
  end

  if isKeyPressed(VK_NUMPAD5) then
     y_speed = camera_move_speed
  end

  if isKeyPressed(VK_NUMPAD6) then
     x_speed = -camera_move_speed
  end

  if isKeyPressed(VK_NUMPAD4) then
     x_speed = camera_move_speed
  end

  -- this works?
  coords[1] = coords[1] + (y_speed * -sin(yaw) * cos(pitch) + x_speed * cos(yaw))
  coords[2] = coords[2] + (y_speed * sin(pitch))
  coords[3] = coords[3] + (y_speed * cos(yaw) * cos(pitch) + x_speed * sin(yaw))

  -- move up and down

  if isKeyPressed(VK_NUMPAD9) then
    coords[2] = coords[2] + camera_move_speed
  end

  if isKeyPressed(VK_NUMPAD7) then
    coords[2] = coords[2] - camera_move_speed
  end

  -- update coordinates
  -- floor to convert to integer since coords are 8-byte

  writeQword(coord_address, floor(coords[1]))
  writeQword(coord_address+0x8, floor(coords[2]))
  writeQword(coord_address+0x10, floor(coords[3]))
end


function camera_loop(thr_obj)
  while camera_loop_running == true
  do
    moveCamera()
    sleep(5)
  end
end

if syntaxcheck then return end

camera_loop_running = true
camera_thread = createThread(camera_loop)
{$asm}
[DISABLE]
dealloc(newmem)
cameraWrite:
db 48 89 07 4C 89 4F 08 4C 89 47 10
unregistersymbol(cameraWrite)
{$lua}
camera_loop_running = false
camera_thread = nil
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>46</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>10300</ID>
      <Description>"Enable FOV"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : enshrouded.exe
  Version: 
  Date   : 2024-02-03
  Author : skall

  This script does blah blah blah
}

[ENABLE]
aobscanmodule(fov,enshrouded.exe,F3 0F 10 46 14 F3 41 0F 5E C4 F3 0F 11 85 54 01 00 00) // should be unique
alloc(newmemfov,$1000,fov)

label(codefov)
label(returnfov)
label(pfov)
registersymbol(pfov)

newmemfov:

codefov:
  movss xmm0,[rsi+14]
  mov [pfov],rsi
  jmp returnfov

pfov:
dq 0

fov:
  jmp newmemfov
returnfov:
registersymbol(fov)

{$lua}
if syntaxcheck then return end

function speedCheckFieldofview()
    return isKeyPressed(VK_LCONTROL) and 1 or 0.5
end
function keyCheck()

local fov = readFloat("[pfov] +14")

--block input out of window
  if not (getForegroundProcess() == getOpenedProcessID()) then return end -- Only run if in game

----------------------------------------------------------------------------------------------------------------
-- fov
   if isKeyPressed(VK_ADD) then
      writeFloat("[pfov] +14", fov + 0.5)
   end

   if isKeyPressed(VK_SUBTRACT) then
      writeFloat("[pfov] +14", fov - 0.5)
   end
----------------------------------------------------------------------------------------------------------------
  end

--timer on start
t=createTimer(nil)
timer_setInterval(t, 35)
timer_onTimer(t, keyCheck)
timer_setEnabled(t, true)
{$asm}

[DISABLE]
fov:
  db F3 0F 10 46 14

unregistersymbol(fov)
unregistersymbol(pfov)
dealloc(newmemfov)
{$lua}
timer_setEnabled(t, false)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>114</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>31062</ID>
          <Description>"Degrees { keys = numpad -+ }"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>pfov</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4107</ID>
      <Description>"Toggle HUD"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : enshrouded.exe
  Version: 
  Date   : 2024-01-30
  Author : skall

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HUD,enshrouded.exe,F3 0F 10 35 3E 79 26 00 44 0F 29 9C 24 F0 15 00 00) // should be unique
alloc(newmem,$1000,HUD)

label(code)
label(return)

newmem:

code:
  //movss xmm6,[enshrouded.exe+CE7FB4]
  jmp return

HUD:
  jmp newmem
  nop 3
return:
registersymbol(HUD)

[DISABLE]

HUD:
  db F3 0F 10 35 3E 79 26 00

unregistersymbol(HUD)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: enshrouded.exe+A80BBE

enshrouded.exe+A80B7F: 48 89 BC 24 70 16 00 00     - mov [rsp+00001670],rdi
enshrouded.exe+A80B87: 4C 8D 92 B0 11 00 00        - lea r10,[rdx+000011B0]
enshrouded.exe+A80B8E: 4C 89 AC 24 68 16 00 00     - mov [rsp+00001668],r13
enshrouded.exe+A80B96: 4C 8B E2                    - mov r12,rdx
enshrouded.exe+A80B99: 4C 89 B4 24 60 16 00 00     - mov [rsp+00001660],r14
enshrouded.exe+A80BA1: 4C 8D AA A0 92 01 00        - lea r13,[rdx+000192A0]
enshrouded.exe+A80BA8: 4C 89 BC 24 58 16 00 00     - mov [rsp+00001658],r15
enshrouded.exe+A80BB0: 4C 8B F1                    - mov r14,rcx
enshrouded.exe+A80BB3: 0F 29 B4 24 40 16 00 00     - movaps [rsp+00001640],xmm6
enshrouded.exe+A80BBB: 45 33 FF                    - xor r15d,r15d
// ---------- INJECTING HERE ----------
enshrouded.exe+A80BBE: F3 0F 10 35 EE 73 26 00     - movss xmm6,[enshrouded.exe+CE7FB4]
// ---------- DONE INJECTING  ----------
enshrouded.exe+A80BC6: 44 0F 29 9C 24 F0 15 00 00  - movaps [rsp+000015F0],xmm11
enshrouded.exe+A80BCF: 45 0F 57 DB                 - xorps xmm11,xmm11
enshrouded.exe+A80BD3: 4C 89 55 40                 - mov [rbp+40],r10
enshrouded.exe+A80BD7: 4C 89 6D 48                 - mov [rbp+48],r13
enshrouded.exe+A80BDB: 4C 39 BA B8 11 00 00        - cmp [rdx+000011B8],r15
enshrouded.exe+A80BE2: 0F 86 D2 01 00 00           - jbe enshrouded.exe+A80DBA
enshrouded.exe+A80BE8: 8B 5C 24 5C                 - mov ebx,[rsp+5C]
enshrouded.exe+A80BEC: 45 33 F6                    - xor r14d,r14d
enshrouded.exe+A80BEF: 90                          - nop 
enshrouded.exe+A80BF0: 49 8B 32                    - mov rsi,[r10]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>220</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>31072</ID>
      <Description>"Only one of the following can work at a atime"</Description>
      <Color>8000FF</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>10350</ID>
      <Description>"Time of Day"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : enshrouded.exe
  Version: 
  Date   : 2024-02-03
  Author : skall

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(timeOfDay,enshrouded.exe,CC CC CC CC CC CC F3 0F 10 41 38) // should be unique
alloc(newmemTOD,$1000,timeOfDay)

label(codeTOD)
label(returnTOD)
label(pToD)
registersymbol(pToD)

newmemTOD:
  cmp rsi,08
  jne codeTOD
  cmp r11,246
  jne codeTOD
  movss xmm0,[rcx+38]
  mov [pToD],rcx
  jmp returnTOD
codeTOD:
  movss xmm0,[rcx+38]
  jmp returnTOD

pToD:
dq 0

timeOfDay+06:
  jmp newmemTOD
returnTOD:
registersymbol(timeOfDay)

[DISABLE]

timeOfDay+06:
  db F3 0F 10 41 38

unregistersymbol(timeOfDay)
unregistersymbol(pToD)
dealloc(newmemTOD)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>115</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>116</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>10351</ID>
          <Description>"TOD { keys = [ ] }"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>pToD</Address>
          <Offsets>
            <Offset>38</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>35</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Decrease Value</Action>
              <Keys>
                <Key>219</Key>
              </Keys>
              <Value>0.05</Value>
              <ID>1</ID>
            </Hotkey>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>221</Key>
              </Keys>
              <Value>0.05</Value>
              <ID>2</ID>
            </Hotkey>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>221</Key>
              </Keys>
              <Value>0.01</Value>
              <ID>3</ID>
            </Hotkey>
            <Hotkey>
              <Action>Decrease Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>219</Key>
              </Keys>
              <Value>0.01</Value>
              <ID>4</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>10349</ID>
      <Description>"Sun Position"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : enshrouded.exe
  Version: 
  Date   : 2024-02-03
  Author : skall

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(sunPosition,enshrouded.exe,F3 0F 10 41 50 C3) // should be unique
alloc(newmem,$1000,sunPosition)

label(code)
label(return)
label(pSun)
registersymbol(pSun)

newmem:
  movss xmm0,[rcx+50]
  mov [pSun],rcx
  jmp return
code:
  movss xmm0,[rcx+50]
  jmp return

pSun:
dq 0

sunPosition:
  jmp newmem
return:
registersymbol(sunPosition)
aobscanmodule(breakSunPos,enshrouded.exe,F3 0F 11 49 04 E8) // should be unique
registersymbol(breakSunPos)
breakSunPos:
  db 90 90 90 90 90
aobscanmodule(breakSunPos2,enshrouded.exe,F3 0F 11 03 48 83 C4 20 5B C3 CC CC CC 48) // should be unique
registersymbol(breakSunPos2)
breakSunPos2:
  db 90 90 90 90 48 83 C4 20

[DISABLE]

sunPosition:
  db F3 0F 10 41 50
breakSunPos:
  db F3 0F 11 49 04
breakSunPos2:
  db F3 0F 11 03 48 83 C4 20

unregistersymbol(breakSunPos2)
unregistersymbol(breakSunPos)
unregistersymbol(sunPosition)
unregistersymbol(pSun)
dealloc(newmem)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>116</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>115</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>31073</ID>
          <Description>"Arrow Keys"</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>31063</ID>
          <Description>"pSun + 50"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>pSun</Address>
          <Offsets>
            <Offset>50</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>38</Key>
              </Keys>
              <Value>.05</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Decrease Value</Action>
              <Keys>
                <Key>40</Key>
              </Keys>
              <Value>.05</Value>
              <ID>1</ID>
            </Hotkey>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>38</Key>
              </Keys>
              <Value>.01</Value>
              <ID>2</ID>
            </Hotkey>
            <Hotkey>
              <Action>Decrease Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>40</Key>
              </Keys>
              <Value>.01</Value>
              <ID>3</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>31064</ID>
          <Description>"pSun + 54"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>pSun</Address>
          <Offsets>
            <Offset>54</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>39</Key>
              </Keys>
              <Value>.05</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Decrease Value</Action>
              <Keys>
                <Key>37</Key>
              </Keys>
              <Value>.05</Value>
              <ID>1</ID>
            </Hotkey>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>39</Key>
              </Keys>
              <Value>.01</Value>
              <ID>2</ID>
            </Hotkey>
            <Hotkey>
              <Action>Decrease Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>37</Key>
              </Keys>
              <Value>.01</Value>
              <ID>3</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov [rdi+08],r9</Description>
      <AddressString>enshrouded.exe+8D195F</AddressString>
      <Before>
        <Byte>04</Byte>
        <Byte>41</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>10</Byte>
        <Byte>49</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [rdi+10],r8</Description>
      <AddressString>enshrouded.exe+8D1963</AddressString>
      <Before>
        <Byte>07</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>49</Byte>
        <Byte>8B</Byte>
        <Byte>5B</Byte>
        <Byte>10</Byte>
        <Byte>49</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [rdi],rax</Description>
      <AddressString>enshrouded.exe+8D195C</AddressString>
      <Before>
        <Byte>CA</Byte>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>04</Byte>
        <Byte>41</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>4C</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>cam_settings</Name>
      <Address>200A7D00000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Default Hotkeys
Toggle Freecam = DEL
Enable FOV Control = F3
  Change FOV = Numpad + and -
Enable Time of Day Control = F4
  Change TOD = [ ] keys
Enable Sun Position Control = F5
  Change Sun Position = Arrow keys
    ↑   move sun up
    ↓	move sun down
    →	move sun right
    ←	move sun left
Toggle HUD = \
All of these can be changed
</Comments>
</CheatTable>
