<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <Forms>
    <IconList Class="TCEForm" Encoding="Ascii85">=Ysw6l+@Vj,}k{y2sA.G/P4I71VM6,P1D3Cc9S!RARswN(KX3MtYie0EEy!LfJ8xZ?CWqVbIu+k%$:D#-,bS^E@GDb=svcYt:iA7,V$,{UDTNY0NU#JxY4v[/=lJUI-o0oog7tcVQ@#;h!q?Z6#-QdVry+!NBWL^r0wL4/c5HvXKM,!LDEOWkp^zU-6670j(N5eC;q,8mW-1pmW-3DCB+gWIWR123tKHO7#!lD3UPG9w6ImRb,mP]@?ad]-K7Qhf/n.HEnr%/j?Fl-WI?hwTPH[UdTCiLAO{zr.@5=dDFI45!fh:f7H-x,Z5vkz$dZ$j6I(K*3vq:1t$SEMzyH:d6j;+zlPmJx.y3^N-eng#Wo/yNS]auIw*6unB^Nw=X-zG8ZOosdt6R}}z*%=_2yBmaeeLIS5%)}zzdZmsKv1z^o!ne*A,Ep(5RadV;b7vO4H{x2@F3Qnh};_AG}7T=Te#QdRTnu_kQE$LMOH-?.tIPm3yqhPn@TaJ8-RWZw;roX0!49Fg/12ENjrjVoLsdoZPdJKmh)4IQPeyfA,E%KFTVPOh5;?P$}eK^P7dV1%YR/?JAIOWBmcVx^B-s^.Fq%zIj))O^F_=p5zu{/0fvPJvcK+EI;]Q}DuC#hC!ImyOHXlLOA#rE_9ti5y?*[e8HhUss@oatsY_cBYl3WH5X,wz*!g8h7tt*-uXG=kuU$8fi1.U0BXa!7*5-_w,8[)HtHux!u5ncXSwNszSL06:0*v69A+8;Xe]V,I.9O);2XHQp^yQPzpM](eP4:;Vi0faw=OOS--S$*c8g*d0-#]amfsTm!3-bj4hBVaH,R?=iRy1?t:%;ox^D1/ozr6c5Zvg%[ad?;LkjrTUvUGp_og9HSP98wG6VL)Vc!;iL69^s(1iHZ;K*8*93}1_U/#aWX^.{zSdNn:VAphjqfu#._y_nDQ33SY#U#?OM2LJ$:SI,zyRDKICf9cBWasGeBG)x2KEo6#chfGA1Umj(b^5$WVg6yvp^[T[@^PX1b]PBc,JTv[7guMO#wo]GGE,amSQw#2T+)VqRDuoe^2j}wJ6fhC{6}C3[fZ^,wIayRnBOvb$B0hNm^wo;Z4KjWKp:(,/oAkK3uVn%@$#]V0pDB2wo^aESH-(EM:FjGYZ_aH(kMNaD/OUfpKmU}.5BE*a?+:XA(GFoXiZnm;mD*_H?JRDq%WgzP=%Fz?n@57Am%f)Wh_0Zd@LTDTg/qKWT6PmEyu89!rt^nc3+RprL}iVh)3Ku9[l,L9+5kbi7Cs?[YrPvs3)xgP.:LJ^;wfayhzq}ab$d7ABEWs]3NzjtM,?IIX1q7y!pAFgt#^+a5xjS.cjIu8lfRPjao@}7-YXmUcy1hK+CU;f[r[r,f7KVhn^eS3xgIZk^5Sgc)gq46zMF6nl*V/,I9#s1$0u}77p[Mx-%Y6S3dvksAadip/h#:2:f2T$;8q}r--OCN!7JnVd2crE3QYc,KoQ^Mz1F*iv/Uy}%1xl}-?7*C_3+{Jc:%BfFi}aL+w{!(s[L#za0nO/RJvTwtz9ppCQ#M{0:B/gk+[p;9:32Bpsl4SklXW05om7/g,eSjfmh0ySC3(3mjD[#xdFi-M/5vL@xInQVe4plxz..6d0ejOSNE_2C4dT-AzWTxUi5OHbN}DU-U0Fm2nh:F30)#l7H(:,pn=o50P]wd_BC+(7+{7E94#T9h/s;jj,a}uY;$S0l@d8^5(lb7_Hozeck+=}y[{qX;d@pxCt{wLh0-O^]19h3[.YRK[[.PBBK*(BI:U9b,6e.GQTpR+g:yui3v#suSwJCw!O@d.UMC{1s8%o.C#WUh-)e/yHcs*/Z$FL0_IIkuYvYuE8He@ac7[1[-)8sht9D^s+^N+^heCcDO7?$fgx7{R_6)^hzw:P=%W*3Aq}BM]o1nn2)G9yCoB#Q_=2;ps0J)ep35uQnvru4ZyMi2H(es:y.iBYl$+3[dXNR,e6Uf![ud.{L1}2]YozWxy209J0qOBtwl_t6Z+$W80B+s?1AN+TSE-{7#3i[_n2mGs=f#A;7?ml9bl1X{V7^L7rkk*06an(DmY.^^O,_3ojDF:dsFqts]05WZLCs,8?w0i*7dpNn.E4YH3ZEV3/m$Jv_4-^{PDKRg3K8{+2oaW@[%jN41I[eekw_n1t]G):FXaEBMaJ#Nv2uXKvsV+-fTT81-0_3=0zNZ:qm+0V4MNL%z!231.5Eudg9RIj^UjqQ#xB-B#/@X]]*60H1#hbmkcj;nvB^@wr(+:(Sd#JGj$.Ck5M)6r$=ea:?b.5$Mdm8:^sj.%rzVvP71Wj$7#1d(X6m7cEi.%MgH3Au8lv;P)vB^W8q;Az:ba}(UiD=Qs:/sFIk^;PbJN39_N^%0FHNQF;5IJj?uxEa/Y2snMZ;u-m%r}C[Yk;^*5k{$-9()HDM9a_!c},njB]lj.6:;Q?5fk(f9+ga6k;?czVmL:y(pzIdoKee:s6TtuQtQ,5Vr;hJtX=piuop-uh4C;s)pMrzn:Lf[F*,PfhU$r;1EEORqBms)I+#p:#z!)!A=oQRZx-HEw]]xUrjpr%t;Cue(Bx/,f1G{+uY:A^eEj)ODKP=L$)N?oIp[eynsG)OuRB{sg3/xzhXc%5YU0)KT.-ya0X+FNO%2WY%cljzLE3H?gy?Fy1eHoM;B0aUB2@(aeJKrOV9,3]2:m0++LmEJ-:.5QJx/2,;;,9#f!my$8^hl{d(c}P:FUdd0[r5v]=};14ol)VjJev[fkBU%(GRq-sLBdb;g?w7dq)Z4]u-cVK3nOxXzzDfxNs3ZIeNByFEo@{*/sB9ZdXkq6OUF;z{cjIFP+QF!uYi)0s{+59cPl+T]_E%C]6CBqL!S7TE49A%Ms4H=)3RoW4I#GRFOT*Ssx-YUlWZfE3wnOtZwQ^ee]VIA49R4jygMiAv@oxKnV3fvcAwu3C)v9E1zRBm8si^Ibt5SQhrd!KK8-w,?xS57IX83Tf5OAMcwymYWQVYQ3elPE.]VeqPIJ)jpn2snsC^9#hDTE$sR3];R*]W@grs6^L!BPIBP@t/3l=TzW,*uALd5pIt3bvB9CBc!^,1t5N:epje.R7CnYyTYed}$)q;2nRkX+B]Mh*THehIcDyT?s^xJ{Mk6=WwFpzPppdRlqfS}OTU?kLZVfrpjPHxCu9v*YM//1ppyR.mQ.Eku!Vs*6{nVUd#IV-)V9=B51=wvG1!W78Hf$LnHAmg12Iubn*VAVp--(jpYS11+M_5{ZR?wWOsx?{VDqqj/d/glF)UChp?Tl(a$cF%gzli__Z$r1gzCNtG1CoKjfki[oQRTlT:o!!?I4EUJIaWCG*wz0pWYwE(;z4Gi#S-^/DU9wEZz.VGd)_5{ww%,?qioZlz?_gKcjo^N;hNq4u4,h#:3]nt-o^O7g-0tN:[mz*lM/zIxpt@GeG)yJbiditK660^#,z%Y8VDu{x)=Ikz$NSScx=ICYyT;5)7sI!bD^M-qUaa-nZ[mTcs%s0@x,-GM=DkH:C?F1;W=uB2YKu+TD-t-B,,D2u7}a%i9RI,_L/KP!5un]eCjN/f1?3+8]2.Uuv.6d-A3cOK@){lJj*z0-i.ExlR9VUU!kpnq:BSUksoKuPLfUPd[2lT=eJ3tz@4[z;Z/RCS3A_Nd1FUh^vgc?[H3+DvU6RbLip*!}wUqpI6sXg9H%lX^2T{r[JDhT*l/QFYfQ8]vraX-RK6zG;cGrci64WZ[^rj-^[O5{V^.lVaiyd1ZF4R(9b.6j*=m2f]8I.H%BaaAZjCMcyUL$1gV(t:F;o}JNIqpEEjI1gqeOoJB8yUoz#Cu1RLLZ3CKgO*1Wukf89?}3+J=?/*VTkwIUW}*{A{U}LVrbZ(Dy61UjS:h(BLX03c1L#gu*[0w]UPy1=:2n@%BiK_r#;?LCaBSUy8]o/ZF:NO5]*[q:Ob}rmX4b}o{=FY^yY$NjCmO=R6bz0VWyP-SUb^u+dC^JwqMCdK1d;s%mE-EcJ:3XUziW0)da#qKv@dVHgO3;2UlyNsI{L)Mbt4;wANv5a/Cec[YOB6GJP]?#Ixtf?a1$IXgOx1XVNspriU1,xApPGBXY2i8CqGA7VaFUPvlg,!U,*bL[A-*2QmQQm$v]7AbKws@42ggKBz7D04c_u.y6!U!Cri.wV8}^$s_Pno(HeW^[LsSZpKG#A[Ib[x1.3QC.Ry^cF40xeBnB%v-e4ZQr}!nW,1:EX{(]e(Zw..@,I$7grL5I,ycQT:nGn+RnXfu#7FAl*p[4+qk?c]MH-Rhn+PZP%{8Y{NM!:Yqdl4=NU[Nx4teu(pvbCZxxBNeFLD[}o}wEvVe!4Z1%:jti9SawFF61U37?Cupc)j1pM4^kLb)Krg$XOgTH1N4OG1VP3/A7U$(d^F9!6@R!7,*fZ-n^?x@#iz[aaPb:L[9t4?tQ/GMwgp#v%ajf=X;R=sIf?J}?3AM?w}dO!]{}4-,$SpCW0Xctw=cv4__S3Ra_@ZbpjR3D;uM?kP@v(V2D{5YipCN}OwI;)WP#63]$vb^Ob2Y9Z(-8p?}7[UM[$MjuT1w@Xzwvl3:]N4IG/N8TqO8R*f]JDbI_b#OApm$t%X*D%V3W/]{nAhd-nt*b#0Dsh##Vutb/hzEm:?T^.#V7/+^0o%BN9LB{yh1#{sX{OcB+}Pe9x[Z=uCR4IdZT?aq;jz-VRm90%$jX-}RyNKK2Y8N5Fg=9_*!Q+)F#?8ZZRNWfzfX1Ib%#OJPPF3gMg;eo#6e:cqyTzDTT,5}UaG:GO{Q4xo%YT02tl[xgR0me!yv$==w.m[n0UM.6T}t7!f:a%#Jsrb+LEdpH3,LX0fZ;^2n(zCM1)cIbUyZof%,Y!Psw}+F16)F=KQ^P9/;r)P#$Re82zDO=c+DQG}uSha13T?^Kc0/C{[^tftf0?tf3onqy$9LY.iIJ^p{nLip3w*3-IZlWWGAg@7%fz4Rur.GagenQ@=v537?p#NTy(%tRxO,X*t4q*i7i=dX6mgg19Uhy(#En-Y@]U73[S{HqZP,60nn%VHWVRL-CTh0F;k)$UT!W55}Ua%FdTW;5@1_pcv?C5h^#75:__+tJ@iZ]kyD7bbn7YiR3M9.XvEVv:HbHg1SLqzfsKJvNxLl1jXdIc@}t=LNPOl_C)Y368_N_WVxo8Q5Ovkzf)+sqN@7IAT5LZl6_V$%F3#%,c=3UU@Y)9KqXmOptGx!l]Rwk0C-MkYI+1/9Fj]RA42eSWhQs3Q:mZrdWH*0xA,Em]0*VHLwrK1H:+H{y2K._8Hzex!DE/.nc,*0EDhGu5#ffBI;y3Vv;%IW^k+p}H%{*^U$11WoDFyl.sp^AGR1w#vjd1_hKh,!)#EJMcD-v3L=lsMKnCJ{;Fuyac;?6KAbENE!:Fo?Ayhd55CP6)oQ#A$i$6k_*S2]Ez(OAHJ;d!#LaZj;EvNQdV!(H,z.msamY9G/008RcD=/,]!vSo3SCT+hOqM2mBm,$5-6{-}JV5{YvM4YjO1%P?;jY]CBerz[aw==gIg#6+Ap^!K?hTt(HlqOCqxEC*q_5//sWR,,0H81.K$eE69_?;{l+9d?b*nSEIkZ6$0npZ**Sq)y10Qii)h#M]=#^vz-BJg%S[VYMif?JSi9RDGoq/Sk1xaN98vvj?9(W!7mW+Bb??esl*e3a]]/uKA]yD5G3A%6d7q6obkpcJ+2DhipK7SrZa[(KR=$(BwY6O[p1:!3VoAAwG/QQTOc@@l537/+PWaX.A6^Eg_iG^U!,akA[dpT0#2j8O8LZtt{rSxLPdk5f;CY4(+mLGEN0(.YJrWw7]i!8)Ac){rF)GwbQ9=d$u#9wX9P7=7:_8avly:sqFqh[2O-MgeE!nFY2Z=wth7zrLYfQm/IZ4c[uYI}t:^#yu$k,{LF,yPSldmK?eSaAS,Ykpp?LjWM5@+BcA4g#P+rC:EVc*dz*T#]tp)tVjk%H.(HJ)otqZYQp2![8:=e%)ff2tt+U!e)p{!/Rw+6nG0WmpoaTLc2_L61ny^5?ilS,9G}UJC88V$@xNr)7H1jsyTU92l=wq7_7CZ)TPBGqTvJ/)UbH8:wzwU$n,pZ^]kNG.95Ab2K{42t[6stGInt$iVV9PuEZiwjHOOuXWjyNBhDgTEAS*,z0g1!MRb#DETN@0:,1!,!{.,^0,aLXhbe1l!}@T^iihv7y1?Z^5z+klVIEwos40,fRG7T@V_[{d9#ZgUeF5DV0Wh[]kUI%gTNY;:oe=oIkZ1$l@dWu,G(nX@L0=5+w(eB)Lk)dQx+kTzL!J)1]h=4XecPMxxXaT+v@rM+UIo)?9SvR9ZBu4kBC]ZVM%.JtpB]Y,-Hzo_!cwwVoKfT](=:DlfNz[j!n7Xi?NVuC]isB^U]kwlEMBZy^OP.SPxZv2Z@D.UF!C5R3la(H1t5}2kqfhVWm0p;H2O:kM$yZ^MY9c,9CF.%xwOJciTK@pZuh5=%Jvp./c_%d+.=Bk,HkGGn:ocWXyj9dQa.$PqOGm0g=#tG#)9Jj)xYg;LSawgLs3j#Pr.R^QiL+,lKNJgdxDoL*%q#kQzspLwgWa[lDPMTNuo*+N(ZPIW!gG09mz4TGA!,K9lUZ:UB9AxIxp3iOEE?C%g0KobzYSUJ^!;V)2P,Z*G+6$F+@?F0pq-Q6nZb]kz(3!xW1d;2[0!SFXWrP%)$yA)mK2SQ(kJ27snea=kJ}J=p!]9TC%V+s_u=*tIRJh^Rp[-*eAc!QyIzwbOSg8J^)9Kk^s3Jc9m9?^+@-0-qS797Mre^q=[y0,iuR8Qkm=T]:Sn[hi)^6f:wDtp-nSxgI@@@!0TRX82j)^ao1+t74^vz:kJq!-5%c[rWNAmM.DBxfbs{}clu)%tM+TA8-^ltE_w7V,BC(:,2ju@/uf-hZG}Ac3wV-ASXDUPvZ(yngM73X16kPe(J:VNy!q6@,Mj5jX4N!YGXn4Hd(}Z?VzT1hMzqLShJ6.OW$N_J+@_(h]HVNpk%Eyu$/xWcy)r15$%hqBbtQDYboX@9DwM^J+V*$^#]U1.RC=+y;7wbqbtRSQm0j-X4*erI#4*TNSogIYr,GHcHZV8RHc(T34nPOD4.(5#srzmbQjgz--{QBcyY.z4onNmPEb?1jc9nLn:},]+:fX1g1jvf,$MzDYxTlb5ITS_{J7#/LCVi(dYWh$,vY)(,D+a;Sl+8z3pZFWU?;5mLbgFkIo#NZl-++o6mt6XmGmF!UJN9B%xJ:zm4NOm*Y1Ce3FlCK%JG]CgGFoWv@*VNf5Qm%$tRYEsOCV-?XNR;Ewb0Ltw:npR]:_P(on?WgJ=TA/Ici/;,9mz:0L2]k9pN*Va{Z[FOC*/FTI5vZLNo!CCn(E[xv)WjWUw*C3{^@woZ85CsgA+XAFbKbhDqL_XOb9FopARtsnCoQL[ZotpU3xiDmqqK;#IW#Ur;OCH[,Nrq;;%]5wo*KmT]X7sL[JEzz@BSD=S.VS}o_3iz$t2ygOr8:jv]/VF%TOf.Z9_0vpO2f.[^H/iDj5!ig9$HXncLn)PvPybMEJfu]_gd]i/!hJ(Ad^,QQD[GN9LH[JoJK*?i?S2+-3Vaf}1(mlk:buMzX((7[a*I[?v)=iwdTk?XdX.jxYD2v5@$/$3c5T3p3CwpS@NbR0mHy=)Y/^hs%iugu]Jyl)}?wtk?DVHe?k.II_jC?TT,vJ*%6WsMI@:ejk=j,!R@7]WNo,:@i^oyBuW7ysd2^cq=IKM^onK}{13RlS.Pa_=8(j!V2MZ.0Pd8;:B#_(7)q]u9u()#}AznpCFH2Aha-zxu#lp#]!%!8B1M6:1#)^_@BU$0H=i^x_lC4EhuT_2LjyV05/9_^X*=+!{dCzU3=;veqg-LMf%0!p(f+_tj:Gtv!UBTF*=aIPqMcJ%yS!/Qw!2WDfw])6(y)^sx8=;E.K+9,DiD-I1;tCXAVq^oIH=ch^WeS7km%FID_4xa06w.$bK*BnC7NdP3UY1CI(F_)U1n1A4%8DP=?dtO.y-!jECJ;EL(.j?PuLQQgaZaZ/}b=qHbJ@N.PzkSCKTfwt2lonJ=tzZ0S8x%a$-ekr26#AeY$ZxOP!JVKVt6E!MU@r,BKA{,+b@e=l:ro/andVXJY^-V(A@o_XdA]WkXIXtUccAlQXa9U@K;a?Yx{w+e52CGZ6()2vIpVp@,pAIenbfA#3N7[N^I[_Q!EQYQF=v{!nJnVpjz0w[EEiiAXJtN,6dz6f:yj-amTGUJVbW_ZJD4R(2H#StH#;Z^H?6aFvh(+cJN::;%/cO7mEzCD75tsg7Zt0FoYo/Sy[/Ss(+0xx+Y6H+j_809wT.0hjwU!wvb}zOyEmxn9hqitHQa96KXO0VB:f-BQu%1(9phPb*-rwm73}D=Ye3CKHKfg9.mEwre6Z61ZyOgQEbAii$4J:X2ZcU]F?{2#Phv7?X^m51n_Cb-5+CYJ6cY].[t+X5wGJy@nLl4Ty,5dbHo1d!968wf%(T/Ib-TQ?O0/WehxYY:m-x4$v(w-PzwL)Yrum+],EkV@sSEYJ.S,FA?sQe}#ES358Q0.%z0:ztvibgddzToQKld+CQVpVRDNytT:+,@lH#VM4q#uQ6dJ@4TpF_Fp1ukMLBV)q7OD)lL1blnwDPxRi3Jhmv;[Wm+L]LRnLjvNuFht]cA]]_PP3}78Oxte?yo9-r9ex]c/7/v40J:WmH![+k8T*Y)?MF8gAiqp3T^7AFnAv{8rY{H%TPeqwbsntv.8mAoM^8:4lqI(*EKjdWb:0XO$9FRx7R0vi*b+R@+kjWQL(Y*2KaS_PL9x!Wr{J.PB#,x08OWf@.,0RG3:5B/kl,{TPssv}7_y/KR!R7-rc2s;,ij!?[ju6KII*0,o-jx+B?{28;Lc-8!,(R(Y[4eqcBprJP!%w6ZymwZ^T!jFD!b,G,#9vAm),e}2u%^Bb;9vS^hD?}(wU*7e7{]bUwCdHbob.ePiHh90Z,ebZHNfFS-M7;mGGWw%a:0*RGPTGIB0z*^Ay2o@2vx;(uWR-E5wz-h*bBn/;ty,SX2tEc/d828NxNEy8e([)xhTwpYg!QIuQw/=Ve)ZQtK}ATZ0!5B/)buxNGu2?a8ox4TCD}m-S6E-LtfrUQ%YP?8[cs=E4b1*JgJq!=u05$7t8Ho6[dRcbLiVmrN1IHp.x[3mhsG3V%AKm$7E5Eb.0^(1:?{3FSyA?0L.y9DV5S/ja7WyQf%M!{-ND!!qyEyqi0uUNL,?bnE@kbsApauvTyGs/1_49qo=Sr}5S}62=d]A99;,QN%MHxfBQLU#$N]])g%zC^Et}(Gf!U%W/2;0NDj0g%WG8kt#[ZVg*T%4b6_#S3L=%U*pFc=e+!]c@P(v:e$^5WW_)iU-^%w*QW1Z$X):Fa^KQarG?j@Cc=*E[6_hAXDdVZy4iIdKrS3;BWpOx*gM?eN_v9!o,(^ulCoa-o?-xTyJg%s([CnRy!+yu^?d*?riP9m9!Vo(NhR,*70aj;.6qiPaXrD7VaI0_L){0$v#$.ks6yPLYo%khv)1]DCrpcllaWe5![V!E5udoh;eRPdKz3xcC!f{1KJMo@sj6vFd;3UEJ^zj.Bht;O#gt/SejHk((Tbt8PS:c-:3z;k?fv_ic#a((op/Zj?0f4qdY2/IVd!$FG#8-1qD(a@Xk98adu8VXIUJi%nG-NQ^NCh%kGG]p4SmhB3RMS-36%(Gz9UDj1),)),zDs/WY@_-sxzZ,Vo+F]o1SiVP^!4}Q)M)oKJ)bd;ANR/ExQK%^0k-z;JWK%]SO#gPA,c]/7oYDriv:!?FhY*HV[mckG]9fKnvBVbCS;^SEgE?i7hc*6{zr*X=Y%W(tH}x+QnXk*h/{Muw)5QrMB=vKu;fMMLBgBUYinyb@Di;a=vsf?2ws!*p?9:v,)M$Yp?VMA1]tldWca+o{WKknupFNnt1/w^P4xjN,c9kT#u-NdM.CI+y@^vfm8e7rOAELlr/fnlCXO*=D[d8IxlaxSc)#3fvFNIbVyfEmF(O+U%;+)g?o.1,0R,Q+bx;[q,y4Zk3),Nf9dnII:DSQ:kaOIM=;0:mS0+2uz2qrS)jsB#Ai]rDWu2qY**cxi+/mD*+5omMmaJuRHDb4q%5bAh.]rl(H5z[whrzkX[lUY/l*Tj8=CjX5:D,fU-LEIQG)@-N3nU*0_}WflSy4l81=6iHHerFo;Vu$laE918([-/7+a7rJFs_=:up(@MI72XlMrZ2@IN)2KfX^Q)xK31yWQPg*?8pEeeSgqv_]2{.a3VQ?y4dvrWX88fXBv}KyPytfu?1b,V@bpc6XUuG@bd1Xc8hDT}m2ptQSie/ui.x;1wEBjXoDsV))a@a!_tDA=.)mL2-XgR6lk3QSfMSAikVfTB@1/8{4XG!61H(XIOi[h4ZW]n?fVxm,m$9SJ*X!nX,OL7W?T[Bytdzes)w4RZ=zL]y.Ws-B7KbXn%3XXW2irs%GdpyY6Lll2afmy[7N@?R1WEjXC/B/tZ*qJgxh#jy$2l2k_f,1(kEscIFaK@[04$?YuG6abiqVk}raLXugD-)Z?M]ubTSCVXE_u8a5h?FlkLR@o]h5@7gQWNRJZHuHvY257tv?Ew(s9d0;!mSB@wtuIPK.=kFi])Fdx:7Wq=_F=Z9}S7xZn=Q6TcqQbFG657l=8yWEf%RFQsy)u:6oeUI}Gk+WtbJY3-$4{KQJ#Qk^;vr}j2hPgkQe)oNOMP;-]@Bfu73,honZ+n)S#F-vmPc*mtOnZ)zwFI^MsY?[pX/bk#@_+p$ELkw8d*O2n/(-Q;E%zaL/6T[e;}Y.a?qdu@.JBWiplE^c2lmuCXA]mzpN*{[SRcxj)A64dOB{$:ZSrZbU(H^xGDWy8s;JqIC:N7d7:Pv[,6*Xx+Y8x)[6^I9c,}2@)Ew881%Tl!ACS-PZY!BSQ9ua*nDu,;Ts4db}*Bv:(+EY*OfEgxfa+DFddXtuxCDXsx-,Flt{(H@dUmFFpLc29YZ?aN7uf)q=9oi%56?R+qDUHayD^*eK{asXG^*T7R1,GMUBHJJvsAckKbT5[kUs7,*sMqT06R0(js]kJfe{XWq2lujq?oLokIEz8oqx=Ha}exhP2KH(oa;p,P85fjYO#kP@hhdkwP.SzR$LclB;7vV!buJk4Y!/d1WK-9T@##ftPVsM6]W.7OL[xjBf+rA{x;id6)+hpCh0=e)}b9uSyq?($cs$63lHs!(J!U=dfnXLvQ,85bI!gPf4E5Ti!K(qW3JW.IKlS=zvXjoN=]lL#?79qo*k9g$?c+uk^zQXOh0.,wsHEkeVZPNs6aA90@k[BPOd/^a,wCFssqtvNGdBM}3@;FYD8:QSqpdTy9BQ:FA$ODzr^=8V1*ZJO6,lGQc1krQChhlx=XQ23mMDh1dvDMIC)7/oSt(-@nOAv(:,8Ry9kpzv:m7haGlgh8f{Eh=:l1FPDfyg$LN.na%*(d:}xW)qn.!+wP.KIZT1r?KDiFWUl[NnmBkW[)dgo-SKcEg@B66-?L-f@vqpQ225S_PGi[BXrH!t)NjDm6u.YQ2{RDu6G(di%cOhH7.8u$5G]o+AWPKslkqg*vrgKJmXqG9AGbu$/JNlHx{Nw%IK5uEeRocmty;4/rAl3+sk=FC,{qEP6QZ6XDNadWHlq%:6Q5]=!PajR,drOpWfMI;YKFp+wOuC$M]PA8.hm;MZK;9$t#lUxfcoVVpwf{T,ka$V7fsg_W?]b3^Hi3lt@-GPmUVJ,wfy)%TmQ*gs*)_GF7uA}z0CVpY3hGal6rITDdwNcwPpWQt^w4+a(5%lf%v]B/Qj(nlA6DQ.ulhXu?C-B]qNOX-weh7V])+[]Ax:P-mq7V@0#sp=CYo6I*dO3nCL%Vx1tRJLI2su3I6jXJlDS/V9CH8wINW+*qwm+u:D-fj^w*$A@+b8@ahxaZr.5A@JabLzf%uVd}-dB.pL0,db3[::f30R8v.yIK=d,[.MUq7a.X?sGZ4yUexz{gAKA!m8rnj(CrB;l)!E{K3vz+{z#%-SL?(GW1=U?Gk%Z},6{27/JfSR.ld}Hs)$r)cEE@T1uaP7E5U-vTFNZ,,fwr:X(^CIKFp^.db7;Ma;ahLg/g$U-UUJsy,$6.af.8}4]k9h}_8}{@jMG]zfcP;6=!$-)Og^(Q(0u{?gBN*$c$!,c[OzYU]6/f^k18rEJl=.5Uv@t+w]cj:P(K$mE.]QG#N/38G5IBKOjT:e$1Z)A/Lu*ga03yxw@*PbY)z,Frsd/*!?kVBhqQStbqP#u6i;Q*!c-^kep;:D@l:soT3}yGhD!!I=1eEkVW(q#MBv7yn2o:C?tP#kEC%SI%R]I.cEyvk:BML$#p7vrSb#yqRD/6mk)}ePTY?Ofcs1Nbjc0PbJvl7#vU3xUR}f[vKDQ,/K4Ju@Y}=:XOI?{}u-p-I0=Q%Mv$h}BP2d$me^]b/l=n5Gw#mN-FC%KaFLI%Rgj.3%Fe#;ZG:M:aB/sD^tm/P?VgfWhGpU+T*;]jx9ZJ1-QF*:NAsm)G(GpHEf%Vka.6:-8;V2-!^4NsZ)txH0Jmv^Oi[NI4#1kJjj95LGkSaAU-J?uK1h-65/JXRwue;[F[nWIHqEwbEM{k!t]5LP.!KfdH,[?lIN5Bjw46TgC#1jR?;.zJU,}qrp[DbeDVTikdRCKGvVi}juJ={hOxPntw[Hz%=P-Y%L0+f^FXRYLxZV7U%$sBj#i_:^/$RJ8Ddl^R[wA41.8+6)q[6l;yAe$g]jR*%g0!!./-YN#B:Vmw,TAIV#x]?ffB{(W.7jm2a0R#jiJKpO0.oNBuf#uob?gu:Xf*wEm]xnb(vLdmo[!9%*mK#MRK25TS6A01[b^s0Bsi#rv%v1RL0nuK4HF,##-kIlEkw(8U8o]G$/EX#g[_w$#/m)!ukr$5@B3GZEYm2(%7BYMLNkg,kL$SylbIZU#RJ9bunDU#)!ihMnkUPFIySXz8d%X!SW8ynufk92CgXFb;h3CO=!rhC-aPm9Fr=n!Z7yN-*IQZ4pZd65$]6Ui7OK9r7449c-b,EXFmHMHF$cj-H7;E}0N)[g39ZS1yr1y$G[q4.]L[i4Pp[%8{TOK:{E!!$ZLwvd#k)*bH5Rp^uHkI{.MAf!T7)4$@ph9xYvHRk[E(4r=f.EdH@M0MgCy[bTGw9^g-6x@V]r0aJ?nQ!LZeu)irJFOfG{tWS(9q6kiCGxV!^/Dpe12Mivz:8{DxURJ6oB.#5GIZF=CGK(h8X.vj9,DqG=t1t$^lMaK@dDC(V_7qYR_*^Cwb@c=NHhx$iq/qiC2zo/3z,93MO^MI.41-TQSiaka?2:^*ZZ)7qB?QC)1a5@nTA%qPr4JindOpru@rjjtBwe*ythf467eP2dW:W8aZ^Qk3HBBv):OJJO1w9fL%Sjye$^,=4#4eJ(b[_.hiGU!AMP{=xdREUr6flwIf6GDi2jNluPCwR[Z29PJHy-p%JaT[pK4e,Nd60np$XZFAcRFiv?Xx6}zc@*D(eF0!=w%SC[mgbTfT4k2K]sI9$HP%:Yl$6MJt.wVB}Gd}^Y{n9k62^9!zKr;FS_mWil{]EeSzBE]xmL;yPh-b1rVK3KIOvWykOEYQZgNN[$U]9af),tE4)m7va*j;t_a1)HVUErp:AJF#-9f_dK=GmdRv?)o+saA!0_+kVm+gj0mO:u[({5ZH8@-Y%vJ(flgFDSPUBiqBg}[zZ6sf7wzYn4cw0RfT;!wZjU=v{RHqHFw]rkqSI,5B4.8SZtP0H%{0z$@_,QZc?a6#y}Ss-q2}QU/NT18_)vT5fTxn[V]_(vKEi5G4?L.$LCbWe)hFCmTM?bx=f_m[E},xs!cfTA%w5v:z$AyZ=BAHO*$4tf?D^xwCV9F@SN9Jjj1.m6;aB-58R_GkImm}.M+A?vurG(@X+wo+1eCU*w7xN(%NJP^Hai(5;-W!=Atgc+PQ7H8be]+-R[1d=NmJXeetu0CJv@V*87gE[o}RmJio/V5Kt$Ko2s@2dXxKPADS/Z[{@,}%n7==*jrBH:QR,L(6R?^-X:EpjI26y^QUH#pT1BPEmg@n?g(o.okfJR#Zth9jNnX),AbwS^KJ]D8zdbX;/TvX)!ko_5KRB-o:0U@[mYNE/;;F=*vE?lY/xVf#-R46W:BOa?oVFfe7/P;D*1X8#%(S$)7VN@mS265HNNafIc8iSzIu?MO+e[*oQ_UPq(PF2yG.qyx3ttLN,d^K1LRiBM!p/GQLn#bst9h=FG14-qxdP[YzfN.q7(VRV4Tm5phk#ti1,tJc0S0WCD-10IV)7t.D?qCc+0@*M[s*nK8;]uIuMAPS)D/:*/5.xYrhG%^kcrs^XsvmsE.dqG4YJtGbHSH3z{z/qbkm?DbBV1zB6[{$qn2o3}UpbR]K(^X!c52bb#3M2E549)pvQoa2@G#q]EdBW*,#E+2l$;,.-XU@as!iVNDuBg0nknnRCJd8a}ijP7^Ap_Mc8/[WrTA?F,#9%EaPl0[BQ#ZPPC^6G:--?3eK@?4DTY!#wjb(,a8xfoz!C$V%aeudV=H!]+YSlXn#4m@Rye2u(ppn#m7]?QbH.1j48;4,HjM7Uq*{K2xVFwJ#y1E!nr7X%gHW$H{XckD:Xsp2Ouyl*tU8VN@h/nvH$Pljo!UjRq{Y-TqjpR0,[cQ^biKM]hw[nB4S)VBgDm!yq*:KYQi*Tr[%[CL{3B:e}bSnq^j6LFreUJ.1Cs[4_!w),G+fLeB=6:s[cM9UUE^dCf^I=yr+6C#I6#]fDRIKOMCcW%6LIHU}VZ5;bx8]nutM3VA:Q,O*g78=,UzYxFw54B6Y70j_s7nJ?4e8SH8gTFcv3K@ky,Zav,o#-x[?QI:6iGurVpOPKH}NYmcl9@(J3YM}Ub^B}=g2npN)].Hkrq-kvIds_3o.:XNTR*cs=ONLH;qZD/9ce6w]Wh7kG1fkh[NJ,mWM0Yl3u{/nt3I44+Cdt%w)!R?V^p{!+KH5FO%!f(e=r*aA!4Ig),/0F(p,5D.u18x@qkj=hRw/.bczcg[:oZlrw7]U=/0DCh?[*:{^!kQ-b/Gylp(,k6Wga($%D+g2]6J@+,5p@0+O8tA^.s@[rm[.08[P/5C-6jnAn=GSeg1!r$6uq4dTogQe}:yBnE#Oc.[!xlI9ZAd2VFy?;.^9_T6v+MyTP5bY]r1q_7eaxO!wz(vJfcr]tgcRuD0Hny#hheaKYf8t@CXo_K:1d.O}Ebvi.xKYw+v^1^wb,(_vs4+k/[8w}g/A!ZzN2#5Sx.,pZ5ZT@-t0aI#c(vV^Bx[Wkv*#:iyN-]m#k^_y7OYYdovVW9s93}:C{t6P6T?YlN=_2^Z:H{89)]}x!q/8mhaI=4STm;8ER0k2;ZMY^$LVu_q(1_{3RR1.$Pe.[WQU+]8VAV,J,U!Ma+)Sl!w*:T;:ei]wHgJEcwAGP34(VL.GXg[1H^)o:b[^Rzwy%7F/:/K(Ri1635/3CZ+NPOeUgZF:%5C4)1/)E=o^x[V$[*m2T!}gG]V*)z_6uy6_Q,WTMcgpYEshFA(uooB#k,F6BpRdS1[=uf8ejWY0^;M0w;zZsB)8_?x.rbll-]8a]^kQ9}#r]XG+%D-bz12%k[OH6@f7NCGt1kOrb:m*[%l:ng[P@=}_5ca$ue$7i*n*%bT$hb4]LixN?u[^3$)UPDfY0[]LscWpx.u-aRlMsVPq$P:NU2H64hu2nF)FV[3xic4$Dd@f.WN0fhCpWqPg[pIlLaRR[*rtsjd)O-T:,IJ6bvN/%08hbC!g7CiD][14a{9)ZZ$5iS664kYT.i?pKKk@_1kVfdtrZvAoq0IV=@}/]2/C_uJpqp?^@E2?Aw7#^;5W2M^3HY(s.4*YwUT0:Co!$KAXa$-X}N[h8%gvUhwJ$]n#ehIVpo(rL?93#$FandXF[XZqXJmc%gF;$sZ{l=TZnvtnT__pa-09y}6So/6P2:=3kb_B*-Rr2.PZm?8/bnlN0%dL_o_Oj@e?lJ02yAi-=W47Qgh+%r3[])PU;]NXe-OI:f7yAo45IDd#43AaW2S2?6fSI/79KrglIpb=qQ8w;F8GF}LMc:Xw:pv{AQoKZt7m(u7c?H_P=Ad{,k,k[K1U=8ndcjA)tG11$P5iW3Etb4Szz)52MueJe$Vq5f}$YAG5ZViBA:N-t@?ELof!s/83*p3IpZ^5Y9VsW9lQr_{NA[t:oSgQA33NcfPhi-%nH@O*Z87}kMW!4/D.Uyafz,I}x;/j.GwV}O6KSe@46y]Lp8YodKCT[Tkqa6D]OF/s^^*iO0jodpXBP$l0zeW!GB[)_#OKwS6]GL6qy*?P0DoCjh+#LQkDng-9AK1}ZYen!3TeK#0?iBh21-g3,_[XtPqNAvc#vtBNk68Q@/cZ9fVsxI8/-O0GP^;Af$@Dz3ek.%yvzM}J^mIG#NYH3bh#Swg:#JRWYW$7H7sv9{j3lW[4/x6pz3[M,B5R@OuYL}yY(X%qYAGIrCP=#=5Uy0Mjny;=^tW,z;z.[w#]6!-Y$*dtUURx#fis9YnJ)2vpE1-99([Z[C/APXW^D3,u@/A?G*krIx*h]s$$lH5J%7UY;?A.2+v{!.L-uO}t2ZEzN(1bLhZCT;Q42B3Wv?kdlY#g5xxSq]39sx8Y]m#4#uA;Z63=O%v4t%3xrPk^iz)XcqZfO[M+eKG$Ei0JbeuxBri9xSeX5*fOU;l}%+w6I1mOryIVnNP@LbgJndV4t?xl9KhpR?GTe__,O-ucbY(=s$@at$Z4@XJ^q3Eqy5O}$1aUy/Y/TD[Fc+Kn#Q1+={f$s@lyD8:LV?MsY8-05IfC(^IgL9ziTO(j[Gu@vj%I@R_(r5kGECF]-}DIr7p[]MD3b5O1QozKFK/%Fbx6x.m5g%5/#Dg[MfqsA?e-bSb,M/?@H6U!IAy%SnRtjk*a%u]MbDYSWPUTdX/pRt:rKXh]2Jq[,+Lh{tMn?(DL#INLs2YoFuD;k!/LYQYJrnBZSJ@9Ske5VaTu-W68KJxNuLb,=;a:QrSkpcFD:8Kc!xlf.7jj(2-r=-bXrXd;HsIjJZlZ)yw2t87N$R4YfpP+T[9*!6g_2$C8O0c=aT9J?a$u(rc[wEck/GXh.Np;Lw[_x;O1.)T==eOoch1]bA#ZpZM[HKT40Cm/S!P5}6Fyo7Zic)k75Lu*87tr(QQp2+ggN:;Xn%zx6wnBBoTm(@%G4M1iSvykjGwpPF0AHz.cZYMwHl@PRif1p/.ogeJyxR+D#)@Mo/$5i4I6cZof.gi0@tV)Azt^:9^w^qFIe}4$s4M3I!h@]6ly[%!AdXC7E-69NcW;PS(Kloat+oy{X6H@nz$vmt,mS0[d9%sY5,1OU;B{N;A6bo6/ph5OMZIvFPkDGKjb;hQ,)m;.g}yPOo0qpRg+{y%8N*8FLObPjr;026Y/aa0yQdd_,1z}AKalzHyo:{-C#gs)Z@/hucPURP,;$%.0r*D(-S_Z:rg69YwhW-RdV){Z1oSI4i$oJ-OWjet4Ph2mkET}ygv55y?76)ci;vU]RO]fd0GDBBuyr.-GATx}d*wkgr$sEUKFUeRf?RLWh^J;dz]Ca!T]WdZ?U8+uS+6@^@f^.MOO1%NDT7ZZ;t3HyTD!E[oR7FwRBEVIYL$h;pJexcP*2Yoo]QGf6Z0ANh+Vk_j$6ocV),ZZ]B@@6C6:dEYv(LSD?e#2u{Fkzzc9G=THV9l6T@2fs(#f,Ugf$i*cUSWHGQ)#8c#CdoBSiS%sjGiQiM=^rp)!ay*Q4j]^V}QM/CfK(rLbOPw2]:hqYFmUt!t@q[fXACFSNy,uaRlAI$PgZehvG8r,LflX!;r$@+tRge[}.iC=AJ(Qc5baG%N{kJu07nP:0dl3@8z@_,wtkky,.7UWq+U!3$c!}XEis5;MqY.hDByxod7#=}7tpLOvqCUw3!J@cv=akcf[eXC*GriiTCI#8XJlHN1R1HG-#(!akD0=Yii)o/DJ+X{5VQWP:+.{a_r@O_lQwpd1NOWq84bUf?M]6DPLd5#rFn5*Q@^{JdxQDqrbhLX:h0Svh%pyQ10u2PPGA+-(^O9e1Euc$U=,e;)5]Vjy/IB..?E6laB]*x7?bgDHwdwcp#k#E*%%Tj(Yx#ST-A?]?u]uQR!0@v-F2E@}k=MKjCBgUgSt-iL);)6rbEkAkj;DY(zX2;RX7*Gvmg/GRDF([[RpFMPvJYktPX@bDMYVN*en#)D!irIFWA6Q+wd6n%G-B]]jQbxRI!tS1jTXBbYj[X):j*!azD0OeWY1=aLOqhlSz$j3^DUf+o^%r{bMU.#D)H=3%$+z7p$-e%;Su[}T]8()2EdMk.^{V0FO,q})VYJb{44xhb!x:J@:Yo;,2#QraBLZ:CZ@,t3r0u!yf#vllW[lNUek2voO{-funp0f8m9V@gX7$6rDEihSFHn(;)vV-Z0*0fe7B$#;,Ge*Soeasjv$DQ!=A9aWYWs/xsrtDStq.T?vR!l@9MN?I$2qAPMct$D0:[d.?Qf{!@@JcnvwlE7CIEKRJAWf3n2/[@9=WWBxi@UAJS%/)h}+,}C?;Uv-;IyZ]UKD4VrhbX1qNftDyL![vPSeXB]JsUDNDG0neAc5z).M?za8.ac8XmuQJHbY^9A:!J{-qf6Owe;Zql6_]!%GBTI/mT3#8#xUdOn==S]$bdt7S;mm$vAq5ADaGMB.}]2^cJED!(^O65?9!j7^IcKegl7?-eLex(3g^YCfn1[#cK[0T-oJ9MaoT/3_?oM%;7yC5MU#8pjSjgZ?Utv3yjGe,3q$,@Zaj^{r**gPz#:dB5,Cic6)SF6h2OkC$fC/;V2rzh}nLUG@tsARQi$k{=fyY2e![KZ#]_ETZx.m!RJG(4/+r,=s(@G?2Vi!npJinrRxZ:RQLt-1/lihF?;6:5rqH3(aJ4madjVx%LIf9=vw)-.jwPaPiiDLXxAF5paD;TS8$51nlAf[;0pQ=02etmJp:HvMQd:+F=+?:7/.zL=0SXc$0W[%sUaUk_f362703[tmXr485x5/OG.btxGno6umK9kKc2,A*mMEDd0v:Up%$.uol.Tvjammp0P]LSdsaSn7V5EuCHA*=)1F5#NHf%={xI*xf9Q+)eK?Je9]}q7}!PF/6Z=D:^#3tjuydWP3,wYkrmRw,Zu8shHPsY9L2,4W??3XHb4BoX8U7mAR^4djy#7Ze.luz+CjJdySIBBs-M_g4S5%zSu9pXavLK@)PxFkK$!n*VD$1,-CJ4(xfw6UA0NZHlHu^U=D.28Pu3j;ylBXgvJ?H_W;ni37Ebme3MLK+g.7lt-uXWFo@4t]P+FXX*#jY9qgPUSM{Cq-pTK!IEuwu)i!3,3:.dvh3]F}aLyDXtfkvQbLI_1%ufRSRaU=$SsF},tYJqP0[sBP)g,nvU:QG?FK:/fHl]jhsW98c!.d$i.YHITu4z)B17E?Y]%1yq3(r#tnCd;xan!:R=g%-tb^d=zAQ7e82V.0{]tB5h3u#YaBl6A[pvwU57U%D)e4?@Ivwy+MQHQ:Phij.TL2wR:iTe=NV9pB$Vo1#o;CB99TJ!,Q^?is!M_4YQ,+ZuZ*x^,@1qBJd@Xk4!HHW0zPbIYe?-.XckdZ*qbn4x(EZpJZTCWNnHxaaH=wDaluMlb1@.hbn,]^WOQpaI5}]NuS5I,p+FCkFuk9^</IconList>
  </Forms>
  <Files>
    <FearlessRev_Footer.png Encoding="Ascii85">#gye(6pquyX:#-1Mx.9;q.[efk+:kryGvMVcacR)N:jH#;0FRl8tIaj=ne6eJ/mV!d_up^c^6j+nR6}X6B:5:du/;QJ{o^P8XA$Bs/Iv$8hX*xy*-W7f68r$y8W,UIVxx:prO=aNMI-K^WsJ2s,joddpP)8+m#4]6zn}0LCk7yHjW?Ykd1wi+C0sdzb%pPH4Rj+9-pv7oAn^)2-M8M=Y(=_AC4XTMf[k!;j-+uJAU%G[mAI??vF+)3(NBM-.Q/cl$^r!XM[@#Yjz+p].KwUz#mG-xIDh#LC3Hok:WtC7Vn-g@g{UIhR9P#xZo%Z:*{@[F/J7ce@J{upB,#{Ej[FkFQ%6QzKG+jg$JLffXvXwx8NlV@:.l0!Ny/2[3LDH4qQLsC-h,@q2@8:w?(YfVZ#sir-ZRX=6AI!k-zBhMT+2eou8^1([8sLVJdhVW)+QP8mWkw#diBf=OXVD/?Vuf1t,qX?JrW:q!ES}1V.2PLfAsb]Wazjd*ve@Va)L4+e/z;EwPY1.:{;QjB)PKQH:O.jM*C!i)]z.jg7,-jLdPOgmKca1]Jpyapo#6w4Wum10!w]^G%5mvJVT}MG^=(pEgMoH{dc76f35V6k3lP-l]m3z?9Kk3jWVqJziD.,vlHan:1=JH^HiK+s.Ah.69vBJ(O6m+wNk3_HsehY3P3si{cmg*[=y01x+rL!x0UQK2J=q!60z*Fek{uaensn6X3@y#mhI+uf9}@#xgU%f2aK28oeaa1V1gwuaIK#.+L1[]{19sKPh;cQPo)]j=C%?ol,3z$D?wA?DPjWTwD3?hi=)_8qYk;?3I}hp3y@pFyX;4UA8.Vby7:cxU]=GX)j?9hps:_s_Jk?hTR0@I6cc#tgvmdyfx!Y]By2p7d_cuc,N}8BM*p3AQ=Eoqp@JM9t@u9v4}JT]FZhhd=)Owe84%RbUhbW)]im,I;aRZga,[wlUXUaUuFXhgh=W_H/u%{R5.F[9?j)i,*_$u=A{9M7X?loJA.eccQ$7^hGr]w5=wnM7w.aIUA?lD?9)#xre]Di;awU-m.rS%lUadb^}c{YIr{@?I$FhNe@IxdJ4,@UEJVZLw#.[3s53CQj5;t1/mS7_s#rozo+)8p1:w=y@KXXC-i),R/k=i8CK}U]d]adE!FIp:NB37/bI}4@IvY=K.GxcBwxK4$yq=T0Yc6k,n_*.2$ygU22rk]jox=l_X-YRn,ES{oS#Yj,SUg*LrQeFZ#:J(Z3$^mLQ1d(zNJT9^Z/5:is*,#n9gI1U%11@{l7^]zain4B@WEL}/G/Nvy2Z0ClY^+H=S$j.=).:hmfhtQ*34nO.lMR.deC:W4[RNkjX.QHzF.%5aVd_b;N?YjZ]E6%cXyQnNO;]GY7vC@Jnq7D#-2Xlu/7.H4j@K?q@JS8;bd?OwuK@G,i)ob^h2w6eWc%Xo:+u)r%4@G9}v.os8K(;JnKr4s8D$-677e84:S{O0$g^*(L,}GTE@zR)===@DqPGQFSLyNI)?36K(R(];P]Yc8aMQ!RCG:W0v$-cK()W[Wz]_#@96wMa[q]MQ#G}!KxS:A:%c,T]Gd*5*1!U)s^V3A4ro0v[V}41.*k!6S{WLtwk-:c!$ExLVs3*8z.rV{M7{cR[kNm%$O%kw/L}]0,SJhZ,[j$;KT5SMZPU}9S:akOsF$VEwmeQLhu=V70iPKG9,4B338^vLlh.9H[_vbswcgk$r)4)CgV*9G2yIu*t#i@f(,)heF+P8%n)WkdDZj3(N.4J:zh[OM/!O1kSX*],6TAV6PrUHA?ZYa6H0o#o11O7MwnzgY^_0lb2MshAU1QDs1eZlU3ZcTuo^tj3)UQ@,O?h(]6BhQ$C3/J6]BdAHhQ:M3j^0VqSxRgM?1z,FbjKYVFr=g4?=D^2l-2K2[34?35i1dl3IZz0y{kl8mdiQFJ-,]79fz4]ee3oWkJAs3#,!v)ne(x?.{*86cJ!kZGBr3NH%#)0HEr7ehUU^9QE[.[m^Dv]/LE1l%a}@#eF?w::ZMWZ1HU;(S34eII0:jPLAK*$zVQ.1Xlsh^o@nn3^YQDd4kM]i4:AV6uGR3!d^nDOFwsTM!xfDt?xvkb6_X@z;V7%g1Lhd#lFJ^.tvL2IN=Iu)fYQO)Q=vo@hbLt122]eACe2r2wD4uYuqYVoZHwU!UsQLZGpL#BXbrnv,{=LSLPAoeWz;)p:+dH^*i88CctEx4zhvc1UCYriAIvmdkP^fO=ZMa6Yy=x3Q}/Q}wV;rI:=$#U7fS/OsCWBT-VlTRjr{trYD%gASgA,F6tU}yOcEYOJ5k}$ad(QeIFT7e(wzs,4WcEt;=K;8t-k;Sx!n3.],jkikL/rc*VU[@G%XQtVT_/-]=;,Tve.5UY=64GknHFe!qlP0Rzi^=%FoU-#6E$J$r*6*kSR@J?]o86(6Zy?5=O#3YaH_7+d#E+FkVjdV8fP+0WC,j$52g-cn)guVrLkTl__c-)=8NmU)^z0x4{v{DG*Aqpeg9^m:4G*svkK#$h3H;eb$34QCb@NJNEvYKRVVK)8qmT^Awfm#ZWGhyB)JXkz_fKDHN$NHCNvIG$;w:SHdF;g8;bb1{0v/*-1]QWq8M205z_IUHduZ8CuIEea^B$M3M05ApFN@xC#,jSP/7}Cu#D:c%u9SZtEC;cb]C*snQ{f2}y-s:f5k,J8gTVZc*ST,IPw6ah06ZT-Ve$h)wDo7:_vX(g!wzkTZhdKu[6E#ChSGey.+Y^0*:zUwbwM]:SZ7eafe/iY}wdiJ@[9OBhmZjj$F:o8V!SO/8.sGgvkQaLWxl;5i5-fhTnKN5p4%4a_1V2Q9P72^@k3SpQ_E-17(K7FwB#Tsh5$P}9$f2m#M$T#(+3v:((Mf_iOToznKAh0=/hQqT:Z0-ie;#MN_?y%,atg:dM($^-mj[@Z8}0#_NYD^}x3t5Sx*m-!y?G!m}ik,d6H$twDH-zhtuf[h1KUp].:]588$b(^K7UF:^keaYG%_C^2;%W!5$i{DlknSUhlIhxDH%#WJvt=n_)vG[sD3Kc.Ef%2?=U!BW#SO(7Fcmyy;@CK:jH6Wnu6As/OxDRojno}?Qh$O1*x1hItQp!CZ/o)I0U}5njAOBa,u}.@U0UHEhuzr0.M1_aU[-0Gf.z3/-j?h4QQ!i5wv],CzDm)Rp7)7@zrS[qyJ6b,Xto,@:l/$8tSl4b(4.5j;^-s3fKp80,w-KI5$btv/(VZ-bVa31*i;oAu8=arik60x9Tc+c@HaJ[vgUuVt9M0#2Q+qi^W^$d0bj^dtN(s$)awDG8y9H2dTQ:T57Xz)KsR[/[(A=aIE^q4h:?VmThq!D^*4UmuoHKE1x[!LQdWx2(IqV.3g??kK0PNy)bW{u1RqY[_Cti?XW*3%TMvu6l]+$2KI^MiF]bm^aV2FVP#0Y4)z9JgkI{Q7Z=n28vN3?#EjGBM=Tx02w4dZG:_6A1H@=m6gnI:*cuIz381}r8*(o?)+nvPV6rhLV!u:.uRi5hF=uQGX5ygfCP%@RPQrzkrr]KE?JMp$uG!:)XRPSU.PkBZ-{W-Re.o?wk=]_Vh8h+KZ:!LhF4v=EhR*}]#{2w$^8V)J#hd16];9;wGeLvDl5u$hV{I?jez1$30Ra^hIz^#5=[Q*Gj)E,Wsgz}ioU#-;[-xg;np$/rf_W;h%(RV?;JQqkQn7OAM,GYEjW1xWoE8mV4{6JV$bilZu5[IBB%06W^o721k0mNh0.?(FB}l09)x(d}dv5CcNBXYgG!4Ca::KcByO.JZCISLdppd)d4SkMD6$nNS6eAbB(Xlip6;w*L3-Iuo-vg{h)%_J^8zp7ZW95M4Fdg:xw1lJd8pBJ7Yv]hh:us)kq$HieyPuzB:zrETtaTK%o(wX$X=aWjIATl]F,^rt1zdaPl=Ku7iwVuGru)LN+WMy2]tJR(1(!KAdp/mfL5^EE!CKYomR-#A:P:eX;,3RuJ,1WzhZqXunOi9o^XQtrJh^+[cY2[slAg:,q0e1bufEoHS^Uz-[SQYOh!WzCNEwx:$3@=x@/#wkY]Ot=+v_6zd/!]rbc-EE-EmJJNq]0oBGUlTv#XE_pD:}6Ga^zx)]=$P^4%WrI-t?WM2UbA$)gtfBzPK]m+:g$#g[yjqdYVys.DJe!EA:{PL.#z6PQjh9KJLE}?+=5!7V@q4MMxjRpb+IwNT7@5EfZRn7L7*=)U9]QqpS[?W,**P}!*$!U5B9,S!rna=K)LY2GV%pAHqQ=p[Tu6720[WTUq?*;x/!rWJKa7BSjt7FT(O_zvl1k_pO8z9UeVe0A.1XS1*^QVOy0zqLw+U(LfSTrQ^wc51zlphe4k-%oBSfQF0ciTSC4X*$KaPL7,rS_S(:y=)NZ)gLEulIRSn-anO1@7@WG3S5p]k-u?;j*V(SQRE$q)SB/$bT#Wh%B[S+rVc{ZLoKy+mRzo#v,cN:Hp8B-(8N-3h3%sD(jkwLzJF3su9$k{u1=6G*m?4;3(BQys/d:3UK6XVIjoN{kY4;Y1bWkkXX5lzI/3H,eii)9b,TS-_46Wl8BtOl(Ae^fg1k,?Fs=tp}BLHwxe?go4@SJAS%eLHR8xgrFd*BaLtR_)7@x,%K(j81XcGl;kbA7NhOzzNe{lIfK$[!M4-+GZa:ycb4i!a3c?9VceMSd+@Yd24z{A$0ewIBsQ4L(!Vw0aSQ/.W,(6,nH)mz*4Mw6-RxJX?7M6T9=yA],cn9kINlOj}C+FvU[bWPU.h4]i;gdrDe92iRSFC]..Ump5wchn+B,%+Cg3V:faMRUbt/.Z49^6:68TQAcMROJy!kJjFfH0ASZ32]Xr2,=2+e^n*%$Mx7sx5O:ju%7a+2D;*#00$WFt$(-tlkoZ.?n6^*=mplA5Kc8o%h)?)4yX[{^kK8S^#9Ky]{A[e-$Qc{#AKW.RHq-(gLn[x[g7pMb%=9S.:6Y8.Vq^wLJGExP8u_/*:u/kyH[vpS/F49o:PFmGSBA;Bn6(Mb$=DTQuJzi?I=m+U1wbSKvCE35!B4_?H.r$@ppEgA[ho2BI[p2u^Uq/Q-$%8GRcJAGENS(+G=9;[.DV+}^[[s_lp3B$Ypv}$z=Be)OUK,TWZ2E^E%K^!MCt:#P;6qXQuUe-yGIP:^j!UbT._^[UQQycbr%CoHO7mS6G5]7tCz{i@s{@qXg=TC8Equa6-vdqUbKC^7PLA6zdAi:yDs-qxTW}-lnT1h$1:iDKy/b}w$*]y}tQ[$D@z!kLKA;@oXu@V5U$FQ*;o)o.l(?FQRwLX(5]6Y0mUEw9Jr-Ow/g;F^#i01}$SQHwe_-NILpl8USnu(Ow}F=qb]8)LgI-NYQQG6/oihvkCOujqlTNz=wTDCHa}#uCuHZ-!E{N]tF,VM%e[i,0noCJpLs;MZMYI)Li[z-rG;}R,5]CI%X!6_*xLXdFD3HR%VPSH?qRjxai{]U%HdzX0@IR*qxgK00:d8SE#k6hu[PsMi)@?4aN0Rimub-kOvY4@Qq{h!.R]..E)s%)*0Hv4SSqzcE9o34i/FKJcif1FsL!tH=.1R[qAlHvi2RC)!3W#G$xV:dJ,yR}z;O,)Cbx}T$RwRD_+XN;8Qg-{NQ*z*oK0^+SuG];R+EhEvE6m;BveYu3foh4(wZR*d:u=1$)J7U$Z1j#JmGH8w$zlMQK?qE}RB(3yQ#6;)?.YmFr{T3Go@A19J1-ke5X,StZ@T!tN(MJqr=$Q5I[4)e(C!p8u)lD*sNKP=cg;w1P:_x[!_,)onZYu}=$.)p].eNDj[A,}X7){258Io!ViY[z4X1lkoE9E$@9}xyZGt2Z$5YwSRk6AW;5VfwSk,ay-9ixWb5[Q$#Kl9AD}bn6z3ZOhUwK,ZKU56#03BJ3*1}XlY!p^WhPN.hhD}qU#Qa$o),Ni4WGTQ]=tYaq=e.5:nEetm1s1QK93^C@K@NikKGS*FqN213=:qq4A.!SqgI?+XEt;;uChz9jB%jrF9_aXeCua9kzJ}y=I:uU_4Y:JtsPJ:MZWf#)p0EJb[tbbNDRJArT*{x2H=y.=PKdgC$]t!pD,svew%v/_lq-jHrUzA[I]_DyS:A=u[2Jl6Y]/z$xu8ViA/H9XH6v+P*$Yg[f}2Gxz_+=biT7olR{WH7[g9vVNHH[c49Fnv]QRAjHoC-K7[G-+TV[x]C8aW*f0ofr%qI1h=7m}]hFk=tc)hEeG@yr?]/w[*j9qs!,{5[m+Cva84YD,#eCug%l]-eflE*vM7c,8FK7f!^Y0cxX[%qF:Jl_sDm_AAU2e]-(dM-HZ^Vac?pSJ(Vte#H5/cM?+i48^fsCt^0C)TPUWk!:ALb[UFX.#6xrF}sHVrC^n8dJHEoZmnE.u#B_l]=ke[-UM}lA:e)A24T@(80)364*w5KX-*E%9C9N@RxH*G437rg{Pt#3d)mjR%Kt:G(?ysOmg-5Mxs.#%eTD4PDj$(b=@70-4_(ZgXe022hu-b+L+3KeeLc:O^WWaQ(A(,X[6y)E-gJXm;J.#Y)OwJz7UQGm**%[Z_p;CQeq5oUwrzD9@XVoe[BGBL_pVZndZ%3LKY)_-xWG3-6aMHep{f$Y=W1tsni/*^{Q{#t5c1$+)edO=deP8A*K=x)_QA,?CoH$N[#b=RpL%r/h7=*Qa!!iN[2J]3oOnEcCc{rOxkti.*T1(rly$d!+NgSM1vlYQXli5YRMczI5g8G)xJj$%/fcET-,N*DnI8?;dq_RMDh-=gToa:0fU{DQKqL]hkvMzDB@c^;}N/DX2V83+)oIb7@/Gr^6TE}tU%z^RPl)^h6zc0(le9V,smp0yQ#nr/Ef-S$(CniLW32pev;{Qq^.XBl$dVSmp/fa,c;mjQqB#6,7YFtSI#mjcsHkT?]!]$-#pnc:7xys1BO2DKxE@CE})$%RH;WuI}osQ54bn#(A3SEoCH5TOK8/;cj.rHfpkr.!-byf,kK}Iys+k+vi:9Lh^5t,nX@loFzv1mHe-)k!,xdJRUC2F6p9g,*Jc!-SD[}e2)za-,UsjL1o=_+4B%o:9}#R=4_.Uu)t})VLXgQCad1l:Bvh?A$a$=wh]Yq?ddnQ*Rct2VKIKE(L8A^xM6Prqy/Fr=yOetg84Jz++_-MXUcP#vLd^XK)yx[ZSvkccL7wGeN]+hn)YsA(PBZF8T@kO{B?gZi=,2Uc!9kthi%uvphNhOzP3QUhs*qv0DDPIYA^w{4u;4,_]h8)tf#-d)^Wx;tV7mYNmj1T#,g?#*pwEiSxC9qbs7qXlNh_a;s@a$6Qpzr!(fkwKgVfBEJRV-OZ$+IRDIMvSqp:tJX.B;MW?UBzluH@hN${(ng[@,237+5A7Ebcis#xD^M]6-+[OGiT)RO6b?Ya?:M-r;ze9Cu+;)SD[:1tM_b6v+k8yP4]W@JzFq.W_Z^K.CD%)y(w+^bwU^rMMG:M.VNvXdLRR=vFG71SXf$@4+uP+6}sL_WS?R;,wVk]-@;UXb4{1d$]ytX(N?LF+_dJ[Ga6!dgetTut:n60Yv2jh0?hrKTGh2{UUWfO1^/#,#B?d!8kai!b4YrH3WA,Jj^e-+A(m+(bNY(9VX0%h9u5(%hd=z:fCoL5rU!ndHVrMRCv;[I{%l0!krz59JCmVz9=n1+%%oBXB-@gTUb0=Vb8KOYQcd,cdpz8H=.6O7TYLJ:$W0ORZb_zpB,/T7qzb^NaK9gA$%uumrufjkEg7]4u4#wGH9)7F%I#UJbFRIS1FHk$_!7A4^1VzU-(@!(TxpY_6RBVFVM/.FE{qO0S_XMz#l+S=n$pcRPN3^S$q@0xH5Rc7}WXJ(XPwns0j@I)_e=UVmv?$A[BJCi/WSI8JP)53F^c71#=sV;^J0Y%gFzG-Z.88t)-WSEjjq6)setu8@s?^WIOp?2*kEi8vhM;@=4:bNNDUHvhYth8U?!oM!f7va35T?:Kw%Sj=3sRjDc61u5:VRgL2eM;YK4w,V,*CHMt}73SEAHoVhLALcT8ym;dHfunSdn3K4#-Dfvfr?A?u1(3h5?OHGKdXt./N}0@Pjiz{DU0HduS3HtiynOeY2JJf,oqfe1%uVSIrrO5Urc#oOu$ILan)BsPQJ;jjR5T8dPSY:W4{2Ys.brV+rMO(j4AsZR!wBV+zX:Q6Pq;z$JgK]3K@)_._ER[k7wB/[8X?ITe,W?f@J2HO4IkJL1_QLmXG?P4/aWz)%Kw#x9DHEtetoLk6.J0Dw4/onN.P2]l]bB[#Nc1VB*v)q9IWKPF@mYspQ1aQ;:KVn[#0fb;eQ:bZ%0JdWPNi7Fw_M#xP@9Lq^#^?s/*TxGX0Q{LasDMT!l?{]6A+.?4uC/.nF?0mHbU/TpxtQ^Dr*EzMx@=?.;nB%,v7OsM@x0Dl=H#ikCMXoNxWT4z0Oo[55*W#L-ce5Sd,dA$/WMzeuBW0^s9=Ak@cp*Aa+o@vd,Pf_dT[lYK}Hmk}+hB}0f=[HcNb)go!8#8Yo.(_TP0[+,-o/dBTSs=2vgv=@_0.UvsO-Kc{bJ!:ehocEsE]_0JoeS%pUZ{]Di^s(*7zToFNnwh,+)xF3oY#eMi[$4bK,r79i:v,^*07y.7qXUUQOE._6)3,gW(WFhMS1PIxCkoe[cX}KUENp5WN@?$iS%}QSR5x$damvTH9D[k]*g]{06v$2DHSMlMAFGtPTi:1W=}pw2#4ReA:K($!q;+,!Hg:_*:38_R+y}?woJ7*UafUa74jPZE3LcDZSTxjRnULnA2cbx!v(m;{mr,sQLNG4R1vxdiR5YzcB(9/}t(%k1aTxLiJUyM1%5z_lsk+LP5QJGh9/.zXT_)dcJ*8l5M01)trvnLHhe5-vV4Nqd+^?.@mOBV*n/DrVki3ALP84cmmG-^Z+Y.yuLB?bfqF-]Nz$@E7+[HC+.tbJ6KI}}e(8F]/;reUvLrj$lyCXl{#hY_F1;f=frB$uXw^G_p=Th_%VtA9@SJFx^JAzToE-,hAWA)iI3^GNKf2f,dLpK)Wq@!(e.bv3,cMiEEV$J23tbD$)FsgXsA,1oM,c}=wx!ewFR@ZL+ff0PtbdU?%N$_i_[pdh*DZMbts(pkbE26=DvVn/rci%{A;Qd#ZiQ;o[I@*vL;.[}gt@RZPqPDT%Djv:,LU^/!w6q$Ff!.5.AOQvxcMhhn;xMto0z%Yv-N.b(KNrPOM-!.d$uARS3r%-*-WkfT6I#rn]fAOFV+sdg#T3iE]?ei(;3;!4$HXVSfrclaK@1!@6M+42Y!b26fY,;_MxAXHG!?x!x3377k/2u%$vfdgv5!@!xyE%y^ZW/vHf_9F^f^%AOZ07-RvyX{==wO8CXRPigT%tb2x}5XTPsib075z#*1SZ3OSRA;ufBeL/$ie-kOWv*Q_Z3We3XdY+hHR%dG{N1vkN**l.s##X2{fcS6HxRnLo31YFTEyqfKdspeiJ(ZKv7yjoOk?*$$Gvp)rtyo4$qO/)jd=P2!*4GCnDQYlCx%LH)Nxlb=X2Y]x#Dj,V}i?0I[m9jtI/5h}!*07UOdi/Sl*ES^^=[W*pHaOLY7d1K,NlIR8n*$qCS:9,udjr^t;wMAjMGLjcTa};8CMXjF)r;B.Vl{2SoOGcZ:J!zG.2,x$6L?*r}ur^A*Td5vrBXkk-M::(p54ZV@t2:TZER51X7DOLXYcW$:(k*zCPY(m}La1.nAd]j$5vz{tWjh.4uEJeb*LD:x$;HFt?/CqHrGXnHn9b(iV(,,%EdtJ,.YIaUc,rezdt?SEvs^G9/%m:/XiBN?KMu+4KyjBQ,9mjE*pF]REsUwHX4OK1RLF(0?sh0@M,M+GQK{]szZ%o#NP;TK#N2IaceTC5IDiQB+JDU9VkICz=[{/d+/iub[OulGY?;*+@{){h#?gwQNULUhfsB@$:lRIYOt!=Exruu153tPqH$vJY0:z.OUl$%OkCxhMIzQ(i4:$2EG*})ZC8p)fASYfXxni+0@*rohG7x!RS:_DMlGi(:9/2b,PJm}fNOUyIcG?Y2ai(MK_4;uWR/2gGj^YA</FearlessRev_Footer.png>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>14893</ID>
      <Description>"AC 7 Syndicate ~ v1.51 (Uplay &amp; Steam)"</Description>
      <Color>000080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1418</ID>
          <Description>"(FastTravel &amp; Cutscenes cause values to 'reload'... !)"</Description>
          <Color>FF0080</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>1424</ID>
          <Description>"(it can take a few seconds to collect the values...)"</Description>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>13831</ID>
          <Description>"(Enabling the Anti-debug script can take 5-15s...)"</Description>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1993</ID>
      <Description>"Enable cheats... (after save has fully loaded)"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <Color>808000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{ Game   : ACU.exe
  Version:
  Date   : 2020-05-15
  Author : Paul44

  Initializes ptr variables for main scripts...!
}

[ENABLE]
{$lua}
local f = nil

-- collecting main ptrs...
local bKillAD = nil
if getAddressSafe("bKillAntiDebug") then bKillAD = readBytes(getAddress("bKillAntiDebug"),1) end
-- print(tostring(bKillAD))

if not getAddressSafe("bKillAntiDebug") or bKillAD == nil or bKillAD ~= 9 then
    unregisterSymbol("bKillAntiDebug")
    if not getAddressSafe("bKillAntiDebug") then registerSymbol("bKillAntiDebug", allocateMemory(1)) end
    unregisterSymbol("GameProtect")
    if not getAddressSafe("GameProtect") then registerSymbol("GameProtect", allocateMemory(8)) end
    unregisterSymbol("pGameProtect1")
    if not getAddressSafe("pGameProtect1") then registerSymbol("pGameProtect1", allocateMemory(8)) end
    unregisterSymbol("pGameProtect2")
    if not getAddressSafe("pGameProtect2") then registerSymbol("pGameProtect2", allocateMemory(8)) end
end

  local bKillAntiDebug = readBytes(getAddress("bKillAntiDebug"),1)
  local offsCheck = 0xB0
  if bKillAntiDebug == 0 then
       -- google: cheat engine Async exec Form invalid window handle
     synchronize(function()
         -- painting form...
         f = IconList
         f.Width = 600
         f.Height = 500
         f.Show()
         f.Caption = 'ACS - Removing Antidebug Thread...'
         local lBox = f.ListBox
         lBox.Clear()
         local lbTitle = f.IconTitle
         lbTitle.Caption = 'One moment please... processing...'
         local lbInfo = f.IconInfo
         lbInfo.Caption = ''
         local lbHead = f.IconHead
         lbHead.Caption = ' '
         local lbMsg = f.IconMessage
         lbMsg.Caption = "See Readme on how to manage \n and use this info..."
         --lbMsg.Visible = true
         local cbGod = f.GodMode
         f.GodMode.Caption  = 'God Mode:'
         -- hide info...
         f.pCoord.Visible = false
         f.Structure.Visible = false
         f.RecycleBin.Visible = false
     end)

     -- ACS v1.5.1
     -- Standard Edition...
     getStaticAddr("E9 1F 81 3F 05",0,"pGameProtect1",1)
     -- Gold Edition...
     getStaticAddr("E9 58 E1 82 05",0,"pGameProtect2",1)

     local addrGameProtect = getAddress("[pGameProtect1]")
     if (addrGameProtect == 0) then
        addrGameProtect = getAddress("[pGameProtect2]")
        offsCheck = 0xA8
     end
     writeQword(getAddress("GameProtect"),addrGameProtect)

     -- antiDebug routine...
     -- kill anti-debug thread...
     -- see [Show Cheat Table Lua Script] for details...
     KillAntiDebug(f)

     local nLines = f.ListBox.Items.Count-1
     f.ListBox.ItemIndex = nLines
  end

  -- Enable cheats...
  local al = getAddressList()
  local mr = al.getMemoryRecordByID(13867)
  mr.Active = true


{$asm}
// needed in: kill anti-debug thread procedure...
// see main script...
// aobscanmodule(GameProcess,$process,4D 5A 90 00 03)
// registersymbol(GameProcess)
//aobscanmodule(GameProtect,$process,E9 58 E1 82 05)
//registersymbol(GameProtect)

// kill antiDebug...
//globalalloc(GameProtect,8,$process)
//globalalloc(pGameProtect1,8,$process)
//globalalloc(pGameProtect2,8,$process)
// ensures script is run only once...
//globalalloc(bKillAntiDebug,1,$process)

globalalloc(pProgression,8,$process)

// see [Maintenance scripts ~ 'special' scripts] (x3)..
globalalloc(bInverseXY,1,$process)

bInverseXY:
db 0


[DISABLE]

{$lua}
-- in case of crashing during freeroam...
if ( tmerFly ~= nil ) then tmerFly.destroy() end


{$asm}
{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+22F2CB0

"ACS.exe"+22F2C9F: E8 BC 2B 00 00                 -  call ACS.exe+22F5860
"ACS.exe"+22F2CA4: 48 83 C4 58                    -  add rsp,58
"ACS.exe"+22F2CA8: C3                             -  ret
"ACS.exe"+22F2CA9: CC                             -  int 3
"ACS.exe"+22F2CAA: CC                             -  int 3
"ACS.exe"+22F2CAB: CC                             -  int 3
"ACS.exe"+22F2CAC: CC                             -  int 3
"ACS.exe"+22F2CAD: CC                             -  int 3
"ACS.exe"+22F2CAE: CC                             -  int 3
"ACS.exe"+22F2CAF: CC                             -  int 3
// ---------- INJECTING HERE ----------
"ACS.exe"+22F2CB0: E9 58 E1 82 05                 -  jmp ACS.exe+7B20E0D
// ---------- DONE INJECTING  ----------
"ACS.exe"+22F2CB5: FF 35 CE DE 3A 05              -  push [ACS.exe+76A0B89]
"ACS.exe"+22F2CBB: 66 0F BE EA                    -  movsx bp,dl
"ACS.exe"+22F2CBF: 0F 91 C7                       -  setno bh
"ACS.exe"+22F2CC2: 4C 8D AE DE EB 33 FF           -  lea r13,[rsi-00CC1422]
"ACS.exe"+22F2CC9: 48 B8 00 00 00 00 00 00 00 00  -  mov rax,0000000000000000
"ACS.exe"+22F2CD3: 48 8D 34 95 39 C5 90 AB        -  lea rsi,[rdx*4-546F3AC7]
"ACS.exe"+22F2CDB: 49 89 C5                       -  mov r13,rax
"ACS.exe"+22F2CDE: 0F 91 C3                       -  setno bl
"ACS.exe"+22F2CE1: 48 87 F5                       -  xchg rbp,rsi
"ACS.exe"+22F2CE4: 41 0F CC                       -  bswap r12d
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>13867</ID>
          <Description>"Enable cheats..."</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <Color>808000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : ACU.exe
  Version: 
  Date   : 2020-05-24
  Author : Paul44

  Collects ptrs main script...
}

[ENABLE]

// antiDebug routine...
// kill anti-debug thread...
// see [Show Cheat Table Lua Script] for details...
// LuaCall(KillAntiDebug())


// struct: VFT +30 .. +18
// collect ptrs: occasianally Health values misses...
// CameraManager... gets to ACUPlayerCameraComponent...  gets to Entity... gets to BhvAssassin...
//  +48 .. +0:ACUPlayerCameraComponent ..+18: Entity Player !
//                                            +70: World .. +1F8 .. +0: BhvAssassin
//                                                                      +C8 .. +60 .. +90: CSrvPlayerHealth
// aobscanmodule(INJECT,ACU.exe,44 0F 29 AC 24 C0 02 00 00 48)
aobscanmodule(CameraMgr,$process,4C 8D 4C 24 70 4C 8D 85 10)
registersymbol(CameraMgr)
alloc(newmem,$200)

// needed for 'Enable cheats...' script
globalalloc(pCameraMgr,8,$process)
globalalloc(pEntity,8,$process)
globalalloc(pBhvAssassin,8,$process)
globalalloc(pHealth,8,$process)
globalalloc(pInventory,8,$process)
globalalloc(pInventCheck,8,$process)
globalalloc(bGodmode,1,$process)
globalalloc(bInvisible,1,$process)

//globalalloc(pCamera,8,"$process")

bGodmode:
db 0

bInvisible:
db 0

bKillAntiDebug:
db 9

//pUIMapCheck1:
//dq 0x0
//dq 0x142B3C400

//pInventCheck:
//dq 0x0
//dq 0x142B6A180

// Map waypoint...
// check used in Map Waypoint..., Teleport to Waypoint... &amp; Build Icon List...
// probably will not work on certain PC configs (RAM dependency?)...  ~ to follow up...!
globalalloc(pUIMinimapMgr,8,$process)
globalalloc(pUIMapCheck1,8,$process)

// some stuff...
globalalloc(pLevelUp,8,$process)
globalalloc(pFloat,4,$process)

// Speed multiplier...
globalalloc(pSpeedSystem,8,$process)

// Error stats...
globalalloc(nCrash1,4,$process)
globalalloc(nCrash2,4,$process)
globalalloc(nCrash3,4,$process)
globalalloc(nCrash4,4,$process)

nCrash1:
db (int)0

nCrash2:
db (int)0

nCrash3:
db (int)0

nCrash3:
db (int)0

// 'Player Coordinates' script
// x64 pointers are 8-bytes long
globalalloc(pStructCrdBase,8,$process)
globalalloc(pStructCrdOffset,8,$process)

// gathers offsets for resp. inventory items (div by 8 ?)
globalalloc(tInventory,200,$process)

// Time of day...
globalalloc(pTimeOfDay,8,$process)

// Accomplishments...
globalalloc(pAccomplishm,8,$process)
globalalloc(pAccomplVFT,8,$process)

// see [Maintenance scripts ~ 'special' scripts] (x3)..
globalalloc(bInverseXY,1,$process)
// coordinates YZ switch position...
bInverseXY:
db 0



label(code)
label(code2)
label(code3)
label(code4)
label(return)

newmem:
{$try}
  push rax
  push rbx
  push rcx
  push r15
  mov rax,CameraMgr
  sub rax,0x4
  xor rbx,rbx
  mov ebx,[eax]
  add rax,ebx
  add rax,0x4
  mov rax,[rax]
  mov r15,pCameraMgr
  mov [r15],rax
  // Entity...
  mov rbx,[rax+0x48]
  mov rbx,[rbx+0x0]
  mov rbx,[rbx+0x018]
  mov r15,pEntity
  mov [r15],rbx
  // BhvAssassin...
  mov rbx,[rbx+0x70]
  mov rbx,[rbx+0x1F8]
  mov rbx,[rbx+0x0]
  mov r15,pBhvAssassin
  mov [r15],rbx
  test rbx,rbx
  je short @f
  // dis-enable invisibility...
  mov r15,bInvisible
  mov al,[r15]
  mov byte ptr [rbx+D8],al
  // Health...
  // JackTheRipper sits +98
  // +90: CSrvBehaviorInteraction...
  mov rbx,[rbx+0xC8]
  mov rax,[rbx+0x60]
  mov rbx,[rax+0x90]
  cmp word ptr [rbx+0x12],0x02
  jg short @f
  mov rbx,[rax+0x98]
@@:
  mov r15,pHealth
  mov [r15],rbx
  test rbx,rbx
  je code3
  // dis-enable godmode + maxing health...
  mov r15,bGodmode
  mov al,[r15]
  mov byte ptr [rbx+DE],al
  //mov byte ptr [rbx+206],al
  cmp al,1
  jne code3
  // resetting FallDamage...
  mov rcx,[rbx+C0]
  mov rax,0x0
code2:
  mov rbx,[rcx+rax]
  mov [rbx+10],0
  add rax,0x8
  cmp al,0x18
  jle code2
code3:
  // Inventory...
  mov r15,pBhvAssassin
  mov rbx,[r15]
  mov rbx,[rbx+0xC8]
  mov rbx,[rbx+0xA8]
  mov rbx,[rbx+0x00]
  //mov rbx,[rbx+0x28]
  mov r15,pInventory
  mov [r15],rbx
  // check needed for 'replay missions' not crashing...
  mov rbx,[rbx]
  mov r15,pInventCheck
  mov rax,[r15]
  test rax,rax
  jne code4
  mov [r15],rbx
  jmp code4
{$except}
  mov r15,nCrash1
  inc [r15]
code4:
  pop r15
  pop rcx
  pop rbx
  pop rax
code:
  lea r9,[rsp+70]
  lea r8,[rbp+00000310]
  lea rdx,[rbp+00000100]
  jmp return

CameraMgr:
  jmp far newmem
  db 90 90 90 90 90
return:


[DISABLE]

CameraMgr:
  db 4C 8D 4C 24 70 4C 8D 85 10 03 00 00 48 8D 95 00 01 00 00

unregistersymbol(CameraMgr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+1A66A3E

"ACS.exe"+1A669FF: E8 6C E5 00 00                 -  call ACS.exe+1A74F70
"ACS.exe"+1A66A04: 4C 8B 0D 6D BF 8B 05           -  mov r9,[ACS.exe+7322978]
"ACS.exe"+1A66A0B: 48 8D 85 20 03 00 00           -  lea rax,[rbp+00000320]
"ACS.exe"+1A66A12: 4C 8D 45 90                    -  lea r8,[rbp-70]
"ACS.exe"+1A66A16: 41 8D 57 15                    -  lea edx,[r15+15]
"ACS.exe"+1A66A1A: 48 8D 8D 10 03 00 00           -  lea rcx,[rbp+00000310]
"ACS.exe"+1A66A21: 48 89 85 10 03 00 00           -  mov [rbp+00000310],rax
"ACS.exe"+1A66A28: C7 85 18 03 00 00 20 80 00 00  -  mov [rbp+00000318],00008020
"ACS.exe"+1A66A32: E8 39 E5 00 00                 -  call ACS.exe+1A74F70
"ACS.exe"+1A66A37: 48 8B 0D 8A DC 6E 05           -  mov rcx,[ACS.exe+71546C8]
// ---------- INJECTING HERE ----------
ACS_Gold.exe+1A66A3E: 4C 8D 4C 24 70                 - lea r9,[rsp+70]
ACS_Gold.exe+1A66A43: 4C 8D 85 10 03 00 00           - lea r8,[rbp+00000310]
ACS_Gold.exe+1A66A4A: 48 8D 95 00 01 00 00           - lea rdx,[rbp+00000100]
// ---------- DONE INJECTING  ----------
"ACS.exe"+1A66A51: 4C 89 7C 24 70                 -  mov [rsp+70],r15
"ACS.exe"+1A66A56: E8 E5 E0 EF FF                 -  call ACS.exe+1964B40
"ACS.exe"+1A66A5B: 48 8B 8D 00 01 00 00           -  mov rcx,[rbp+00000100]
"ACS.exe"+1A66A62: 48 8B 01                       -  mov rax,[rcx]
"ACS.exe"+1A66A65: 49 89 86 C0 09 00 00           -  mov [r14+000009C0],rax
"ACS.exe"+1A66A6C: 48 8B 51 08                    -  mov rdx,[rcx+08]
"ACS.exe"+1A66A70: F0 FF 42 0C                    - lock  inc [rdx+0C]
"ACS.exe"+1A66A74: 49 87 96 C8 09 00 00           -  xchg [r14+000009C8],rdx
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>14268</ID>
              <Description>"Player Status..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : ACS.exe
  Version: 
  Date   : 2020-06-11
  Author : Paul44

  Collects base struct Health...
}

[ENABLE]
{$lua}



{$asm}


[DISABLE]

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>11718</ID>
                  <Description>"Health"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>pHealth</Address>
                  <Offsets>
                    <Offset>E0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11771</ID>
                      <Description>"Maximum Health"</Description>
                      <Color>808080</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>[pHealth]+E4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14014</ID>
                      <Description>"Health 2"</Description>
                      <Color>808080</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>[pHealth]+1FC</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14015</ID>
                      <Description>"Maximum Health 2"</Description>
                      <Color>808080</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>[pHealth]+200</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>106</ID>
                  <Description>"Godmode"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS.exe
  Version: 
  Date   : 2018-04-30
  Author : Paul44

  Dis/enable Godmode
}

[ENABLE]
// +204: (default = CC) ~ 1 = desync...
{$lua}
    -- FallDamage values: 25 - 50 - 75 - 100
    local addrHealth = getAddress("[pHealth]")
    local addrFallDamage = readPointer(addrHealth+0xC0)
    --print(string.format('%X',addrFallDamage))
    -- setting FallDamage values = 0
    for i=0,3 do
        local addrFallSet = readPointer(addrFallDamage+0x8*i)
        writeInteger(addrFallSet+0x10,0)
    end
    -- enable godmode flag
    writeBytes(addrHealth+0xDE,1)
    --writeBytes(addrHealth+0x206,1)
    -- despite "Godmode" Health gets reset to '0'...
    writeBytes(addrHealth+0xE0,wordToByteTable(readSmallInteger(addrHealth+0xE4)))
    --writeBytes(addrHealth+0x1FC,wordToByteTable(readSmallInteger(addrHealth+0x200)))

{$asm}

bGodmode:
db 1

[DISABLE]
{$lua}
    local aFallDamage = {25,50,75,100}
    local addrHealth = getAddress("[pHealth]")
    local addrFallDamage = readPointer(addrHealth+0xC0)
    -- restoring FallDamage values
    for i=0,3 do
        local addrFallSet = readPointer(addrFallDamage+0x8*i)
        writeInteger(addrFallSet+0x10,aFallDamage[i+1])
    end
    writeBytes(addrHealth+0xDE,0)
    writeBytes(addrHealth+0xE0,wordToByteTable(readSmallInteger(addrHealth+0xE4)))
    --writeBytes(addrHealth+0x1FC,wordToByteTable(readSmallInteger(addrHealth+0x200)))

{$asm}

bGodmode:
db 0

</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Toggle Activation</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>71</Key>
                      </Keys>
                      <ID>0</ID>
                      <ActivateSound TTS="EN">Godmode Enabled</ActivateSound>
                      <DeactivateSound TTS="EN">Godmode Disabled</DeactivateSound>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>297</ID>
                  <Description>"Invisible"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACU.exe
  Version:
  Date   : 2018-04-30
  Author : Paul44

  Dis/enable Invisibility
}

[ENABLE]

{$lua}
    local addrInvisib = getAddress("[pBhvAssassin]")
    writeBytes(addrInvisib+0xD8,1)

{$asm}

bInvisible:
db 1

[DISABLE]
{$lua}
    local addrInvisib = getAddress("[pBhvAssassin]")
    writeBytes(addrInvisib+0xD8,0)

{$asm}

bInvisible:
db 0

</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11433</ID>
                      <Description>"(when already in conflict, move out of sight...)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14307</ID>
                  <Description>"Near Death (= 1)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pHealth</Address>
                  <Offsets>
                    <Offset>E8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>2207</ID>
                  <Description>"Desync (= 1)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pHealth</Address>
                  <Offsets>
                    <Offset>204</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>87987</ID>
              <Description>"Inventory Supplies..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : ACS.exe
  Version:
  Date   : 2020-05-22
  Author : Paul44

  Allows you to edit inventory items...

   1 = Money                   14 = Bullets                 56 = Leather
   5 = Smoke Bombs             43 = Throwing Knives         57 = Iron
   8 = Voltaic Bombs           44 = Hallucinogenic Darts    58 = Chemicals
   9 = Fear Bombs              45 = Medicine                60 = Thread
  10 = Spikes

}

[ENABLE]
// Using 'pUIMinimapMgr' code to build inventoryTable...
aobscanmodule(Inventory,$process,48 63 48 0C 48 8B 10 48 C1 E1 20 48 C1 F9 3F 48 23 D1 8B 42)
registersymbol(Inventory)
alloc(newmem,$100,$process)

label(code)
label(code2)
label(code3)
label(return)

newmem:
{$try}
  // rdx+08 = itemID ~ edi
  push rax
  push rbx
  push rcx
  push rdx
  push rdi
  push rsi
  push r15
  // rax = counter...
  // rbx = start inventory list ~&gt; current record
  // ecx = loop length inventory list
  // introduced 'check' to prevent crashing while 'Replaying' missions...
  xor rax,rax
  mov r15,pInventory
  mov rsi,[r15]
  mov rsi,[rsi]
  mov r15,pInventCheck
  mov rbx,[r15]
  cmp rbx,rsi
  jne code3
  mov r15,pInventory
  mov rsi,[r15]
  add rsi,0x28
  mov cx,word ptr [rsi+8]
  mov rsi,[rsi]
code2:
  inc ax
  mov rbx,[rsi]
  // get itemID + offset table indexvalue...
  mov edi,dword ptr [rbx+08]
  imul edi,2
  // save in offset table
  mov r15,tInventory
  lea rdx,[r15]
  add rdx,edi
  mov [rdx],ax
  add rsi,0x08
  cmp cx,ax
  jg code2
  jmp code3
{$except}
  mov r15,nCrash4
  inc [r15]
code3:
  pop r15
  pop rsi
  pop rdi
  pop rdx
  pop rcx
  pop rbx
  pop rax
code:
  movsxd  rcx,dword ptr [rax+0C]
  mov rdx,[rax]
  shl rcx,20
  sar rcx,3F
  jmp return

Inventory:
  jmp far newmem
  nop
return:


[DISABLE]

Inventory:
  db 48 63 48 0C 48 8B 10 48 C1 E1 20 48 C1 F9 3F

unregistersymbol(Inventory)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+2A9694

ACS_Gold.exe+2A967D: CC                    - int 3
ACS_Gold.exe+2A967E: CC                    - int 3
ACS_Gold.exe+2A967F: CC                    - int 3
ACS_Gold.exe+2A9680: 48 8B 15 69 59 E1 06  - mov rdx,[ACS_Gold.exe+70BEFF0]
ACS_Gold.exe+2A9687: E9 24 9B 00 00        - jmp ACS_Gold.exe+2B31B0
ACS_Gold.exe+2A968C: CC                    - int 3
ACS_Gold.exe+2A968D: CC                    - int 3
ACS_Gold.exe+2A968E: CC                    - int 3
ACS_Gold.exe+2A968F: CC                    - int 3
ACS_Gold.exe+2A9690: 48 8B 41 40           - mov rax,[rcx+40]
// ---------- INJECTING HERE ----------
ACS_Gold.exe+2A9694: 48 63 48 0C           - movsxd  rcx,dword ptr [rax+0C]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+2A9698: 48 8B 10              - mov rdx,[rax]
ACS_Gold.exe+2A969B: 48 C1 E1 20           - shl rcx,20
ACS_Gold.exe+2A969F: 48 C1 F9 3F           - sar rcx,3F
ACS_Gold.exe+2A96A3: 48 23 D1              - and rdx,rcx
ACS_Gold.exe+2A96A6: 8B 42 44              - mov eax,[rdx+44]
ACS_Gold.exe+2A96A9: 8B 4A 48              - mov ecx,[rdx+48]
ACS_Gold.exe+2A96AC: 48 8B 15 3D 59 E1 06  - mov rdx,[ACS_Gold.exe+70BEFF0]
ACS_Gold.exe+2A96B3: 80 BA 85 00 00 00 00  - cmp byte ptr [rdx+00000085],00
ACS_Gold.exe+2A96BA: 74 08                 - je ACS_Gold.exe+2A96C4
ACS_Gold.exe+2A96BC: 83 F9 01              - cmp ecx,01
}
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>73</Key>
                  </Keys>
                  <ID>0</ID>
                  <ActivateSound TTS="EN">Activated</ActivateSound>
                  <DeactivateSound TTS="EN">Deactivated</DeactivateSound>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>87988</ID>
                  <Description>"Money"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+1*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87989</ID>
                  <Description>"Throwing Knifes"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+2B*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87990</ID>
                  <Description>"Smoke Bombs"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+5*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87991</ID>
                  <Description>"Bullets"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+E*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87992</ID>
                  <Description>"Hallucinogenic Darts"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+2C*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87993</ID>
                  <Description>"Voltaic Bombs"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+8*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87994</ID>
                  <Description>"Medicine"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+2D*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87995</ID>
                  <Description>"--- DLC Jack The Ripper"</Description>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>87996</ID>
                  <Description>"Spikes"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+A*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87997</ID>
                  <Description>"Fear Bombs"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+9*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87998</ID>
                  <Description>"--- Crafting"</Description>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>87999</ID>
                  <Description>"Leather"</Description>
                  <VariableType>2 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+38*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>88000</ID>
                  <Description>"Iron"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+39*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>88001</ID>
                  <Description>"Thread"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+3C*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>88002</ID>
                  <Description>"Chemicals"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+3A*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>383</ID>
              <Description>"Teleport &amp; Coordinates..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : ACS.exe
  Version:
  Date   : 2020-05-15
  Author : Paul44

  Free Roaming...
  (using 'write coordinates' routine)
}

[ENABLE]
{$lua}
  -- checks used in Map Waypoint..., Teleport to Waypoint... &amp; Build Icon List...
  -- (see also "opening" script)
  -- gets ptr for 'Build Icon List...'...
  getStaticAddr("8B 42 44 8B 4A 48",-9,"pUIMinimapMgr",2)
  -- getStaticAddr("48 23 DF 4C 8D 4C 24 68",4,"pUIMinimapMgr",2)
  -- getStaticAddr("48 8B 49 50 41 B1 01",4,"pUIMinimapMgr",2)
  local addrMapmgr = getAddress("[pUIMinimapMgr]")
  if not (addrMapmgr == 0 or addrMapmgr == nil) then
    local addrUIicon = readPointer(addrMapmgr+0x60)
    -- assume at least one iocn record with correct VFT ref within 1st 10...
    -- local offsCheck = 0xB0
    for i=0,10 do
        local addrVFT = readPointer(readPointer(addrUIicon+8*i))
        local sCheck1 = readString(addrVFT+0xA8,5)
        local sCheck2 = readString(addrVFT+0xB0,5)
        if (sCheck1 == "Alpha" or sCheck2 == "Alpha") then
          writeQword(getAddress("pUIMapCheck1"),addrVFT)
          --synchronize(function()
          --    f.ListBox.Items.Add(string.format('\n &gt; pUIMapCheck1: [%X]',addrVFT))
          --end)
          --f.ListBox.Bottom
          break
        end
        --print(i,' - ',string.format('%X',addrVFT))
    end
  end

  if (addrMapmgr == 0 or addrMapmgr == nil) then
     print('\n Teleporting will probably not work at the moment...')
     print(' Try to dis/enable [Collecting info...] on a later stage, after finishing a mission for example')
  end

  --getStaticAddr("41 0F 28 CB 41 0F 59 CB 44 0F 56",-16,"pCamera",0)


{$asm}
// Entity ~ see main script...
// code writes coordinates... rax+30 = x-coordinate...
aobscanmodule(pCoord,$process,0F 28 42 20 0F 29 41 50 0F 28 4A 30 0F 29 49 60 C3)
registersymbol(pCoord)
alloc(newmem,$200,$process)

// camera: yaw &amp; pitch...
aobscanmodule(Camera,$process,89 42 68 8B 42 08)
registersymbol(Camera)
alloc(newmem2,$100,$process)

// Map waypoint...
globalalloc(pMapWayp,8,$process)
globalalloc(nDropHeight,4,$process)
globalalloc(bDropHigh,1,$process)

// save current location x,y,z coordinates (float)...
globalalloc(OrigCoord,12,$process)
// init script variables
globalalloc(XYstepVal,4,$process)
globalalloc(ZstepVal,4,$process)
globalalloc(ZstepdropHeight,4,$process)

globalalloc(Xval,4,$process)
globalalloc(Yval,4,$process)
globalalloc(Zval,4,$process)
globalalloc(bFreeRoam,1,$process)
globalalloc(pCamera,8,"$process")
globalalloc(bCoordSave,1,"$process")
globalalloc(nFrameSpeed,4,"$process")

nDropHeight:
dd 0x42200000                            // = 40.0

XYstepVal:
dd (float)2.0

ZstepVal:
dd 0x3F800000

ZstepdropHeight:
dd (float)2.0

bFreeRoam:
db 00

// save_restore coordinates...
bCoordSave:
db 0

bDropHigh:
db 1

// fill in offset here ~ see table coordinates...
pStructCrdOffset:
dd 60

// freeroam timer interval (smoother/faster = 50 - smoothest/fast = 20)
// choose between player or camera
nFrameSpeed:
dd (int)20


label(code)
label(return)

// subroutines...
alloc(updateCrd,$100,$process)

updateCrd:
  // updated coordinates...
  mov r15,pStructCrdBase
  mov rbx,[r15]
  mov r15,pStructCrdOffset
  add rbx,[r15]
  mov r15,XVal
  mov edx,dword ptr [r15]
  mov [rbx],edx
  add rbx,4
  mov r15,YVal
  mov edx,dword ptr [r15]
  mov [rbx],edx
  add rbx,4
  mov r15,ZVal
  mov edx,dword ptr [r15]
  mov [rbx],edx
  ret

// Player roaming...
newmem:
{$try}
  push rbx
  push rcx
  push rdx
  push r15
  movaps xmm0,[rdx+20]                                          // extend injection_opcode to cover 14+ bytes
  movaps [rcx+50],xmm0
  movaps xmm1,[rdx+30]
  movaps [rcx+60],xmm1
@@:
  mov r15,pEntity
  mov rbx,[r15]
  //sub rbx,0x20
  cmp rbx,rcx
  jne code
  // freecam routines... x64: 8-byte ptrs &amp; r?x registers...
  mov r15,bFreeRoam
  cmp byte ptr [r15],1
  jne code
  mov r15,pEntity
  mov rbx,[r15]
  mov r15,pStructCrdBase
  mov [r15],rbx
  // updated coordinates...
  mov r15,updateCrd
  call r15
  mov r15,pStructCrdBase
  mov rbx,[r15]
  movaps xmm1,[rbx+60]
  jmp code
{$except}
  mov r15,nCrash2
  inc [r15]
code:
  pop r15
  pop rdx
  pop rcx
  pop rbx
  jmp return

pCoord:
  jmp far newmem
  db 90 90
return:

// camera...
label(code2)
label(return2)

newmem2:
  push r15
  mov r15,pCamera
  mov [r15],rdx
  pop r15
code2:
  mov [rdx+68],eax
  mov eax,[rdx+08]
  jmp return2

Camera:
  jmp newmem2
  nop
return2:


[DISABLE]

pCoord:
  db 0F 28 42 20 0F 29 41 50 0F 28 4A 30 0F 29 49 60

unregistersymbol(pCoord)
dealloc(newmem)
dealloc(updateCrd)

Camera:
  db 89 42 68 8B 42 08

unregistersymbol(Camera)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+1C4D2A3

"ACS.exe"+1C4D28B: CC                       -  int 3
"ACS.exe"+1C4D28C: CC                       -  int 3
"ACS.exe"+1C4D28D: CC                       -  int 3
"ACS.exe"+1C4D28E: CC                       -  int 3
"ACS.exe"+1C4D28F: CC                       -  int 3
"ACS.exe"+1C4D290: 0F 28 02                 -  movaps xmm0,[rdx]
"ACS.exe"+1C4D293: 0F 29 41 30              -  movaps [rcx+30],xmm0
"ACS.exe"+1C4D297: 0F 28 4A 10              -  movaps xmm1,[rdx+10]
"ACS.exe"+1C4D29B: 0F 29 49 40              -  movaps [rcx+40],xmm1
// ---------- INJECTING HERE ----------
"ACS.exe"+1C4D29F: 0F 28 42 20              -  movaps xmm0,[rdx+20]
"ACS.exe"+1C4D2A3: 0F 29 41 50              -  movaps [rcx+50],xmm0
"ACS.exe"+1C4D2A7: 0F 28 4A 30              -  movaps xmm1,[rdx+30]
"ACS.exe"+1C4D2AB: 0F 29 49 60              -  movaps [rcx+60],xmm1
// ---------- DONE INJECTING  ----------
"ACS.exe"+1C4D2AF: C3                       -  ret
"ACS.exe"+1C4D2B0: 48 83 EC 38              -  sub rsp,38
"ACS.exe"+1C4D2B4: 4C 8B 51 20              -  mov r10,[rcx+20]
"ACS.exe"+1C4D2B8: 0F B6 44 24 60           -  movzx eax,byte ptr [rsp+60]
"ACS.exe"+1C4D2BD: 4D 85 D2                 -  test r10,r10
"ACS.exe"+1C4D2C0: 74 16                    -  je ACS.exe+1C4D2D8
"ACS.exe"+1C4D2C2: 88 44 24 28              -  mov [rsp+28],al
"ACS.exe"+1C4D2C6: 49 8B CA                 -  mov rcx,r10
"ACS.exe"+1C4D2C9: C6 44 24 20 00           -  mov byte ptr [rsp+20],00
}

{ camera...
// ORIGINAL CODE - INJECTION POINT: ACS.exe+25BB772

ACS.exe+25BB753: 8B 42 0C        - mov eax,[rdx+0C]
ACS.exe+25BB756: 0F 28 74 24 10  - movaps xmm6,[rsp+10]
ACS.exe+25BB75B: 89 42 58        - mov [rdx+58],eax
ACS.exe+25BB75E: 8B 42 10        - mov eax,[rdx+10]
ACS.exe+25BB761: 89 42 5C        - mov [rdx+5C],eax
ACS.exe+25BB764: 8B 42 14        - mov eax,[rdx+14]
ACS.exe+25BB767: 89 42 60        - mov [rdx+60],eax
ACS.exe+25BB76A: 8B 02           - mov eax,[rdx]
ACS.exe+25BB76C: 89 42 64        - mov [rdx+64],eax
ACS.exe+25BB76F: 8B 42 04        - mov eax,[rdx+04]
// ---------- INJECTING HERE ----------
ACS.exe+25BB772: 89 42 68        - mov [rdx+68],eax
// ---------- DONE INJECTING  ----------
ACS.exe+25BB775: 8B 42 08        - mov eax,[rdx+08]
ACS.exe+25BB778: 89 42 6C        - mov [rdx+6C],eax
ACS.exe+25BB77B: C6 42 78 01     - mov byte ptr [rdx+78],01
ACS.exe+25BB77F: B8 01 00 00 00  - mov eax,00000001
ACS.exe+25BB784: 48 83 C4 28     - add rsp,28
ACS.exe+25BB788: C3              - ret
ACS.exe+25BB789: CC              - int 3
ACS.exe+25BB78A: CC              - int 3
ACS.exe+25BB78B: CC              - int 3
ACS.exe+25BB78C: CC              - int 3
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>386</ID>
                  <Description>"X-axis"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>pEntity</Address>
                  <Offsets>
                    <Offset>60</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>387</ID>
                  <Description>"Y-axis"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>pEntity</Address>
                  <Offsets>
                    <Offset>64</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>388</ID>
                  <Description>"Z-axis"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>pEntity</Address>
                  <Offsets>
                    <Offset>68</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>11904</ID>
                  <Description>"Map Waypoint..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS.exe
  Version: 
  Date   : 2020-05-22
  Author : Paul44

  Gets coordinates of waypoint marker...
}

[ENABLE]
aobscanmodule(MapMarker,$process,0F 29 40 60 48 8B 48 28)
registersymbol(MapMarker)
alloc(newmem,$100)

globalalloc(pMapWayp,8,$process)

label(code)
label(return)

newmem:
  // ptrs change constantly...
  // need research to see if 0x142B3C400 changes in time (or RAMsize)...
  // excludings icons... for now
  push r15
  push rbx
  mov r15,pUIMapCheck1
  mov rbx,[r15]
  cmp rbx,[rax]
  jne code
  mov r15,pMapWayp
  mov [r15],rax
code:
  pop rbx
  pop r15
@@:
  movaps [rax+60],xmm0
  mov rcx,[rax+28]
  movsxd  rax,dword ptr [rcx+0C]
  mov rcx,[rcx]
  jmp return

MapMarker:
  jmp far newmem
  db 90
return:


[DISABLE]

MapMarker:
  db 0F 29 40 60 48 8B 48 28 48 63 41 0C 48 8B 09

unregistersymbol(MapMarker)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+2C5987

"ACS.exe"+2C5961: 41 8B 06                    -  mov eax,[r14]
"ACS.exe"+2C5964: 89 44 24 30                 -  mov [rsp+30],eax
"ACS.exe"+2C5968: 45 33 C0                    -  xor r8d,r8d
"ACS.exe"+2C596B: 48 8B 54 24 30              -  mov rdx,[rsp+30]
"ACS.exe"+2C5970: E8 0B EE 08 02              -  call ACS.exe+2354780
"ACS.exe"+2C5975: 48 85 C0                    -  test rax,rax
"ACS.exe"+2C5978: 74 31                       -  je ACS.exe+2C59AB
"ACS.exe"+2C597A: 48 8B 00                    -  mov rax,[rax]
"ACS.exe"+2C597D: C6 80 90 00 00 00 01        -  mov byte ptr [rax+00000090],01
"ACS.exe"+2C5984: 0F 28 07                    -  movaps xmm0,[rdi]
// ---------- INJECTING HERE ----------
"ACS.exe"+2C5987: 0F 29 40 60                 -  movaps [rax+60],xmm0
"ACS.exe"+2C598B: 48 8B 48 28                 -  mov rcx,[rax+28]
"ACS.exe"+2C598F: 48 63 41 0C                 -  movsxd  rax,dword ptr [rcx+0C]
"ACS.exe"+2C5993: 48 8B 09                    -  mov rcx,[rcx]
// ---------- DONE INJECTING  ----------
"ACS.exe"+2C5996: 48 C1 E0 20                 -  shl rax,20
"ACS.exe"+2C599A: 48 C1 F8 3F                 -  sar rax,3F
"ACS.exe"+2C599E: 48 23 C8                    -  and rcx,rax
"ACS.exe"+2C59A1: 74 08                       -  je ACS.exe+2C59AB
"ACS.exe"+2C59A3: 48 8B D7                    -  mov rdx,rdi
"ACS.exe"+2C59A6: E8 85 79 98 01              -  call ACS.exe+1C4D330
"ACS.exe"+2C59AB: 48 85 DB                    -  test rbx,rbx
"ACS.exe"+2C59AE: 74 08                       -  je ACS.exe+2C59B8
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>231</ID>
                      <Description>"(Help ~ Enable 'God mode' first before teleporting...)"</Description>
                      <Options moHideChildren="1"/>
                      <Color>008000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : ACU.exe
  Version:
  Date   : 2018-05-17
  Author : Paul44

  HowTo: Teleporting...
}

[ENABLE]

{$lua}
  local sMessage = [[
 1.  Open map and select a location
      (avoid 'system' icons, such as ViewPoint !)
 2.  Press [Shift+T] once while still in the map view...!
     (if done correctly, player icon should reposition accordingly)
 3.  Press [ESC] to teleport to that particular location
      (see also [Readme] file)

 Note: do not forget to enable [God mode] first.
  ]]

  showMessage(sMessage)

return error()

{$asm}

[DISABLE]

</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>232</ID>
                          <Description>"World ~ Base Address"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pWorld</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>326</ID>
                      <Description>"Drop Height"</Description>
                      <VariableType>Float</VariableType>
                      <Address>nDropHeight</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14288</ID>
                      <Description>"Drop High... (= 1)"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>bDropHigh</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>267</ID>
                      <Description>"Teleport to Waypoint..."</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : ACU.exe
  Version:
  Date   : 2018-05-17
  Author : Paul44

  Teleports player to Map Waypoint Marker...
}

[ENABLE]


{$lua}
-- only evaluate following 2 records...
local addrMap = readPointer(getAddress("pMapWayp"))
if(addrMap == 0) then return end

local checkPtr = readPointer(addrMap)
local addrCheckPtr1 = readPointer(getAddress("pUIMapCheck1"))
--local addrCheckPtr2 = readPointer(getAddress("pUIMapCheck2"))
if not (checkPtr == addrCheckPtr1) then return end

local addrEntity = readPointer(getAddress("pEntity"))
local CrdOffset = readInteger(getAddress("pStructCrdOffset"))
addrEntity = addrEntity + CrdOffset

local coordX = readFloat(addrEntity)
local coordY = readFloat(addrEntity+0x4)
local coordZ = readFloat(addrEntity+0x8)
-- if error, restore original coordinates...
if not pcall(SetCoord) then
    --print(string.format('%5.3f  -  %5.3f   -   %5.3f',coordX,coordY,coordZ))
    local addrC3 = getAddress("nCrash3")
    local nCount = readInteger(addrC3)
    nCount = nCount + 1
    writeInteger(addrC3, nCount)
    writeFloat(addrEntity,coordX)
    writeFloat(addrEntity+0x4,coordY)
    writeFloat(addrEntity+0x8,coordZ)
end

function SetCoord()
    -- Icon Coordinates also reside in Base structure: +50 .. +54 .. +58
    local IconHeight = 2.0
    -- Map waypoint does not have a Z-value, so we use a fixed Z-value...
    local addrMap = readPointer(getAddress("pMapWayp"))
    local addrHeight = getAddress("nDropHeight")
    local fHeight = readFloat(addrHeight)
    local bDropHigh = readBytes(getAddress("bDropHigh"))
    --print(string.format('&lt;['.. "%02x" ..']&gt;',addrEntity))
    local MapX = readFloat(addrMap+0x60)
    local MapY = readFloat(addrMap+0x64)
    local MapZ = readFloat(addrMap+0x68)
    if (MapZ == 0) then MapZ = fHeight end
    --local MapZ = readFloat(addrHeight)
    -- in case an icon is selected: 0x20 ~= 0 ~ not all of them return coordinates...

    --local bIcon = readInteger(addrMap+0x20)
    --local IconX = readFloat(addrMap+0x60)
    --local IconY = readFloat(addrMap+0x64)
    --local IconZ = readFloat(addrMap+0x68)
    --print(string.format("[%f]",MapZ))
    local bMapUpdate = true
    local bIconUpdate = false

    if MapX ~= MapX or MapY ~= MapY then bMapUpdate = false end
    if MapX == nil or MapY == nil or (MapX == 0 and MapY == 0) then
        bMapUpdate = false
    elseif math.floor(MapX) == -1 or math.floor(MapY) == -1 then
        bMapUpdate = false
    end

    --print(string.format("*[%s]*",tostring(bMapUpdate)))
    if bMapUpdate then
        -- dis/enable collision - taken from #Sunbeam's ACS table...
        local addrFlagCollision = getAddress("[[[pEntity]+0x88]+0x110]+0x4A")
        writeBytes(addrFlagCollision,0)

        --max: less chance of falling through surface - min: eliminates extreme high values...
        if (bDropHigh == 0) then
            writeFloat(addrEntity+0x8,MapZ+IconHeight)
        else
            writeFloat(addrEntity+0x8,math.min(math.max(MapZ+IconHeight,fHeight),100))
        end
        writeFloat(addrEntity,MapX)
        writeFloat(addrEntity+0x4,MapY)
        writeQword(getAddress("pMapWayp"),0x0)

        writeFloat(addrMap+0x60,0)
        writeFloat(addrMap+0x64,0)
        writeQword(addrMap+0x68,0)

        -- always enable godmode...
        local mr = getAddressList().getMemoryRecordByID(106)
        mr.Active = true

        writeBytes(addrFlagCollision,1)
    end

end

{$asm}
// disables script automatically by CE...
test al,al

[DISABLE]
</AssemblerScript>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Toggle Activation</Action>
                          <Keys>
                            <Key>16</Key>
                            <Key>84</Key>
                          </Keys>
                          <ID>1</ID>
                        </Hotkey>
                      </Hotkeys>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>11906</ID>
                          <Description>"Icon X"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>pMapWayp</Address>
                          <Offsets>
                            <Offset>60</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>11905</ID>
                          <Description>"Icon Y"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>pMapWayp</Address>
                          <Offsets>
                            <Offset>64</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>11908</ID>
                          <Description>"Icon Z"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>pMapWayp</Address>
                          <Offsets>
                            <Offset>68</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>88619</ID>
                  <Description>"Free Roam... (Enable Godmode FIRST !)"</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
execRoutine = nil

local addrEntity = getAddress("[pEntity]")
local addrCrdOffset = getAddress("pStructCrdOffset")
local CrdOffset = readInteger(addrCrdOffset)
addrEntity = addrEntity + CrdOffset
if (addrEntity == 0 or addrEntity == nil) then return end

local addrCamera = getAddressSafe("[pCamera]")
if (addrCamera == 0 or addrCamera == nil) then return end
--print(string.format('%X - %X',addrEntity,addrCamera))

-- FreeRoam mr Id...
local nID = 88619

local addrOrig = getAddress("OrigCoord")
-- storing original coordinates...
local X = readFloat(addrEntity)
local Y = readFloat(addrEntity+0x4)
local Z = readFloat(addrEntity+0x8)
writeFloat(addrOrig,X)
writeFloat(addrOrig+0x4,Y)
writeFloat(addrOrig+0x8,Z)

local addrX = getAddress("Xval")
local addrY = getAddress("Yval")
local addrZ = getAddress("Zval")
writeFloat(addrX,X)
writeFloat(addrY,Y)
writeFloat(addrZ,Z)

-- always enable godmode...
local mr = getAddressList().getMemoryRecordByID(106)
mr.Active = true

local nTimer = readInteger(getAddress("nFrameSpeed"))

writeBytes(getAddress('bFreeRoam'),1)
local mForm = getMainForm()
-- ID mRecord FreeRoam - addrCoordinatesPlayer - addrYaw - offsYax1 - offsYaw2 - addrPitch - offsPitch - Inverse...
aFlyInfo = {nID,addrEntity,addrCamera,0x4C,0x64,addrCamera,0x68}
--local aFlyInfo = {nID,addrEntity,addrCamera,0x4,0x0,addrCamera,0x8} ~ different struct
function ActivateFly()
    tmerFly = createTimer(mForm, false)
    tmerFly.OnTimer = Flyhack
    tmerFly.Interval = nTimer
    tmerFly.Enabled = true
end

ActivateFly()

 
[DISABLE]
{$lua}
writeBytes(getAddress("bFreeRoam"),0)

if ( tmerFly ~= nil ) then tmerFly.destroy() end

</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>88601</ID>
                      <Description>"Free Roam Help~Info (see also Readme file)"</Description>
                      <Color>008000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : AC4BFSP.exe
  Version:
  Date   : 2018-03-23
  Author : Paul44

  Help instructions on how to use the 'hover' function
}

[ENABLE]
{$lua}
if getOpenedProcessID() ~= 0 then
    luacall(Help())
end

{$asm}
// disable script in CE table
// apparently, using an ASM opcode that is syntactically correct, but can not be
// AA-ed by CE causes it to disable the script automatically...

test al,al
//dd (int)48

[DISABLE]

</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>88602</ID>
                      <Description>"Script values"</Description>
                      <Options moHideChildren="1"/>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>88603</ID>
                          <Description>"Xval"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>Xval</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88604</ID>
                          <Description>"Yval"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>Yval</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88605</ID>
                          <Description>"Zval"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>Zval</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88606</ID>
                          <Description>"OrigCoord X"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>OrigCoord</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88607</ID>
                          <Description>"OrigCoord Y"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>OrigCoord+4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88608</ID>
                          <Description>"OrigCoord Z"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>OrigCoord+8</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88638</ID>
                          <Description>"Drop Height"</Description>
                          <VariableType>Float</VariableType>
                          <Address>nDropHeight</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88609</ID>
                          <Description>"XYstepVal"</Description>
                          <VariableType>Float</VariableType>
                          <Address>XYstepVal</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88610</ID>
                          <Description>"ZstepVal"</Description>
                          <VariableType>Float</VariableType>
                          <Address>ZstepVal</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88611</ID>
                          <Description>"ZstepdropHeight"</Description>
                          <VariableType>Float</VariableType>
                          <Address>ZstepdropHeight</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14326</ID>
                  <Description>"Cam Distance"</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS.exe
  Version: 
  Date   : 2020-07-27
  Author : Paul44

  Manage camera distance to player ~ FOV)
  (main research performed by #arthurclg17 @csrinru ~ ACUPlayerCameraComponent)
}

[ENABLE]

aobscanmodule(FreeCam,$process,F3 0F 11 16 0F 28 55 AF)
registersymbol(FreeCam)
alloc(newmem,$100)

globalalloc(pFreeCam,8,$process)
globalalloc(FOVCam,4,$process)

// default value ~ see aobscan [C7 06 DB 0F 49 3F]...
FOVCam:
dd 3F490FDB

label(code)
label(return)

newmem:
  movss [rsi],xmm2
  movaps xmm2,[rbp-51]
  subps xmm2,[rbp-41]
  mulps xmm2,xmm3
code:
  push rax
  push r15
  mov r15,pFreeCam
  mov [r15],rsi
  mov r15,FOVCam
  mov rax,[r15]
  mov [rsi],rax
  pop r15
  pop rax
  jmp return

FreeCam:
  jmp far newmem
  db 90
return:


[DISABLE]

FreeCam:
  db F3 0F 11 16 0F 28 55 AF 0F 5C 55 BF 0F 59 D3

unregistersymbol(FreeCam)
dealloc(newmem)

FOVCam:
dd 3F490FDB

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+197D4DF

"ACS.exe"+197D4B4: 0F 28 BC 24 A0 00 00 00  -  movaps xmm7,[rsp+000000A0]
"ACS.exe"+197D4BC: F3 0F 10 DE              -  movss xmm3,xmm6
"ACS.exe"+197D4C0: 0F 28 E0                 -  movaps xmm4,xmm0
"ACS.exe"+197D4C3: 0F C6 DB 00              -  shufps xmm3,xmm3,00
"ACS.exe"+197D4C7: F3 0F 59 D6              -  mulss xmm2,xmm6
"ACS.exe"+197D4CB: 0F 5C 4D DF              -  subps xmm1,[rbp-21]
"ACS.exe"+197D4CF: F3 0F 11 23              -  movss [rbx],xmm4
"ACS.exe"+197D4D3: F3 0F 58 55 77           -  addss xmm2,[rbp+77]
"ACS.exe"+197D4D8: 0F 59 CB                 -  mulps xmm1,xmm3
"ACS.exe"+197D4DB: 0F 58 4D DF              -  addps xmm1,[rbp-21]
// ---------- INJECTING HERE ----------
"ACS.exe"+197D4DF: F3 0F 11 16              -  movss [rsi],xmm2
"ACS.exe"+197D4E3: 0F 28 55 AF              -  movaps xmm2,[rbp-51]
"ACS.exe"+197D4E7: 0F 5C 55 BF              -  subps xmm2,[rbp-41]
"ACS.exe"+197D4EB: 0F 59 D3                 -  mulps xmm2,xmm3
// ---------- DONE INJECTING  ----------
"ACS.exe"+197D4EE: 0F 58 55 BF              -  addps xmm2,[rbp-41]
"ACS.exe"+197D4F2: 41 0F 29 16              -  movaps [r14],xmm2
"ACS.exe"+197D4F6: F3 0F 10 95 83 00 00 00  -  movss xmm2,[rbp+00000083]
"ACS.exe"+197D4FE: 41 0F 29 0F              -  movaps [r15],xmm1
"ACS.exe"+197D502: F3 0F 5C 55 AB           -  subss xmm2,[rbp-55]
"ACS.exe"+197D507: F3 0F 10 4D 7F           -  movss xmm1,[rbp+7F]
"ACS.exe"+197D50C: F3 0F 5C 4D A7           -  subss xmm1,[rbp-59]
"ACS.exe"+197D511: F3 0F 59 D6              -  mulss xmm2,xmm6
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14330</ID>
                      <Description>"(applies to all cam perspectives)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14327</ID>
                      <Description>"Cam Distance (Default = 0.785)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>FOVCam</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14328</ID>
                      <Description>"Actual Cam Distance"</Description>
                      <Color>C0C0C0</Color>
                      <VariableType>Float</VariableType>
                      <Address>[pFreeCam]</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>26073</ID>
                  <Description>"Icon Teleport... (London + DLCs)"</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACU.exe
  Version: 
  Date   : 2020-06-03
  Author : Paul44

  Builds/prints Icon lists...
}

[ENABLE]
// Gets ptr to IconList of Chests, Cockades, etc...
// PermanentIconManager... +34
aobscanmodule(IconList,$process,89 8C 24 B8 00 00 00 45 8D)
registersymbol(IconList)
alloc(newmem,$100)

globalalloc(pIconList,8,$process)
globalalloc(pIconBChoice,1,$process)
globalalloc(pIconLChoice,1,$process)


pIconBChoice:
db 0

pIconLChoice:
db 0


label(code)
label(return)

newmem:
  // [rax+counter_offset]+0x08 = record Icon...
  push rax
  push r15
  mov rax,[rsi+34]
  mov r15,pIconList
  mov [r15],rax
  pop r15
  pop rax
code:
  mov [rsp+000000B8],ecx
  lea r13d,[r14+rcx]
  cmp r14d,r13d
  jmp return

IconList:
  jmp far newmem
return:


[DISABLE]

IconList:
  db 89 8C 24 B8 00 00 00 45 8D 2C 0E 45 3B F5

unregistersymbol(IconList)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+D77F15

"ACS.exe"+D77EE4: 48 8D 0D 9D B4 36 06     -  lea rcx,[ACS.exe+70E3388]
"ACS.exe"+D77EEB: 4C 89 78 C0              -  mov [rax-40],r15
"ACS.exe"+D77EEF: E8 2C A4 EF 00           -  call ACS.exe+1C72320
"ACS.exe"+D77EF4: E8 17 07 D1 00           -  call ACS.exe+1A88610
"ACS.exe"+D77EF9: 0F B7 56 3E              -  movzx edx,word ptr [rsi+3E]
"ACS.exe"+D77EFD: 44 8B B6 E0 00 00 00     -  mov r14d,[rsi+000000E0]
"ACS.exe"+D77F04: B9 14 00 00 00           -  mov ecx,00000014
"ACS.exe"+D77F09: 88 84 24 B0 00 00 00     -  mov [rsp+000000B0],al
"ACS.exe"+D77F10: 3B D1                    -  cmp edx,ecx
"ACS.exe"+D77F12: 0F 46 CA                 -  cmovbe ecx,edx
// ---------- INJECTING HERE ----------
"ACS.exe"+D77F15: 89 8C 24 B8 00 00 00     -  mov [rsp+000000B8],ecx
"ACS.exe"+D77F1C: 45 8D 2C 0E              -  lea r13d,[r14+rcx]
"ACS.exe"+D77F20: 45 3B F5                 -  cmp r14d,r13d
// ---------- DONE INJECTING  ----------
"ACS.exe"+D77F23: 0F 83 C3 01 00 00        -  jae ACS.exe+D780EC
"ACS.exe"+D77F29: 0F 1F 80 00 00 00 00     -  nop dword ptr [rax+00000000]
"ACS.exe"+D77F30: 0F B7 46 3E              -  movzx eax,word ptr [rsi+3E]
"ACS.exe"+D77F34: 66 85 C0                 -  test ax,ax
"ACS.exe"+D77F37: 0F 84 A8 01 00 00        -  je ACS.exe+D780E5
"ACS.exe"+D77F3D: 0F B7 C8                 -  movzx ecx,ax
"ACS.exe"+D77F40: 33 D2                    -  xor edx,edx
"ACS.exe"+D77F42: 41 8B C6                 -  mov eax,r14d

</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>26074</ID>
                      <Description>"(Always make a backup of your game saves first !)"</Description>
                      <Color>0000FF</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>26075</ID>
                      <Description>"(it can take some time to build the list...)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>26076</ID>
                      <Description>"Build Icon List..."</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{ Game   : ACU.exe
  Version: 
  Date   : 2020-05-29
  Author : Paul44

  Manages mapicon marker...
}

[ENABLE]
//  UIMinimapManager... +58: list of icons...
// aobscanmodule(INJECT,ACU.exe,4C 8D 4C 24 78 4C 8B C6 48 8B CB)

{$lua}
local f = nil
local nChoice = 0
local sMsg = ''
local sInfo = ''
local sListItems
addrStruct = ''
strStruct = ''


function setCollision(obj)
    -- dis/enable collision - taken from #Sunbeam's ACS table...
    if aTeleportInfo[5] == nil then return end
    local addrFlagCollision = getAddress("[[[pEntity]+0x88]+0x110]+0x4A")
    --print(string.format('%X - %d',addrFlagCollision,getRef(obj.Tag)[1]))
    local nElem = getRef(obj.Tag)[1]
    writeBytes(addrFlagCollision,aTeleportInfo[5][nElem])
end

--main routines...
function listMapIcons()
  local addrCheckPtr = readPointer(getAddress("pUIMapCheck1"))
  local addrUIicon = readPointer(getAddress("[pUIMinimapMgr]")+0x60)
  if ( addrCheckPtr == 0 or addrCheckPtr == nil or addrUIicon == 0 or addrUIicon == nil) then
     local sText = "The 'check_Pointers' are not collected yet ! \n" ..
                  'Swap back ingame, open/close your map and then return here...'
     local nType = mtInformation
     local nButton = mbOK
     messageDialog(sText, nType, nButton)
     return
  end


  local fHeight = readFloat(getAddress("nDropHeight"))
  aTeleportInfo = {fHeight,106,nil,nil,{0,1}}
  execRoutine = setCollision

  synchronize(function()
      -- painting form...
      f = IconList
      f.Show()
      f.Width = 800
      f.Height = 600
      f.Caption = 'ACS - Icon Teleport...'
      local lBox = f.ListBox
      lBox.Clear()
      local lbTitle = f.IconTitle
      lbTitle.Caption = 'One moment please... processing...'
      local lbInfo = f.IconInfo
      lbInfo.Caption = ''
      local lbHead = f.IconHead
      lbHead.Caption = '     #       addrIcon+offs    Type         X             Y             Z     (* = Enabled)'
      local lbMsg = f.IconMessage
      lbMsg.Caption = "Best teleport while 'Map' is selected!\n" .. "(also make sure 'God Mode' is enabled)"
      local cbGod = f.GodMode
      f.GodMode.Caption  = 'God Mode:'
      f.GodMode.Visible = false
      f.pCoord.Visible = true
      f.Structure.Visible = false
      f.RecycleBin.Visible = false

      -- enable 'God Mode' script...
      local al = getAddressList()
      local mr = al.getMemoryRecordByID(106)
      mr.Active = true

      -- reset coordinates...
      local xCoord = f.CoordX
      xCoord.Caption = ''
      local yCoord = f.CoordY
      yCoord.Caption = ''
      local zCoord = f.CoordZ
      zCoord.Caption = ''
      f.PlayerX.Caption = ''
      f.PlayerY.Caption = ''
      f.PlayerZ.Caption = ''

      lbTitle.Caption = string.format('UIMinimapManager: {%X+%X}',getAddress("[pUIMinimapMgr]"),0x60)
      mr = al.getMemoryRecordByID(26077)
      local sInfo = mr.DropDownList[nChoice+1]
      sInfo = sInfo:match(":(.*)")
      lbInfo.Caption = sInfo
  end)

    local bContinue = true
    local nCount = 0
    sListItems.beginUpdate()
    while (bContinue) do
        local addrIcon = readPointer(addrUIicon+nCount*8)
        local addrCheck =  readPointer(addrIcon)
        if (addrCheck ~= addrCheckPtr) then
            bContinue = false
            break
        end
        --write(string.format('(%d)',nCount))
        if (readSmallInteger(addrIcon+0x12) == 0x8000) then
          local addrInfo = readPointer(addrIcon+0x18)                -- UIMinimapManager
          local bShown = ""
          if (readQword(addrInfo) ~= 0) then
            local iconCat = readInteger(addrInfo+0x14)
            if (readInteger(addrIcon+0xB0) ~= 0) then bShown = "(*)" end   --- ???
            -- get Entity record ~ +D4: ID = 0 !
            addrInfo = readPointer(addrInfo)
            local coordX = readFloat(addrInfo+0x60)
            local coordY = readFloat(addrInfo+0x64)
            local coordZ = readFloat(addrInfo+0x68)

            local sName = string.format('(%04d) {%12X+%04X} - %03d  | %9.3f  ~  %9.3f  ~  %9.3f | %s',
                                             nCount,addrIcon,nCount*8,iconCat,coordX,coordY,coordZ,bShown)

            sListItems.Text = sListItems.Text .. sName
            if (nCount % 500 == 0) then
                synchronize(function()
                    f.ListBox.Items.Text = sListItems.Text
                end)
            end
            --print(string.format('(%d) {%X+%X} - %d:  [ %f  ~  %f  ~  %f ]   %s',nCount,addrIcon,nCount*8,iconCat,coordX,coordY,coordZ,bShown))
            --break
          end
        end
        nCount = nCount + 1
    end
    synchronize(function()
        f.ListBox.Items.Text = sListItems.Text
    end)
    sListItems.endUpdate()
end -- list mapicons...

function showMapIcons()
  local addrIconList = 0
  addrIconList = readPointer(getAddressSafe("pIconList"))
  if ( addrIconList == 0 or addrIconList == nil) then
     local sText = "The 'check_Pointers' are not collected yet ! \n" ..
                  'Swap back ingame, open/close your map and then return here...'
     local nType = mtInformation
     local nButton = mbOK
     messageDialog(sText, nType, nButton)
     return
  end

  local fHeight = readFloat(getAddress("nDropHeight"))
  aTeleportInfo = {fHeight,106,nil,nil,{0,1}}
  execRoutine = setCollision

  synchronize(function()
      -- painting form...
      f = IconList
      f.Show()
      f.Width = 950
      f.Height = 600
      f.Caption = 'ACU - Icon Teleport...'
      local lBox = f.ListBox
      lBox.Clear()
      local lbTitle = f.IconTitle
      lbTitle.Caption = 'One moment please... processing...'
      local lbInfo = f.IconInfo
      lbInfo.Caption = ''
      local lbHead = f.IconHead
      lbHead.Caption = '   #         addrIcon+Offs   Category    X-coord       Y-coord       Z-coord  [Shown Opened Collected]'
      local lbMsg = f.IconMessage
      lbMsg.Caption = "Best teleport while 'Map' is selected!\n" .. "(also make sure 'God Mode' is enabled)"
      local cbGod = f.GodMode
      f.GodMode.Caption  = 'God Mode:'
      f.GodMode.Visible = false
      f.pCoord.Visible = true
      f.Structure.Visible = false
      f.RecycleBin.Visible = false

      --
      --local mr = al.getMemoryRecordByID(14268)
      --mr.Active = true
      --mr = al.getMemoryRecordByID(106)
      --mr.Active = true

      -- reset coordinates...
      local xCoord = f.CoordX
      xCoord.Caption = ''
      local yCoord = f.CoordY
      yCoord.Caption = ''
      local zCoord = f.CoordZ
      zCoord.Caption = ''
      f.PlayerX.Caption = ''
      f.PlayerY.Caption = ''
      f.PlayerZ.Caption = ''

      lbTitle.Caption = string.format('Icon List: {%X}',addrIconList)
      local al = getAddressList()
      mr = al.getMemoryRecordByID(26077)
      local sInfo = mr.DropDownList[nChoice]
      sInfo = sInfo:match(":(.*)")
      lbInfo.Caption = sInfo
  end)

  local aItem = {[1] = 'Beer Bottle', [2] = 'Golden Chest', [5] = 'White Chest', [6] = 'Pressed Flower', [7] = 'Illustration',
                [13] = 'Royal Correspondence', [14] = 'Secret of London', [18] = 'Helix glitch', [9] = 'Letter f/t Front'}

  local bContinue = true
  local nCount = 0
  local nOffset = 0
  sListItems.beginUpdate()
  while (bContinue) do
      local bProcess = false
      local bShowUpdate = false

      local addrIcon = readPointer(addrIconList+nOffset*8)
      local checkRec = readPointer(addrIcon)
      --print(string.format('(%d) - {%X+%X}',nCount+1,addrIcon,nOffset*8))
      if (checkRec == 0 or checkRec == nil) then break end

      -- PermanentIconCollectableCondition...
      addrIcon = readPointer(addrIcon+0x08)
      bMapShow = readBytes(addrIcon+0x51)
      bChestOpen = readBytes(addrIcon+0x50)
      bItemCollected = readBytes(addrIcon+0x74)

        local coordX = readFloat(addrIcon+0x20)
        local coordY = readFloat(addrIcon+0x24)
        local coordZ = readFloat(addrIcon+0x28)

        local catVal1 = 0
        local catVal2 = 0
        local addrCat = addrIcon+0x60
        --local addrCat = addrIcon+0x68
        addrCat = readPointer(addrCat)
        if not (addrCat == 0 or addrCat == nil) then
          addrCat = readPointer(addrCat)
          if not (addrCat == 0 or addrCat == nil) then
              catVal1 = readInteger(addrCat+0x28)
              if (catVal1 == nil) then catVal1 = 0 end
              catVal2 = readInteger(addrCat+0x2C)
              if (catVal2 == nil) then catVal2 = 0 end
          end
        end

        if (nChoice == 1) then bProcess = true end
        if (nChoice == 2 and bMapShow == 0) then bProcess = true end
        if (nChoice == 3 and bChestOpen == 0 and bItemCollected == 0 and (catVal2 == 2 or catVal2 == 5)) then bProcess = true end
        if (nChoice == 4 and bItemCollected == 0) then bProcess = true end
        --
        if (nChoice == 6 and catVal2 == 5 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 7 and catVal2 == 2 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 8 and catVal2 == 1 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 9 and catVal2 == 6 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 10 and catVal2 == 7 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 11 and catVal2 == 13 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 12 and catVal2 == 14 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 13 and catVal2 == 18 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 14 and catVal2 == 9 and bMapShow == 0) then bShowUpdate = true end

        if (bShowUpdate) then
           writeBytes(addrIcon+0x51,1)
        end

        if (bProcess or bShowUpdate) then
            local sItem = aItem[catVal2] or ''
            local sName = string.format('(%04d) {%12X+%04X} - %02d/%03d | %9.3f  ~  %9.3f  ~  %9.3f | [%d  -   %d   -   %d]  %s',
                nCount+1,addrIcon,nOffset*8,catVal1,catVal2,coordX,coordY,coordZ,bMapShow,bChestOpen,bItemCollected,sItem)

            sListItems.Text = sListItems.Text .. sName
            if (nCount % 500 == 0) then
                synchronize(function()
                    f.ListBox.Items.Text = sListItems.Text
                end)
            end
            nCount = nCount +1
        end
        --break
        nOffset = nOffset + 1
    end
    synchronize(function()
        f.ListBox.Items.Text = sListItems.Text
    end)
    sListItems.endUpdate()
end -- show mapicons...


-- main routine...
  nChoice = readBytes(getAddress("pIconBChoice"),1)
  if not (nChoice &gt; 0 and nChoice &lt; 16 and nChoice ~= 5) then return end
  sListItems = createStringList()

  if (nChoice == 15) then listMapIcons() else showMapIcons() end
  sListItems.destroy()

{$asm}
test al,al

pIconBChoice:
db 0


[DISABLE]

pIconBChoice:
db 0


{
// ORIGINAL CODE - INJECTION POINT: "ACU.exe"+8549A5

"ACU.exe"+854972: 48 89 44 24 78           -  mov [rsp+78],rax
"ACU.exe"+854977: F0 FF 40 08              - lock  inc [rax+08]
"ACU.exe"+85497B: 48 8B 94 24 80 00 00 00  -  mov rdx,[rsp+00000080]
"ACU.exe"+854983: F0 FF 4A 08              - lock  dec [rdx+08]
"ACU.exe"+854987: 75 15                    -  jne ACU.exe+85499E
"ACU.exe"+854989: F7 42 0C FF FF FF 00     -  test [rdx+0C],00FFFFFF
"ACU.exe"+854990: 75 0C                    -  jne ACU.exe+85499E
"ACU.exe"+854992: 48 8D 0D D7 71 A0 04     -  lea rcx,[ACU.exe+525BB70]
"ACU.exe"+854999: E8 42 7F E9 01           -  call ACU.exe+26EC8E0
"ACU.exe"+85499E: 48 8B 15 CB 2D 94 04     -  mov rdx,[ACU.exe+5197770]
// ---------- INJECTING HERE ----------
"ACU.exe"+8549A5: 4C 8D 4C 24 78           -  lea r9,[rsp+78]
// ---------- DONE INJECTING  ----------
"ACU.exe"+8549AA: 4C 8B C6                 -  mov r8,rsi
"ACU.exe"+8549AD: 48 8B CB                 -  mov rcx,rbx
"ACU.exe"+8549B0: E8 FB 43 01 00           -  call ACU.exe+868DB0
"ACU.exe"+8549B5: 48 8B F0                 -  mov rsi,rax
"ACU.exe"+8549B8: 48 85 C0                 -  test rax,rax
"ACU.exe"+8549BB: 0F 84 80 00 00 00        -  je ACU.exe+854A41
"ACU.exe"+8549C1: E8 6A 3C 9B 01           -  call ACU.exe+2208630
"ACU.exe"+8549C6: 48 8B CE                 -  mov rcx,rsi
"ACU.exe"+8549C9: 48 8B D0                 -  mov rdx,rax
"ACU.exe"+8549CC: E8 2F C0 47 01           -  call ACU.exe+1CD0A00
}
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>26077</ID>
                          <Description>"Allow To Run:"</Description>
                          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Disabled&gt;
1:1. List full icon overview
2:2. List icons not shown on map yet
3:3. List chests not opened yet
4:4. List items not collected yet
16:---
6:A. Show White Chests on map now
7:B. Show Golden Chests on map now
8:C. Show Beer Bottles on map now
9:D. Show Pressed Flowers on map now
10:E. Show Illustrations on map now
11:F. Show Royal Correspondences on map now
12:G. Show Secrets of London on map now
13:H. Show Helix glitch on map now
14:I. Show Letters f/t Front on map now
17:---
15:15. List Map/System Icons
</DropDownList>
                          <Color>FF00FF</Color>
                          <VariableType>Byte</VariableType>
                          <Address>pIconBChoice</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>26082</ID>
                          <Description>"Drop Height"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>nDropHeight</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>88495</ID>
                  <Description>"Save &amp; Restore Coordinates..."</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Disabled&gt;
1:Enabled
2:Enabled &amp; Keep Coordinates
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>bCoordSave</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>89203</ID>
                      <Description>"(if nothing happens, you have not yet selected your choice of restoring...)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>88483</ID>
                      <Description>"([F11] = Save - [F12] = Restore)"</Description>
                      <Options moHideChildren="1"/>
                      <Color>FF00FF</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>88497</ID>
                          <Description>"Drop Height"</Description>
                          <VariableType>Float</VariableType>
                          <Address>nDropHeight</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88492</ID>
                          <Description>"Save..."</Description>
                          <Color>808080</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : Dishonored2.exe
  Version:
  Date   : 2022-08-12
  Author : Paul44

  saves coordinates...
}

[ENABLE]
{$lua}
  local nChoice = readBytes(getAddress('bCoordSave'))
  local addrEntity = getAddress("[pEntity]")

  coordSaveRestore(0,addrEntity,88492,nChoice)

[DISABLE]

</AssemblerScript>
                          <Hotkeys>
                            <Hotkey>
                              <Action>Activate</Action>
                              <Keys>
                                <Key>122</Key>
                              </Keys>
                              <ID>0</ID>
                              <ActivateSound TTS="EN">Coordinates Saved</ActivateSound>
                            </Hotkey>
                          </Hotkeys>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88493</ID>
                          <Description>"Restore..."</Description>
                          <Color>808080</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : Dishonored2.exe
  Version:
  Date   : 2022-08-12
  Author : Paul44

  restores saved coordinates...
}

[ENABLE]
{$lua}
  local nChoice = readBytes(getAddress('bCoordSave'))
  local addrEntity = getAddress("[pEntity]")

  -- always enable godmode...
  local mr = getAddressList().getMemoryRecordByID(106)
  mr.Active = true
  -- disable collision...
  local addrFlagCollision = getAddress("[[[pEntity]+0x88]+0x110]+0x4A")
  writeBytes(addrFlagCollision,0)

  coordSaveRestore(1,addrEntity,88493,nChoice)

  writeBytes(addrFlagCollision,1)


[DISABLE]


</AssemblerScript>
                          <Hotkeys>
                            <Hotkey>
                              <Action>Activate</Action>
                              <Keys>
                                <Key>123</Key>
                              </Keys>
                              <ID>0</ID>
                              <ActivateSound TTS="EN">Coordinates Restored</ActivateSound>
                            </Hotkey>
                          </Hotkeys>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>88494</ID>
                      <Description>"Saved Coordinates..."</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>88815</ID>
                          <Description>"Drop Height"</Description>
                          <VariableType>Float</VariableType>
                          <Address>nDropHeight</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88488</ID>
                          <Description>"Xval"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>OrigCoord</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88489</ID>
                          <Description>"Yval"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>OrigCoord+4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88490</ID>
                          <Description>"Zval"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>OrigCoord+8</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>89196</ID>
              <Description>"Experience &amp; Skills..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : ACU.exe
  Version:
  Date   : 2020-05-24
  Author : Paul44

  Collects Experience info...
}

[ENABLE]
{$lua}

-- PlayerProgressionManager...
getStaticAddr("C7 44 24 48 40 80 00 00 48",4,"pProgression",2)

{$asm}
 
 
[DISABLE]


{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+AC147C

ACS_Gold.exe+AC1453: 57                       - push rdi
ACS_Gold.exe+AC1454: 41 54                    - push r12
ACS_Gold.exe+AC1456: 48 81 EC 68 02 00 00     - sub rsp,00000268
ACS_Gold.exe+AC145D: 48 89 58 08              - mov [rax+08],rbx
ACS_Gold.exe+AC1461: 48 89 68 10              - mov [rax+10],rbp
ACS_Gold.exe+AC1465: 48 89 70 20              - mov [rax+20],rsi
ACS_Gold.exe+AC1469: 4C 89 68 E8              - mov [rax-18],r13
ACS_Gold.exe+AC146D: 4C 89 70 E0              - mov [rax-20],r14
ACS_Gold.exe+AC1471: 4C 89 78 D8              - mov [rax-28],r15
ACS_Gold.exe+AC1475: 48 8B 05 FC 5A 61 06     - mov rax,[ACS_Gold.exe+70D6F78]
// ---------- INJECTING HERE ----------
ACS_Gold.exe+AC147C: C7 44 24 48 40 80 00 00  - mov [rsp+48],00008040
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+AC1484: 48 8D 7C 24 50           - lea rdi,[rsp+50]
ACS_Gold.exe+AC1489: 48 89 7C 24 40           - mov [rsp+40],rdi
ACS_Gold.exe+AC148E: 0F B7 A8 92 01 00 00     - movzx ebp,word ptr [rax+00000192]
ACS_Gold.exe+AC1495: 48 8B 98 88 01 00 00     - mov rbx,[rax+00000188]
ACS_Gold.exe+AC149C: C1 E5 03                 - shl ebp,03
ACS_Gold.exe+AC149F: 45 32 E4                 - xor r12l,r12l
ACS_Gold.exe+AC14A2: 45 33 ED                 - xor r13d,r13d
ACS_Gold.exe+AC14A5: 48 03 EB                 - add rbp,rbx
ACS_Gold.exe+AC14A8: 44 8B F2                 - mov r14d,edx
ACS_Gold.exe+AC14AB: 4C 8B F9                 - mov r15,rcx
}

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>89167</ID>
                  <Description>"(collect any collectible and/or FastTravel to update...)"</Description>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>89176</ID>
                  <Description>"Skills Earned"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pProgression</Address>
                  <Offsets>
                    <Offset>11C</Offset>
                    <Offset>0</Offset>
                    <Offset>188</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>89177</ID>
                      <Description>"(# PlayerProgressionCharacterData)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pProgression</Address>
                      <Offsets>
                        <Offset>192</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>89201</ID>
                  <Description>"Experience Range (Jacob)"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pProgression</Address>
                  <Offsets>
                    <Offset>124</Offset>
                    <Offset>0</Offset>
                    <Offset>188</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>89202</ID>
                      <Description>"(# PlayerProgressionCharacterData)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pProgression</Address>
                      <Offsets>
                        <Offset>192</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>89199</ID>
                  <Description>"Experience Range (Evie)"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pProgression</Address>
                  <Offsets>
                    <Offset>124</Offset>
                    <Offset>8</Offset>
                    <Offset>188</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>89200</ID>
                      <Description>"(# PlayerProgressionCharacterData)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pProgression</Address>
                      <Offsets>
                        <Offset>192</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>89197</ID>
                  <Description>"Experience Range (Lydia)"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pProgression</Address>
                  <Offsets>
                    <Offset>124</Offset>
                    <Offset>10</Offset>
                    <Offset>188</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>89198</ID>
                      <Description>"(# PlayerProgressionCharacterData)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pProgression</Address>
                      <Offsets>
                        <Offset>192</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>89169</ID>
                  <Description>"DLC Jack The Ripper"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <GroupHeader>1</GroupHeader>
                  <Address>pProgression</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>20</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>89170</ID>
                      <Description>"Skills Earned"</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+11C</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>89171</ID>
                          <Description>"(# PlayerProgressionCharacterData)"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>2 Bytes</VariableType>
                          <Address>pProgression</Address>
                          <Offsets>
                            <Offset>192</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>89172</ID>
                      <Description>"Experience Range (Evie)"</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+124</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>89180</ID>
                  <Description>"Experience Settings..."</Description>
                  <Options moDeactivateChildrenAsWell="1"/>
                  <Color>FF00FF</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>89000</ID>
                      <Description>"Experience Threshold"</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pProgression</Address>
                      <Offsets>
                        <Offset>48</Offset>
                        <Offset>2B8</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>89001</ID>
                          <Description>"(# PlayerProgressionCharacterData)"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>2 Bytes</VariableType>
                          <Address>pProgression</Address>
                          <Offsets>
                            <Offset>192</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>89178</ID>
                      <Description>"Skill Multiplier"</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pProgression</Address>
                      <Offsets>
                        <Offset>4C</Offset>
                        <Offset>2B8</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>89179</ID>
                          <Description>"(# PlayerProgressionCharacterData)"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>2 Bytes</VariableType>
                          <Address>pProgression</Address>
                          <Offsets>
                            <Offset>192</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Level Up..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : ACS.exe
  Version: 
  Date   : 2020-06-13
  Author : Paul44

  Allows you to edit player's current Level...
}

[ENABLE]
// static struct = MainSkillProgression
// level: +10
aobscanmodule(LevelUp,$process,48 8B 81 50 06 00 00 8B 40 10)
registersymbol(LevelUp)
alloc(newmem,$100)

label(code)
label(return)

newmem:
  push rbx
  push r15
  mov rbx,[rcx+00000650]
  mov r15,pLevelUp
  mov [r15],rbx
  pop r15
  pop rbx
code:
  mov rax,[rcx+00000650]
  mov eax,[rax+10]
  ret
  db CC CC CC
  jmp return

LevelUp:
  jmp far newmem
return:


[DISABLE]

LevelUp:
  db 48 8B 81 50 06 00 00 8B 40 10 C3 CC CC CC

unregistersymbol(LevelUp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+A84A57

"ACS.exe"+A84A47: CC                                -  int 3 
"ACS.exe"+A84A48: CC                                -  int 3 
"ACS.exe"+A84A49: CC                                -  int 3 
"ACS.exe"+A84A4A: CC                                -  int 3 
"ACS.exe"+A84A4B: CC                                -  int 3 
"ACS.exe"+A84A4C: CC                                -  int 3 
"ACS.exe"+A84A4D: CC                                -  int 3 
"ACS.exe"+A84A4E: CC                                -  int 3 
"ACS.exe"+A84A4F: CC                                -  int 3 
// ---------- INJECTING HERE ----------
"ACS.exe"+A84A50: 48 8B 81 50 06 00 00              -  mov rax,[rcx+00000650]
"ACS.exe"+A84A57: 8B 40 10                          -  mov eax,[rax+10]
"ACS.exe"+A84A5A: C3                                -  ret 
"ACS.exe"+A84A5B: CC                                -  int 3 
"ACS.exe"+A84A5C: CC                                -  int 3
"ACS.exe"+A84A5D: CC                                -  int 3 
// ---------- DONE INJECTING  ----------
"ACS.exe"+A84A5E: CC                                -  int 3
"ACS.exe"+A84A5F: CC                                -  int 3 
"ACS.exe"+A84A60: B8 C0 91 DD DA                    -  mov eax,DADD91C0
"ACS.exe"+A84A65: C3                                -  ret 
"ACS.exe"+A84A66: CC                                -  int 3 
"ACS.exe"+A84A67: CC                                -  int 3 
"ACS.exe"+A84A68: CC                                -  int 3 
"ACS.exe"+A84A69: CC                                -  int 3 
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>14305</ID>
                  <Description>"(Level not saved ~ only allows you to craft/edit/wear above Level items)"</Description>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14289</ID>
                  <Description>"Level"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pLevelUp</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14633</ID>
              <Description>"Freeze Mission Timer..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14471</ID>
                  <Description>"Freeze Mission Timer I..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACU.exe
  Version: 
  Date   : 2020-09-06
  Author : Paul44

  Manages mission timer(s)..
  - Seq 5 Mem 6 - The lady with the lamp: 8 min
  - Seq 7 Mem 2 - The bodyguard: 1 min
    (note: disable script once carriage is hijacked to allow continuation !)
  - ...
}

[ENABLE]
// struct: TimerOperatorData
// D0: flag timer pause ~ will continue in background!
aobscanmodule(MissionTimer,$process,74 09 4C 8B 81 C0 00 00 00)
registersymbol(MissionTimer)
alloc(newmem,$100)

globalalloc(pMissionTimer,8,$process)
globalalloc(IntTimerDiffer,4,$process)
globalalloc(bMissionTimer,1,$process)

pMissionTimer:
dq (int)0

IntTimerDiffer:
dd (int)0

bMissionTimer:
db 0


label(code)
label(code2)
label(code3)
label(return)

newmem:
  je short @f
  mov r8,[rcx+000000C0]
  jmp code3
@@:
  mov rax,[rcx+000000C8]
  mov r8,[rax]
code3:
  mov rax,[rcx+000000B8]
@@:
  push rbx
  push rdi
  push r15
  // 2 records:
  //* first record manages main timer...
  //* 2nd one checks/gives warning "not reaching asylum in time"...
  test rcx,rcx
  je code
  mov r15,pMissionTimer
  cmp qword ptr [r15],0
  jne short @f
  mov [r15],rcx
@@:
  mov r15,bMissionTimer
  cmp byte ptr [r15],1
  jne code2
  mov ebx,[rcx+B8]
  mov rdi,[rcx+C8]
  mov edi,[rdi]
  mov r15,IntTimerDiffer
  cmp dword ptr [r15],0
  jne short @f
  sub ebx,edi
  mov r15,IntTimerDiffer
  mov [r15],ebx
@@:
  add edi,dword ptr [r15]
  mov [rcx+B8],edi
  jmp code
code2:
  mov r15,IntTimerDiffer
  mov dword ptr [r15],0
code:
  pop r15
  pop rdi
  pop rbx
  jmp return

MissionTimer:
  jmp far newmem
  db 90 90 90 90 90 90 90 90 90 90 90 90 90 90
return:


[DISABLE]

pMissionTimer:
dq (int)0

IntTimerDiffer:
dd (int)0

bMissionTimer:
db 0


MissionTimer:
  db 74 09 4C 8B 81 C0 00 00 00 EB 0A 48 8B 81 C8 00 00 00 4C 8B 00 48 8B 81 B8 00 00 00

unregistersymbol(MissionTimer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+1053657

ACS_Gold.exe+1053647: CC                    - int 3
ACS_Gold.exe+1053648: CC                    - int 3
ACS_Gold.exe+1053649: CC                    - int 3
ACS_Gold.exe+105364A: CC                    - int 3
ACS_Gold.exe+105364B: CC                    - int 3
ACS_Gold.exe+105364C: CC                    - int 3
ACS_Gold.exe+105364D: CC                    - int 3
ACS_Gold.exe+105364E: CC                    - int 3
ACS_Gold.exe+105364F: CC                    - int 3
ACS_Gold.exe+1053650: 80 B9 D1 00 00 00 00  - cmp byte ptr [rcx+000000D1],00
// ---------- INJECTING HERE ----------
ACS_Gold.exe+1053657: 74 09                 - je ACS_Gold.exe+1053662
ACS_Gold.exe+1053659: 4C 8B 81 C0 00 00 00  - mov r8,[rcx+000000C0]
ACS_Gold.exe+1053660: EB 0A                 - jmp ACS_Gold.exe+105366C
ACS_Gold.exe+1053662: 48 8B 81 C8 00 00 00  - mov rax,[rcx+000000C8]
ACS_Gold.exe+1053669: 4C 8B 00              - mov r8,[rax]
ACS_Gold.exe+105366C: 48 8B 81 B8 00 00 00  - mov rax,[rcx+000000B8]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+1053673: 49 3B C0              - cmp rax,r8
ACS_Gold.exe+1053676: 73 04                 - jae ACS_Gold.exe+105367C
ACS_Gold.exe+1053678: 33 C0                 - xor eax,eax
ACS_Gold.exe+105367A: EB 03                 - jmp ACS_Gold.exe+105367F
ACS_Gold.exe+105367C: 49 2B C0              - sub rax,r8
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14472</ID>
                      <Description>"(you can also increment 'Remaining time' ~ pause timer first !)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14473</ID>
                      <Description>"Timer"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Running&gt;
1:&lt;Paused&gt;
</DropDownList>
                      <Color>FF00FF</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bMissionTimer</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14474</ID>
                      <Description>"Remaining time"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>IntTimerDiffer</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14478</ID>
                      <Description>"Remaining Time (secs)"</Description>
                      <Color>808080</Color>
                      <VariableType>Float</VariableType>
                      <Address>[pMissionTimer]+9C</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>87968</ID>
                      <Description>"More Info..."</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14475</ID>
                          <Description>"Start-time (incrementing)"</Description>
                          <Color>808080</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pMissionTimer</Address>
                          <Offsets>
                            <Offset>0</Offset>
                            <Offset>C8</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14476</ID>
                          <Description>"End-time"</Description>
                          <Color>808080</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>[pMissionTimer]+B8</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14477</ID>
                          <Description>"Max Time limit (secs)"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>[pMissionTimer]+98</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14479</ID>
                          <Description>"Elapsed Time (secs)"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>[pMissionTimer]+A0</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14480</ID>
                          <Description>"Pause system flag (0=Pause/1=Continue)"</Description>
                          <Color>808080</Color>
                          <VariableType>Byte</VariableType>
                          <Address>[pMissionTimer]+D0</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14481</ID>
                          <Description>"MissionDisplayedTimerCondition ~ Base"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>C0C0C0</Color>
                          <VariableType>8 Bytes</VariableType>
                          <Address>pMissionTimer</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14653</ID>
                  <Description>"Freeze Mission Timer II..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS.exe
  Version:
  Date   : 2020-09-29
  Author : Paul44

  Manages mission timer(s)..
  - Seq 8 Mem 3 - Fun and games: 2 min
  - Seq 8 Mem 4 - Final act: 1.30 min
  - ...
}

[ENABLE]
// struct: MissionTimedCondition
aobscanmodule(MissionTimer2,$process,74 09 48 8B 83 98 00 00 00 EB 0A 48 8B 83 A0 00 00 00 48 8B 00 48 8B)
registersymbol(MissionTimer2)
alloc(newmem,$100)

globalalloc(pMissionTimer2,8,$process)
globalalloc(IntTimerDiffer2,4,$process)
globalalloc(bMissionTimer2,1,$process)

pMissionTimer2:
dq (int)0

IntTimerDiffer2:
dd (int)0

bMissionTimer2:
db 0


label(code)
label(code2)
label(code3)
label(return)

newmem:
  je short @f
  mov rax,[rbx+00000098]
  jmp code3
@@:
  mov rax,[rbx+000000A0]
  mov rax,[rax]
code3:
  mov rcx,[rbx+00000090]
@@:
  push rcx
  push rdi
  push r15
  test rbx,rbx
  je code
  mov r15,pMissionTimer2
  mov [r15],rbx
@@:
  mov r15,bMissionTimer2
  cmp byte ptr [r15],1
  mov r15,IntTimerDiffer2
  jne code2
  mov rcx,[rbx+90]
  mov rdi,[rbx+A0]
  mov rdi,[rdi]
  cmp [r15],0
  jne short @f
  sub rcx,rdi
  mov [r15],rcx
@@:
  add rdi,[r15]
  mov [rbx+90],rdi
  jmp code
code2:
  mov [r15],0
code:
  pop r15
  pop rdi
  pop rcx
  jmp return

MissionTimer2:
  jmp far newmem
  db 90 90 90 90 90 90 90 90 90 90 90 90 90 90
return:


[DISABLE]

pMissionTimer2:
dq (int)0

IntTimerDiffer2:
dd (int)0

bMissionTimer2:
db 0


MissionTimer2:
  db 74 09 48 8B 83 98 00 00 00 EB 0A 48 8B 83 A0 00 00 00 48 8B 00 48 8B 8B 90 00 00 00

unregistersymbol(MissionTimer2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+18FF570

ACS_Gold.exe+18FF548: 74 12                 - je ACS_Gold.exe+18FF55C
ACS_Gold.exe+18FF54A: B0 01                 - mov al,01
ACS_Gold.exe+18FF54C: 48 8B 5C 24 30        - mov rbx,[rsp+30]
ACS_Gold.exe+18FF551: 48 8B 74 24 38        - mov rsi,[rsp+38]
ACS_Gold.exe+18FF556: 48 83 C4 20           - add rsp,20
ACS_Gold.exe+18FF55A: 5F                    - pop rdi
ACS_Gold.exe+18FF55B: C3                    - ret
ACS_Gold.exe+18FF55C: 40 38 BB B4 00 00 00  - cmp [rbx+000000B4],dil
ACS_Gold.exe+18FF563: 0F 85 A5 00 00 00     - jne ACS_Gold.exe+18FF60E
ACS_Gold.exe+18FF569: 40 38 BB A9 00 00 00  - cmp [rbx+000000A9],dil
// ---------- INJECTING HERE ----------
ACS_Gold.exe+18FF570: 74 09                 - je ACS_Gold.exe+18FF57B
ACS_Gold.exe+18FF572: 48 8B 83 98 00 00 00  - mov rax,[rbx+00000098]
ACS_Gold.exe+18FF579: EB 0A                 - jmp ACS_Gold.exe+18FF585
ACS_Gold.exe+18FF57B: 48 8B 83 A0 00 00 00  - mov rax,[rbx+000000A0]
ACS_Gold.exe+18FF582: 48 8B 00              - mov rax,[rax]
ACS_Gold.exe+18FF585: 48 8B 8B 90 00 00 00  - mov rcx,[rbx+00000090]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+18FF58C: 48 3B C8              - cmp rcx,rax
ACS_Gold.exe+18FF58F: 72 06                 - jb ACS_Gold.exe+18FF597
ACS_Gold.exe+18FF591: 48 8B F9              - mov rdi,rcx
ACS_Gold.exe+18FF594: 48 2B F8              - sub rdi,rax
ACS_Gold.exe+18FF597: 0F 57 C9              - xorps xmm1,xmm1
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14654</ID>
                      <Description>"(you can also increment 'Remaining time' ~ pause timer first !)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14655</ID>
                      <Description>"Timer"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Running&gt;
1:&lt;Paused&gt;
</DropDownList>
                      <Color>FF00FF</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bMissionTimer2</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14656</ID>
                      <Description>"Remaining time"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>IntTimerDiffer2</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14660</ID>
                      <Description>"Remaining Time (secs)"</Description>
                      <Color>808080</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>[pMissionTimer2]+BC</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>87976</ID>
                      <Description>"More Info..."</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14657</ID>
                          <Description>"Start-time (incrementing)"</Description>
                          <Color>808080</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pMissionTimer2</Address>
                          <Offsets>
                            <Offset>0</Offset>
                            <Offset>A0</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14658</ID>
                          <Description>"End-time"</Description>
                          <Color>808080</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>[pMissionTimer2]+90</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14659</ID>
                          <Description>"Max Time limit (secs)"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>[pMissionTimer2]+B8</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14662</ID>
                          <Description>"Reset (system flag (0=Reset/1)"</Description>
                          <Color>808080</Color>
                          <VariableType>Byte</VariableType>
                          <Address>[pMissionTimer2]+A8</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14663</ID>
                          <Description>"MissionDisplayedTimerCondition ~ Base"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>C0C0C0</Color>
                          <VariableType>8 Bytes</VariableType>
                          <Address>pMissionTimer2</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14536</ID>
                  <Description>"Freeze Mission timer III..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACU.exe
  Version:
  Date   : 2020-09-29
  Author : Paul44

  Manage mission timer(s)..
  - Seq 5 Mem 6 - The lady with the lamp: 1 min
  - ...

}

[ENABLE]
// MissionDisplayedTimerCondition: -90
// struct: EventListener: -48
aobscanmodule(ChronoTimer,$process,CC 80 79 21 00 74 06 48 8B 51 10)
registersymbol(ChronoTimer)
alloc(newmem,$100)

globalalloc(pChronoTimer,8,$process)
globalalloc(IntChronoDiffer,4,$process)
globalalloc(IntChronoSecs,4,$process)
globalalloc(bChronoTimer,1,$process)
globalalloc(intDiv,4,$process)

IntChronoDiffer:
dd (int)0

bChronoTimer:
db 0

intDiv:
dd (int)30000                       //#7530

label(code)
label(code2)
label(code3)
label(return)

newmem:
  je short @f
  mov rdx,[rcx+10]
  jmp code3
@@:
  mov rax,[rcx+18]
  mov rdx,[rax]
code3:
  mov rax,[rcx+08]
@@:
  push rax
  push rbx
  push rdx
  push rdi
  push r15
  test rcx,rcx
  je code
  mov r15,pChronoTimer
  mov [r15],rcx
  xor rax,rax
  xor rbx,rbx
  xor rdi,rdi
  mov ebx,[rcx+8]
  mov rdi,[rcx+18]
  mov edi,[rdi]
  sub ebx,edi
  // get remaining time in secs...
  mov eax,ebx
  xor rdx,rdx
  mov r15,intDiv
  div dword ptr [r15]
  mov r15,IntChronoSecs
  mov dword ptr [r15],eax
  // dis/enable pause...
  mov r15,bChronoTimer
  cmp byte ptr [r15],1
  jne code2
  mov r15,IntChronoDiffer
  cmp dword ptr [r15],0
  jne short @f
  mov dword ptr [r15],ebx
@@:
  add edi,[r15]
  mov [rcx+8],edi
  jmp code
code2:
  mov r15,IntChronoDiffer
  mov dword ptr [r15],0
code:
  pop r15
  pop rdi
  pop rdx
  pop rbx
  pop rax
  jmp return

ChronoTimer+05:
  jmp far newmem
  db 90 90 90 90 90
return:


[DISABLE]

bChronoTimer:
db 0

ChronoTimer+05:
  db 74 06 48 8B 51 10 EB 07 48 8B 41 18 48 8B 10 48 8B 41 08

unregistersymbol(ChronoTimer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+20A584

ACS_Gold.exe+20A56D: 49 03 CB        - add rcx,r11
ACS_Gold.exe+20A570: 74 EE           - je ACS_Gold.exe+20A560
ACS_Gold.exe+20A572: 0F B6 41 0A     - movzx eax,byte ptr [rcx+0A]
ACS_Gold.exe+20A576: 48 8B 5C 24 08  - mov rbx,[rsp+08]
ACS_Gold.exe+20A57B: C3              - ret
ACS_Gold.exe+20A57C: CC              - int 3
ACS_Gold.exe+20A57D: CC              - int 3
ACS_Gold.exe+20A57E: CC              - int 3
ACS_Gold.exe+20A57F: CC              - int 3
ACS_Gold.exe+20A580: 80 79 21 00     - cmp byte ptr [rcx+21],00
// ---------- INJECTING HERE ----------
ACS_Gold.exe+20A584: 74 06           - je ACS_Gold.exe+20A58C
ACS_Gold.exe+20A586: 48 8B 51 10     - mov rdx,[rcx+10]
ACS_Gold.exe+20A58A: EB 07           - jmp ACS_Gold.exe+20A593
ACS_Gold.exe+20A58C: 48 8B 41 18     - mov rax,[rcx+18]
ACS_Gold.exe+20A590: 48 8B 10        - mov rdx,[rax]
ACS_Gold.exe+20A593: 48 8B 41 08     - mov rax,[rcx+08]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+20A597: 48 3B C2        - cmp rax,rdx
ACS_Gold.exe+20A59A: 73 04           - jae ACS_Gold.exe+20A5A0
ACS_Gold.exe+20A59C: 33 C0           - xor eax,eax
ACS_Gold.exe+20A59E: EB 03           - jmp ACS_Gold.exe+20A5A3
ACS_Gold.exe+20A5A0: 48 2B C2        - sub rax,rdx
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14537</ID>
                      <Description>"(you can also increment 'Remaining time' ~ pause timer first !)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14538</ID>
                      <Description>"Timer"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Running&gt;
1:&lt;Paused&gt;
</DropDownList>
                      <Color>FF00FF</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bChronoTimer</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14539</ID>
                      <Description>"Remaining time"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>IntChronoDiffer</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14643</ID>
                      <Description>"Remaining time (secs)"</Description>
                      <Color>808080</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>[pChronoTimer]+34</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>87977</ID>
                      <Description>"More Info..."</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14540</ID>
                          <Description>"Start-time (incrementing)"</Description>
                          <Color>808080</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pChronoTimer</Address>
                          <Offsets>
                            <Offset>0</Offset>
                            <Offset>18</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14541</ID>
                          <Description>"End-time"</Description>
                          <Color>808080</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>[pChronoTimer]+8</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14543</ID>
                          <Description>"Max Time limit (secs)"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>[pChronoTimer]+30</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14546</ID>
                          <Description>"Remaining time (secs)"</Description>
                          <Color>808080</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>IntChronoSecs</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14544</ID>
                          <Description>"Reset (system flag  ~ 0=Reset/1)"</Description>
                          <Color>808080</Color>
                          <VariableType>Byte</VariableType>
                          <Address>[pChronoTimer]+20</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14545</ID>
                          <Description>"(Chrono) - Base"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>C0C0C0</Color>
                          <VariableType>8 Bytes</VariableType>
                          <Address>pChronoTimer</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14671</ID>
              <Description>"Perks..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : ACS_Steam.exe
  Version: 
  Date   : 2020-10-25
  Author : Paul44

  Get list of all perks...
}

[ENABLE]
// struct: AccomplishmentManager...
{$lua}
getStaticAddr("33 DB 41 0F B6 F0",4,"pAccomplishm",2)

local addrAccompl = readPointer(getAddress("pAccomplishm"))
local pVFT = readPointer(readPointer(readPointer(addrAccompl+0x30)))
pVFT = readPointer(pVFT)

local addrAccVFT = getAddress("pAccomplVFT")
writeQword(addrAccVFT,pVFT)
{$asm}

globalalloc(pAddrPerk,8,$process)
globalalloc(pPerkBChoice,1,$process)

pAddrPerk:
dq 0

pPerkBChoice:
db 0

[DISABLE]


{
// ORIGINAL CODE - INJECTION POINT: "ACS_Steam.exe"+17A1A6B

"ACS_Steam.exe"+17A1A49: 48 83 C4 20           -  add rsp,20
"ACS_Steam.exe"+17A1A4D: 5F                    -  pop rdi
"ACS_Steam.exe"+17A1A4E: C3                    -  ret 
"ACS_Steam.exe"+17A1A4F: CC                    -  int 3 
"ACS_Steam.exe"+17A1A50: 48 89 5C 24 08        -  mov [rsp+08],rbx
"ACS_Steam.exe"+17A1A55: 48 89 6C 24 10        -  mov [rsp+10],rbp
"ACS_Steam.exe"+17A1A5A: 48 89 74 24 18        -  mov [rsp+18],rsi
"ACS_Steam.exe"+17A1A5F: 57                    -  push rdi
"ACS_Steam.exe"+17A1A60: 48 83 EC 20           -  sub rsp,20
"ACS_Steam.exe"+17A1A64: 48 8B 05 35 BB 9A 05  -  mov rax,[ACS_Steam.exe+714D5A0]
// ---------- INJECTING HERE ----------
"ACS_Steam.exe"+17A1A6B: 33 DB                 -  xor ebx,ebx
"ACS_Steam.exe"+17A1A6D: 41 0F B6 F0           -  movzx esi,r8l
// ---------- DONE INJECTING  ----------
"ACS_Steam.exe"+17A1A71: 0F B6 EA              -  movzx ebp,dl
"ACS_Steam.exe"+17A1A74: 48 8B F9              -  mov rdi,rcx
"ACS_Steam.exe"+17A1A77: 48 85 C0              -  test rax,rax
"ACS_Steam.exe"+17A1A7A: 75 16                 -  jne ACS_Steam.exe+17A1A92
"ACS_Steam.exe"+17A1A7C: BA 45 05 21 79        -  mov edx,79210545
"ACS_Steam.exe"+17A1A81: B9 C2 0B 00 00        -  mov ecx,00000BC2
"ACS_Steam.exe"+17A1A86: E8 95 70 4A 00        -  call ACS_Steam.exe+1C48B20
"ACS_Steam.exe"+17A1A8B: 48 89 05 0E BB 9A 05  -  mov [ACS_Steam.exe+714D5A0],rax
"ACS_Steam.exe"+17A1A92: 38 58 50              -  cmp [rax+50],bl
"ACS_Steam.exe"+17A1A95: 74 3C                 -  je ACS_Steam.exe+17A1AD3
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>14694</ID>
                  <Description>"(it can take some time to build the list...)"</Description>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14688</ID>
                  <Description>"Build Perks List..."</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{ Game   : ACU.exe
  Version: 
  Date   : 2020-05-29
  Author : Paul44

  Gets list of Perks...
}

[ENABLE]

{$lua}
local f = nil
local nChoice = 0
local sMsg = ''
local sInfo = ''
local sListItems
addrStruct = ''
strStruct = ''


  local nChoice = readBytes(getAddress("pPerkBChoice"),1)
  if not (nChoice == 1 or nChoice == 2) then return end

  local addrCheckPtr = readPointer(getAddress("pAccomplVFT"))
  if ( addrCheckPtr == 0 or addrCheckPtr == nil) then
     local sText = "The 'check_Pointers' are not collected yet ! \n\n" ..
                  "Re-enable 'Perks...', and then return here..."
     local nType = mtInformation
     local nButton = mbOK
     messageDialog(sText, nType, nButton)
     return
  end

  sAOB = string.format('%X',addrCheckPtr)
  --print(sAOB)

  sMsg = 'List Open Perks'
  if (nChoice == 2) then sMsg = 'List All Perks' end

  aStructGui = {'AC Syndicate - Edit Perk','Perk',550,300,false,320,250}
  aStructInfo = { {'Actual',0x70,vtDword,true}, {'Completed (= 0 &lt;~ 1)',0x8A,vtByte,true}, {'Total',0x74,vtDword,false},
                          {'Completed (= 3 &lt;~ 1)',0x1C,vtByte,false} }

       -- google: cheat engine Async exec Form invalid window handle
     synchronize(function()
         -- painting form...
         f = IconList
         f.Width = 600
         f.Height = 500
         f.Show()
         f.Caption = 'ACS - Managing Perks...'
         local lBox = f.ListBox
         lBox.Clear()
         local lbTitle = f.IconTitle
         lbTitle.Caption = 'One moment please... processing...'
         local lbInfo = f.IconInfo
         lbInfo.Caption = ''
         local lbHead = f.IconHead
         lbHead.Caption = '    #     addrPerk    |   Actual   Total   Completed (= 3)'
         local lbMsg = f.IconMessage
         lbMsg.Caption = "See Readme on how to manage \n and use this info..."
         --lbMsg.Visible = true
         local cbGod = f.GodMode
         f.GodMode.Caption  = 'God Mode:'
         -- hide info...
         f.pCoord.Visible = false
         f.Structure.Visible = true
         f.RecycleBin.Visible = false

         lbInfo.Caption = string.format('AccomplishmentManager: {%X +%X}',getAddress("[pAccomplishm]"),0x30)
     end)




  local scan = createMemScan(false)
  --scan.setOnlyOneResult(false)
  scan.firstScan(soExactValue,vtQword,rtRounded,sAOB,nil,0,0xffffffffffffffff,"-X-C+W",
                                      fsmNotAligned,nil,true,false,false,false)

  scan.waitTillDone()
  --scan.getOnlyResult()
  --print(string.format('- %X -',scan.Result))
  local scanList = createFoundList(scan)
  scanList.initialize()
  --print(scanList.Count)

  synchronize(function()
      f.IconTitle.Caption = sMsg
  end)

  sListItems = createStringList()
  sListItems.beginUpdate()
  local nCount = 0
  for i=0,scanList.Count-1 do
      local addrPerk = tonumber(scanList.Address[i],16)
      local nActual = readInteger(addrPerk+0x70)
      local nTotal =  readInteger(addrPerk+0x74)
      local bCompleted = readBytes(addrPerk+0x1C,1)

      if ( nChoice == 2 or (nChoice == 1 and bCompleted &lt; 3) ) then
          local sName = string.format('[%03d]: {%08X}   |    %5d   %5d        %d',nCount+1,addrPerk,nActual,nTotal,bCompleted)
          sListItems.Text = sListItems.Text .. sName
          nCount = nCount +1
      end
      --print(sName)
      --break
  end

  synchronize(function()
      f.ListBox.Items.Text = sListItems.Text
  end)
  sListItems.endUpdate()
  sListItems.destroy()

{$asm}
test al,al

pPerkBChoice:
db 0


[DISABLE]

</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14689</ID>
                      <Description>"Allow To Run:"</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Disabled&gt;
1:List Open Perks
2:List All Perks
</DropDownList>
                      <Color>FF00FF</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pPerkBChoice</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14690</ID>
                          <Description>"Address Perk"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <VariableType>8 Bytes</VariableType>
                          <Address>pAddrPerk</Address>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>14692</ID>
                              <Description>"Actual"</Description>
                              <VariableType>4 Bytes</VariableType>
                              <Address>[pAddrPerk]+70</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14696</ID>
                              <Description>"Completed (= 0 &lt;~ 1)"</Description>
                              <VariableType>Byte</VariableType>
                              <Address>[pAddrPerk]+8A</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14691</ID>
                              <Description>"Total"</Description>
                              <Color>808080</Color>
                              <VariableType>4 Bytes</VariableType>
                              <Address>[pAddrPerk]+74</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14695</ID>
                              <Description>"Completed (= 3 &lt;~ 1)"</Description>
                              <Color>808080</Color>
                              <VariableType>Byte</VariableType>
                              <Address>[pAddrPerk]+1C</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14554</ID>
              <Description>"Time Of Day..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : ACS.exe
  Version:
  Date   : 2020-09-24
  Author : Paul44

  Set daytime...
}

[ENABLE]
{$lua}
getStaticAddr("44 8B 41 6C 0F 57 C0",4,"pTimeOfDay",0)

{$asm}
// struct: TimeOfDayManager...
aobscanmodule(DayTimeMgr,$process,48 8B 81 B8 00 00 00 F3 0F 10 40 0C)
registersymbol(DayTimeMgr)
alloc(newmem,$100)

globalalloc(pDayTimeMgr,4,$process)

label(code)
label(return)

newmem:
  push r15
  mov r15,pDayTimeMgr
  mov [r15],rcx
  pop r15
code:
  mov rax,[rcx+000000B8]
  movss xmm0,[rax+0C]
  ret
  int 3
  jmp return

DayTimeMgr:
  jmp far newmem
return:


[DISABLE]

{$asm}

DayTimeMgr:
  db 48 8B 81 B8 00 00 00 F3 0F 10 40 0C C3 CC

unregistersymbol(DayTimeMgr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+1AA98E0

"ACS.exe"+1AA98CC: CC                       -  int 3
"ACS.exe"+1AA98CD: CC                       -  int 3
"ACS.exe"+1AA98CE: CC                       -  int 3
"ACS.exe"+1AA98CF: CC                       -  int 3
"ACS.exe"+1AA98D0: 48 8B 81 50 02 00 00     -  mov rax,[rcx+00000250]
"ACS.exe"+1AA98D7: F3 0F 10 40 2C           -  movss xmm0,[rax+2C]
"ACS.exe"+1AA98DC: C3                       -  ret
"ACS.exe"+1AA98DD: CC                       -  int 3
"ACS.exe"+1AA98DE: CC                       -  int 3
"ACS.exe"+1AA98DF: CC                       -  int 3
// ---------- INJECTING HERE ----------
"ACS.exe"+1AA98E0: 48 8B 81 B8 00 00 00     -  mov rax,[rcx+000000B8]
"ACS.exe"+1AA98E7: F3 0F 10 40 0C           -  movss xmm0,[rax+0C]
"ACS.exe"+1AA98EC: C3                       -  ret
"ACS.exe"+1AA98ED: CC                       -  int 3
// ---------- DONE INJECTING  ----------
"ACS.exe"+1AA98EE: CC                       -  int 3
"ACS.exe"+1AA98EF: CC                       -  int 3
"ACS.exe"+1AA98F0: 8B 81 04 02 00 00        -  mov eax,[rcx+00000204]
"ACS.exe"+1AA98F6: 33 D2                    -  xor edx,edx
"ACS.exe"+1AA98F8: 83 F8 FF                 -  cmp eax,-01
"ACS.exe"+1AA98FB: 0F 45 D0                 -  cmovne edx,eax
"ACS.exe"+1AA98FE: 48 8B 8C D1 70 01 00 00  -  mov rcx,[rcx+rdx*8+00000170]
}

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+11D7CE8

"ACS.exe"+11D7CD7: CC                       -  int 3
"ACS.exe"+11D7CD8: CC                       -  int 3
"ACS.exe"+11D7CD9: CC                       -  int 3
"ACS.exe"+11D7CDA: CC                       -  int 3
"ACS.exe"+11D7CDB: CC                       -  int 3
"ACS.exe"+11D7CDC: CC                       -  int 3
"ACS.exe"+11D7CDD: CC                       -  int 3
"ACS.exe"+11D7CDE: CC                       -  int 3
"ACS.exe"+11D7CDF: CC                       -  int 3
"ACS.exe"+11D7CE0: F3 0F 10 0D D4 6E F8 05  -  movss xmm1,[ACS.exe+715EBBC]
// ---------- INJECTING HERE ----------
"ACS.exe"+11D7CE8: 44 8B 41 6C              -  mov r8d,[rcx+6C]
"ACS.exe"+11D7CEC: 0F 57 C0                 -  xorps xmm0,xmm0
// ---------- DONE INJECTING  ----------
"ACS.exe"+11D7CEF: F3 48 0F 2C D1           -  cvttss2si rdx,xmm1
"ACS.exe"+11D7CF4: C6 41 31 00              -  mov byte ptr [rcx+31],00
"ACS.exe"+11D7CF8: 8B C2                    -  mov eax,edx
"ACS.exe"+11D7CFA: F3 48 0F 2A C0           -  cvtsi2ss xmm0,rax
"ACS.exe"+11D7CFF: F3 0F 5C C8              -  subss xmm1,xmm0
"ACS.exe"+11D7D03: F3 0F 59 0D 25 FA 94 01  -  mulss xmm1,[ACS.exe+2B27730]
"ACS.exe"+11D7D0B: F3 4C 0F 2C C9           -  cvttss2si r9,xmm1
"ACS.exe"+11D7D10: 45 85 C0                 -  test r8d,r8d
"ACS.exe"+11D7D13: 74 38                    -  je ACS.exe+11D7D4D
"ACS.exe"+11D7D15: 41 FF C8                 -  dec r8d
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>14555</ID>
                  <Description>"Set hour (0~24 hr)"</Description>
                  <Options moHideChildren="1"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>pTimeOfDay</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14612</ID>
                      <Description>"Pause time (0/1)"</Description>
                      <Color>808080</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pDayTimeMgr</Address>
                      <Offsets>
                        <Offset>21</Offset>
                        <Offset>B8</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14353</ID>
                  <Description>"Pause time (0/1)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pDayTimeMgr</Address>
                  <Offsets>
                    <Offset>B0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13868</ID>
              <Description>"CameraManager - Base"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>C0C0C0</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>pCameraMgr</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>11832</ID>
                  <Description>"BhvAssassin ~ Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pBhvAssassin</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>87967</ID>
                      <Description>"bInvisible"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bInvisible</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>13895</ID>
                  <Description>"CSrvPlayerHealth ~ Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pHealth</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>87966</ID>
                      <Description>"bGodmode"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bGodmode</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>384</ID>
                  <Description>"Entity ~ Base Address"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pEntity</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13852</ID>
                      <Description>"PlayerID"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>[pEntity]+C0</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>11791</ID>
                  <Description>"InventoryDataItem ~ Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14299</ID>
                      <Description>"InventoryCheck"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>8 Bytes</VariableType>
                      <Address>pInventCheck</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13835</ID>
                      <Description>"LogicalInventory ~ Base"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>8 Bytes</VariableType>
                      <Address>[pInventory]+20</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14318</ID>
                  <Description>"(UIMinimapMgr)"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pUIMinimapMgr</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1336</ID>
                      <Description>"(UIMapCheck)"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>8 Bytes</VariableType>
                      <Address>pUIMapCheck1</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14317</ID>
                      <Description>"(MapMarker)"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>8 Bytes</VariableType>
                      <Address>pMapWayp</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14329</ID>
                  <Description>"(FOV - base)"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pFreeCam</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>26078</ID>
                  <Description>"UIMinimapManager"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pUIMinimapMgr</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>26081</ID>
                  <Description>"(Show Icon List - Base)"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pIconList</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14290</ID>
                  <Description>"MainSkillProgression - base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pLevelUp</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>87950</ID>
                  <Description>"Perks - Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pAccomplishm</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>87954</ID>
                      <Description>"Perks VFT - Base"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>8 Bytes</VariableType>
                      <Address>pAccomplVFT</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>87953</ID>
                  <Description>"pLevelUp - Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pLevelUp</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14613</ID>
                  <Description>"TimeOfDayManager - Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pDayTimeMgr</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>89189</ID>
                  <Description>"Biped Component..."</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pEntity</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>110</Offset>
                    <Offset>88</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>89185</ID>
                      <Description>"Collision flag..."</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>+4A</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1419</ID>
      <Description>"Errors &amp; Settings..."</Description>
      <Options moAlwaysHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <Color>008080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>14852</ID>
          <Description>"Error Statistics..."</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>89190</ID>
              <Description>"&gt; Player Status"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1421</ID>
              <Description>"&gt; Ship Status"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash2</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1441</ID>
              <Description>"&gt; Map Waypoint"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash3</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1449</ID>
              <Description>"&gt; Map Waypoint Teleport"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1481</ID>
              <Description>"&gt; Teleport &amp; Coordinates"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash5</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>14780</ID>
          <Description>"Cheat table settings..."</Description>
          <Options moDeactivateChildrenAsWell="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   :
  Version:
  Date   : 2020-10-22
  Author :

  Manage game-specific settings...
  (one must save the table manually to keep any changes permanently)
  Important note: one should NOT touch the 'Developer tools' section !
  (use at own risk and voids further support...)
}

[ENABLE]

globalalloc(bShowHideLua,1,$process)

bShowHideLua:
db 1


[DISABLE]

bShowHideLua:
db 1

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>14828</ID>
              <Description>"(fill in your choices in the 'Description' field)"</Description>
              <Color>FF0080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>14825</ID>
              <Description>"(launches this browser w/ search_string from 'Info' button)"</Description>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14875</ID>
                  <Description>"(fill in browser, without extension ~ do not change search string)"</Description>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14830</ID>
                  <Description>"iexplore"</Description>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14858</ID>
                  <Description>"fearless Assassin Creed 7 Syndicate ~ v1.5.1"</Description>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14826</ID>
              <Description>"(sets 'Compact View Mode' at startup: Compact (default) = 1 ~ Full View = 0)"</Description>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14831</ID>
                  <Description>"1"</Description>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14832</ID>
              <Description>"(sets background color - default =F6EEED)"</Description>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14833</ID>
                  <Description>"F6EEED"</Description>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14873</ID>
              <Description>"(fill in Game's EXE name, including extension, command parameters &amp; full pathname)"</Description>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14867</ID>
                  <Description>"ACS.exe"</Description>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14894</ID>
                  <Description>""</Description>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14881</ID>
                  <Description>""</Description>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14422</ID>
                  <Description>"(fill in full path for Report export location)"</Description>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14423</ID>
                      <Description>"(or use: &lt;table&gt; ~ &lt;game&gt; variables)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14424</ID>
                      <Description>"&lt;game&gt;"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14862</ID>
              <Description>"(apply above changes to cheat table)"</Description>
              <Color>FF00FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   :
  Version:
  Date   : 2020-11-05
  Author :

  Has primarily visual effect on color change...
  color picker: google "HTML Color Picker W3Schools"
}

[ENABLE]
{$lua}
if syntaxcheck then return end
local mForm = getMainForm().frmAutoInject

-- button_name has changed since v7.x...
local sButton
if (tonumber(getCEVersion()) &lt; 7) then
    sButton = mForm.Button1.doClick
else
    sButton = mForm.btnExecute.doClick
end

sButton()
sButton()

--mForm.Component[3].doClick()
--mForm.Component[3].doClick()

local al = getAddressList()
sBrowser = al.getMemoryRecordByID(sBrowserID).Description .. '.exe'
sBrowserString = al.getMemoryRecordByID(sBrowserStringID).Description
sSearch = " ? " .. sBrowserString .. [[ &gt;nul 2&gt;nul]]


{$asm}
// disables script automatically by CE...
test al,al


[DISABLE]

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>14829</ID>
              <Description>"(you must save/reload the table to apply these settings permanently !)"</Description>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>14857</ID>
              <Description>"Developer tools... (do not use, unless at your own risk)"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <Color>808000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>26032</ID>
                  <Description>"(to keep/apply changes permanently, you must Save/Reload your table)"</Description>
                  <Color>FF00FF</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14849</ID>
                  <Description>"(game verification...)"</Description>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14868</ID>
                      <Description>"(Check regularly (default) = 1 - AutoAttach once = 0)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14874</ID>
                          <Description>"(Check also for similar game_name = 2 - No AutoAttach = 9)"</Description>
                          <Color>FF0000</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14836</ID>
                          <Description>"2"</Description>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14869</ID>
                      <Description>"(fill in Timer's Interval)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14866</ID>
                          <Description>"3000"</Description>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14859</ID>
                      <Description>"(verify AOB string &amp; memory_limit_range (= hexvalue) &amp; protectionflags)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14860</ID>
                          <Description>"40 53 48 83 EC 20 48 83 79 18 10"</Description>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14861</ID>
                          <Description>"2000"</Description>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14897</ID>
                          <Description>"+X-C-W"</Description>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14882</ID>
                      <Description>"(fill in Game's EXE name, incl ext &amp; full pathname: see above)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14853</ID>
                  <Description>"(prompt to save any table design changes: No (default) = 0 ~ Yes = 1)"</Description>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14854</ID>
                      <Description>"0"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14855</ID>
                  <Description>"(hide most elements in Lua Engine window: Yes (default) = 1 ~ No = 0)"</Description>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14856</ID>
                      <Description>"1"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14883</ID>
                  <Description>"(Free Roam keyboard keys: F10-F12 ~ 2-4-6-8-7-9 ~ (unused))"</Description>
                  <Options moHideChildren="1"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14884</ID>
                      <Description>"0x79"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14892</ID>
                      <Description>"0x7B"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14891</ID>
                      <Description>"0x62"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14890</ID>
                      <Description>"0x64"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14889</ID>
                      <Description>"0x66"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14888</ID>
                      <Description>"0x68"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14887</ID>
                      <Description>"0x67"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14886</ID>
                      <Description>"0x69"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14885</ID>
                      <Description>"0x78"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14899</ID>
                  <Description>"(show Design submenu: No (default) = 0 ~ Yes = 1)"</Description>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14900</ID>
                      <Description>"0"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>26031</ID>
                      <Description>"(fill in full path for Dissect Code location ~ ignore process: No (default) = 0)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>26066</ID>
                          <Description>"(or use: &lt;table&gt; ~ &lt;game&gt; variables)"</Description>
                          <Color>FF0000</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14033</ID>
                          <Description>"&lt;table&gt;"</Description>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14034</ID>
                          <Description>"0"</Description>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>26065</ID>
                  <Description>"(Dissect Structure: engine  (values seperated by ~ |  see Special Scripts)"</Description>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>87949</ID>
                      <Description>"(Anvil = 1/UE3 = 2/UE4.2 = 3/UE4.1 = 4/Disabled = 99)"</Description>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14066</ID>
                      <Description>"99~0x30~0x18"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14901</ID>
                  <Description>"(show WindowMode menu option: No (default) = 0 ~ Yes = 1)"</Description>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14902</ID>
                      <Description>"0"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14898</ID>
              <Description>"Maintenance scripts"</Description>
              <Options moHideChildren="1"/>
              <Color>808000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14903</ID>
                  <Description>"Reset Lua Engine GUI"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version: 
  Date   : 2020-11-02
  Author :

  Dis/enables menu in Lua Engine window (+ bottom part)
  Note: 'luaMenu' needs to be global in order to "keep/exchange" its pointer !
}

[ENABLE]
{$lua}

SwitchLuaGui()

{$asm}
test al,al

[DISABLE]
{$lua}


</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>14896</ID>
                  <Description>"Disable all cheats (using hotkey)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version: 
  Date   : 2020-11-02
  Author :

  Disables all scripts and locked values...
}

[ENABLE]
{$lua}

  local bAll = true
  if (isKeyPressed(VK_F11)) then bAll = false end

  DisableMainScript(bAll)

{$asm}
// disables script automatically by CE...
test al,al


[DISABLE]

</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>123</Key>
                      </Keys>
                      <Description>Disable all cheat entries...</Description>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>122</Key>
                      </Keys>
                      <Description>Disable only locked values...</Description>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>26072</ID>
                  <Description>"Initialize Special Scripts"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version:
  Date   : 2020-11-02
  Author :

  Runs any script, "linked" in Form(s)...
}

[ENABLE]
{$lua}
-- important: most/all functions here should/must be global...


-- dis/enable the "hover" functionality via 'Player Coordinates (writes~updates)' script...
-- is called by the ActivateTimer() function
-- *****************************************
local al = getAddressList()

-- used for Teleport routine...
local function getVK(nEnum)
  local n = tonumber(al.getMemoryRecordByID(nEnum).Description)
  return n
end

function DisableEntry(nID)
    if (nID == 0 or nID == nil) then return end
    local ScriptID = al.getMemoryRecordByID(nID)
    ScriptID.Active = false
end

-- restore start location coordinates [F12]...
local function RestoreOrigCoord(addrX,addrY,addrZ,addrEntity)
    local bInverseXY =  readBytes(getAddressSafe("bInverseXY"))
    local xOffsY,xOffsZ = 0x4,0x8
    if (bInverseXY == 1) then xOffsY,xOffsZ = 0x8,0x4 end

    local Zplus = readFloat(getAddress("ZstepdropHeight"))
    local addrOrig = getAddress("OrigCoord")
    --local structOffset = readInteger(getAddress("pStructCrdOffset"))
    --local addrCoord = readPointer(getAddress("pStructCrdBase")) + structOffset
    local addrCoord = addrEntity
        --print(string.format("%x",addrOrig))
        --print(string.format("%x",addrCoord))
        --print(structOffset)
    local Zvalue = readFloat(addrOrig+xOffsZ)+Zplus
    -- update [pStructCrdBase]+xx values...
    writeFloat(addrCoord,readFloat(addrOrig))
    writeFloat(addrCoord+xOffsY,readFloat(addrOrig+xOffsY))
    writeFloat(addrCoord+xOffsZ,Zvalue)
    -- update Xval,Yval,Zval values...
    writeFloat(addrX,readFloat(addrOrig))
    writeFloat(addrY,readFloat(addrOrig+xOffsY))
    writeFloat(addrZ,Zvalue)
end

function Flyhack(timer)
    -- ID mRecord FreeRoam - addrCoordinatesPlayer/Entity - addrYaw - offsYax1 - offsYaw2 - addrPitch - offsPitch... {1~7}
    -- debug yaw/pitch -  not_used - reversed yaw/pitch variansts... {8~10}
    local bInverseXY =  readBytes(getAddressSafe("bInverseXY"))
    local xOffsY,xOffsZ = 0x4,0x8
    if (bInverseXY == 1) then xOffsY,xOffsZ = 0x8,0x4 end

    local aInfo = aFlyInfo
    local addrEntity = aInfo[2]
    local addrYaw = aInfo[3]
    local addrPitch = aInfo[6]
    local bDebug = aInfo[8] or 0
    local nSwitch = aInfo[10] or 0
    if (addrPitch == 0 or addrPitch == nil) then return end
    -- get XY and Z-axis step value...
    local addrXYstep = getAddress("XYstepVal")
    local XYstep = readFloat(addrXYstep)
    local addrZstep = getAddress("ZstepVal")
    local Zstep = readFloat(addrZstep)

    local addrX = getAddress("Xval")
    local addrY = getAddress("Yval")
    local addrZ = getAddress("Zval")
    local XValue = readFloat(addrX)
    local YValue = readFloat(addrY)
    local ZValue = readFloat(addrZ)

    local fPitch = readFloat(addrPitch+aInfo[7])
    if (fPitch == nil) then return end
    local nYaw1 = -1
    local nYaw2 = 1
    if (nSwitch == 1) then nYaw2 = -1 end
    if (nSwitch == 2) then nYaw1 = 1 end
    if (nSwitch == 3) then nYaw1 = 1; nYaw2 = -1 end
    local yaw = math.atan2(nYaw1 * readFloat(addrYaw+aInfo[4]), nYaw2 * readFloat(addrYaw+aInfo[5])) * 180 / math.pi
    local pitch = math.asin(fPitch) * 180 / math.pi

    local z = math.cos(math.rad(90-pitch)) * Zstep

    local xVal = readFloat(addrEntity)
    local yVal = readFloat(addrEntity + xOffsY)
    local zVal = readFloat(addrEntity + xOffsZ)
    local nInverse = (pitch &gt;= 0) and 1 or -1

    -- using NUMpad keys to navigate...
    -- these keys also allow us to pass through "walls"... (noclip)
    -- also google: "cheat engine Virtual-Key Code"
    if isKeyPressed(getVK(14888)) then    -- VK_NUMPAD8
        local x = math.cos(math.rad(yaw)) * XYstep
        local y = math.sin(math.rad(yaw)) * XYstep
        XValue = xVal + x
        YValue = yVal - y
        ZValue = zVal + z
        writeFloat(addrX,XValue)
        writeFloat(addrY,YValue)
        writeFloat(addrZ,ZValue)

        if execRoutine ~= nil then
           execRoutine(sender)
        end
        if (bDebug &gt; 0) then print(string.format('Yaw: %f - Pitch: %f',yaw,pitch)) end
        if (bDebug &gt; 1) then
            print(string.format('X: %f - Y: %f - Z; %f',x,y,z))
            print(string.format('X: %f - Y: %f - Z; %f',xVal,yVal,zVal))
        end
    end
    if isKeyPressed(getVK(14891)) then    -- VK_NUMPAD2
        local x = math.cos(math.rad(yaw)) * XYstep
        local y = math.sin(math.rad(yaw)) * XYstep
        XValue = xVal - x
        YValue = yVal + y
        ZValue = zVal - z
        writeFloat(addrX,XValue)
        writeFloat(addrY,YValue)
        writeFloat(addrZ,ZValue)
    end
    if isKeyPressed(getVK(14890)) then    -- VK_NUMPAD4
        --print(string.format('Yaw - 4: %f',yaw-90))
        local yaw = yaw - 90
        local x = math.cos(math.rad(yaw)) * XYstep
        local y = math.sin(math.rad(yaw)) * XYstep
        XValue = xVal + x
        YValue = yVal - y
        writeFloat(addrX,XValue)
        writeFloat(addrY,YValue)
    end
    if isKeyPressed(getVK(14889)) then    -- VK_NUMPAD6
        local yaw = yaw + 90
        local x = math.cos(math.rad(yaw)) * XYstep
        local y = math.sin(math.rad(yaw)) * XYstep
        XValue = xVal + x
        YValue = yVal - y
        writeFloat(addrX,XValue)
        writeFloat(addrY,YValue)
    end
    if isKeyPressed(getVK(14887)) then    -- VK_NUMPAD7
        --print(string.format("%x",addrZ))
        ZValue = zVal + z * nInverse
        writeFloat(addrZ,ZValue)
    end
    if isKeyPressed(getVK(14886)) then    -- VK_NUMPAD9

        ZValue = zVal - z * nInverse
        writeFloat(addrZ,ZValue)
    end
    if isKeyPressed(getVK(14884)) then    -- VK_F10
        -- End "free roam" activity...
        -- stay/drop at current location coordinates...
        DisableEntry(aInfo[1])
        tmerFly.destroy()
    end
    if isKeyPressed(getVK(14892)) then    -- VK_F12
        -- restore start location coordinates...
        -- if not returning to originals, set dropheight higher...
        local bFreeChoice = readBytes(getAddress("bFreeChoice"))
        if (bFreeChoice == 1) then
            RestoreOrigCoord(addrX,addrY,addrZ,addrEntity)
            -- allow game some time to execute before quiting script
            -- allows to return through walls... in most cases
            sleep(500)
        end
        DisableEntry(aInfo[1])
        tmerFly.destroy()
    end
end

function Help()
    local sMessage = [[
 Use following function keys:
 F10 = End at current location
 F12 = End &amp; Restore original location

 Use NumPad keys [2-8] &amp; [4-6] to move about
 Use NumPad keys [7-9] to ascend &amp; descend respectively
 (normal move keys can not be used)

 FreeRoam preferably not used while in non-standing posture...

 (see also [Readme] file)  ]]

    showMessage(sMessage)
end

-- nMr = mrID to disable ~ bAction = 0 = Save / = 1 = Restore ~ xOffset for free Camera...
function coordSaveRestore(bAction,addrCoord,nMr,nChoice,xOffset,nDropHeight)
    local bInverseXY =  readBytes(getAddressSafe("bInverseXY"))
    local xOffsY,xOffsZ = 0x4,0x8
    if (bInverseXY == 1) then xOffsY,xOffsZ = 0x8,0x4 end

    local nChoice = nChoice or 0
    local bAction = bAction or 0
    local addrCoord = addrCoord
    -- Free Roam or Free Camera...
    local xOffset = xOffset or readInteger(getAddress('pStructCrdOffset'))
    local nDropHeight = nDropHeight or readFloat(getAddress('nDropHeight'))
    addrCoord = addrCoord + xOffset
    local addrOrigCoord = getAddress('OrigCoord')
    --print(string.format('%X + %X',addrCoord,addrOffset))
    local nHeight = 2.0

    if (bAction == 0) then
        writeFloat(addrOrigCoord,readFloat(addrCoord))
        writeFloat(addrOrigCoord+xOffsY,readFloat(addrCoord+xOffsY))
        writeFloat(addrOrigCoord+xOffsZ,readFloat(addrCoord+xOffsZ))
    end
    if (bAction == 1 and nChoice ~= 0) then
        local xVal = readFloat(addrOrigCoord)
        local yVal = readFloat(addrOrigCoord+xOffsY)
        if not (xVal == 0 and yVal == 0) then
            writeFloat(addrCoord,readFloat(addrOrigCoord))
            writeFloat(addrCoord+xOffsY,readFloat(addrOrigCoord+xOffsY))
            writeFloat(addrCoord+xOffsZ,readFloat(addrOrigCoord+xOffsZ)+ nHeight + nDropHeight)
            if (nChoice == 1) then
                writeFloat(addrOrigCoord,0)
                writeFloat(addrOrigCoord+xOffsY,0)
                writeFloat(addrOrigCoord+xOffsZ,0)
            end
        end
    end

    local mr = getAddressList().getMemoryRecordByID(nMr)
    if (mr == nil) then return end
    local timerMr = createTimer(getMainForm())
    timerMr.Interval = 100
    timerMr.OnTimer = function(timer)
        mr.Active = false
        timerMr.destroy()
    end
end

-- game exe verification...
function GetMD5(nShowMsg)
    if ( process ~= nil ) then
        local intVal = 0
        -- calculate MD5 of PE header...
        local FileMD5 = md5memory(process,4096)
        local strMsg1,strMsg2
        strMsg1 = "You have attached [" .. process .. "]..."
        strMsg2 = "with following MD5 PE Header value: {" .. FileMD5 .. "}"
        if nShowMsg == 1 then
            showMessage(strMsg1 .. "\n\z" .. strMsg2)
        end
        --print('[',process,']')
        --print(FileMD5)
        --print(intVal)
        return intVal
    end
end

-- only needs to run once... ~ see below...
function getFNamePool()
    local aGameVals = SplitStr(structParams, "~")
    local sAOB = aGameVals[4]
    local nOffs = tonumber(aGameVals[5])
    --print(string.format('%s - %d',sAOB,nOffs))

    getStaticAddr(sAOB,nOffs,'pFnamePool')
end

-- getAnvil menu routine...
-- source info: #aSwedishMagyar @ FRF
-- ~ most/all AC titles...
-- google : ‘fearless AC 4: Black Flag ~ HowTo get data structure from its name’
function getAnvil(base)
    local gameOffsets = SplitStr(structParams, "~")
    local offs1 = tonumber(string.format('%X',gameOffsets[2]),16)
    local offs2 = tonumber(string.format('%X',gameOffsets[3]),16)
    if base == nil then return end
    --print(string.format('(base): %X',base))
    local name = nil
    local addrName = string.format('[[%X]+0x%X]',base,offs1)
    local getNameFunction = getAddressSafe(addrName)
    if getNameFunction == nil then return end
    --print(string.format('1. [%X] ~&gt; %X',base,getNameFunction))
    local sASM = disassemble(getNameFunction)
    local sAddr = string.find(sASM,"%?%?")
    if sAddr ~= nil then return end
    local sAddr = sASM:match("%[(.-)%]")
    if sAddr == nil then return end
    addr = getAddressSafe('[['..sAddr..']+'..string.format('%X',offs2)..']')
    if addr == nil then return end
    --print(string.format('2. %X ~ %X  |  %s',addr,offs2,sASM))
    name = readString(addr,100)
    --print(string.format('3. [%X] - %X ~ %s',base,getNameFunction,readString(addr,30,false)))
    return name
end

function getUE3(base,nRelease)
    -- set a 'globalalloc(pFNamePool,8,$process)' in main script or place next 2 instructions in lua startup...
    -- unregisterSymbol("pFnamePool")
    -- if not getAddressSafe("pFnamePool") then registerSymbol("pFnamePool", allocateMemory(8)) end
    local nRelease = nRelease or 1

    local addrFName = getAddress('[pFnamePool]')
    if (readPointer(addrFName) == nil) then getFNamePool(); addrFName = getAddress('[pFnamePool]') end

    -- getUE2/3 routine ~ FNamePoolID_offset ~ FName_offset ~ FNamePool_address AOB search string ~ relative offset to AOB_Address
    local aGameVals = SplitStr(structParams, "~")
    local nNameID = tonumber(string.format('%X',aGameVals[2]),16)
    local nNameOffs = tonumber(string.format('%X',aGameVals[3]),16)

    local x64Bit = 0x4
    if targetIs64Bit() then x64Bit = 0x8 end
    local nNameEntries = readInteger(addrFName + x64Bit)
    if (nRelease == 2) then nNameEntries = 999999 end              -- needs to be identified somehow...?!
    --print(string.format('[%d]: %X/%X  =&gt;  %X/%d ... %X',nRelease,nNameID,nNameOffs,readPointer(addrFName),nNameEntries,base))

    if base == nil then return nil end
    local vfTable = readPointer(base)
    if vfTable == nil then return nil end

    local nName = readInteger(base + nNameID)
    local nChunk = 0
    if (nName == nil or nName &gt; nNameEntries) then return nil end
    local addrChunk = readPointer(addrFName)
    if (nRelease == 2) then
       nChunk = nName &gt;&gt; 0xE                -- chunkIdx
       nName = (nName &amp; 0x3FFF)             -- offset within chunk
       addrChunk = readPointer(addrChunk + nChunk * x64Bit)
    end
    --print(string.format('[%X]/%d + %x',addrChunk, nChunk, nName))

    local sName = readString(readPointer(addrChunk + nName * x64Bit) + nNameOffs,100)
    if sName == nil then return nil end
    if ( string.len(sName) == 1) then sName = readString(readPointer(addrChunk + nName * x64Bit) + nNameOffs,255,true) end
    if sName == nil then return nil end

    return sName
end

function getUE41(base)
    local sName = getUE3(base,2)
    return sName
end

function getUE4(base)
    -- set a 'globalalloc(pFNamePool,8,$process)' in main script or place next 2 instructions in lua startup...
    -- unregisterSymbol("pFnamePool")
    -- if not getAddressSafe("pFnamePool") then registerSymbol("pFnamePool", allocateMemory(8)) end

    -- Author: #Razchek
    -- Google: 'Unreal v4.23+ "GNames" - FNamePool enumeration'  (~ unknowncheats.me forum)
    -- ***

    local addrFName = getAddress('[pFnamePool]')
    if (readPointer(addrFName) == nil) then getFNamePool(); addrFName = getAddress('[pFnamePool]') end

    -- getUE4 routine ~ FNameIndexID_offset ~ FNamePool_offset ~ FNamePool_address AOB search string ~ relative offset to AOB_Address
    local aGameVals = SplitStr(structParams, "~")
    local nNameID = tonumber(string.format('%X',aGameVals[2]),16)
    local nNameStart = tonumber(string.format('%X',aGameVals[3]),16)

    local key = readInteger(base + nNameID)
    --addrFName = addrFName + nNameStart
    local nNameEntries = 0               -- readInteger(addrFName + 0x4)
    --print(string.format('%d/%X  =&gt;  %X/%d ... %X',nNameID,nNameStart,addrFName,nNameEntries,base))

    local chunkOffset = key &gt;&gt; 16
    local nameOffset = readSmallInteger(base + nNameID)
    if(nameOffset == nil) then return nil end
    local namePoolChunk = readQword(addrFName + ((chunkOffset + 2) * 8))
    --print(string.format('%d ~&gt;  %X  ~&gt;  %d  =&gt; %X',chunkOffset,nNameID,nameOffset,namePoolChunk))

    local entryOffset = namePoolChunk + (2 * nameOffset)
    local nameEntry = readSmallInteger(entryOffset)
    if(nameEntry == nil) then return nil end
    local nameLength = nameEntry &gt;&gt; 6
    local sName = readString(entryOffset + 2, nameLength)
    --print(string.format('%X/%d  =&gt;  %s',entryOffset,nameLength,sName))

    return sName
end

function enableStructLookup()
    local gameOffsets = SplitStr(structParams, "~")
    local bStructEnabled = tonumber(string.format('%d',gameOffsets[1]))
    if aMenuEngine[bStructEnabled] then sMenuItem30 = aMenuEngine[bStructEnabled][1] end
    if (sGetnameMark == '') then
       --print(tostring(nNameLookupID))
       nNameLookupID = registerStructureNameLookup(aMenuEngine[bStructEnabled][2])
       --print(nNameLookupID)
       sGetnameMark = ' ✓'
       Getnamemenuitem.Caption = sMenuItem30 .. sGetnameMark
    else
       unregisterStructureNameLookup(nNameLookupID)
       sGetnameMark = ''
       Getnamemenuitem.Caption = sMenuItem30 .. sGetnameMark
    end
end -- end getAnvil menu routine...


-- game windowed....
-- check current window mode status
addrD3D = 0
local sMenuItem2 = 'Window Mode'
function CheckWindowMode()
    -- check if a process is attached...?
    if (getOpenedProcessID() == 0) then return end
    if addrD3D == nil or addrD3D == 0 then
       local bytes = "F7 DE 1B F6 33 C0"
       local memScanner = createMemScan(false)
       memScanner.setOnlyOneResult(true)
       memScanner.firstScan(
	           soExactValue,vtByteArray,rtRounded,bytes,nil,
	           0,0xFFFFFFFF,"+X-C-W",fsmNotAligned,"",true,false,false,false)
       memScanner.waitTillDone()
       addrD3D = memScanner.getOnlyResult()
       -- to avoid erros when incorrect process has been selected...
       if addrD3D == nil or addrD3D == 0 then process = nil; return end
       addrD3D = addrD3D-0x7+0x3
       memScanner.destroy()
    end
    local bStatus = readBytes(readInteger(addrD3D))
    if (bWindowMode == 1) then
       if (bStatus == 0) then sWindowMark = ' ✓' else sWindowMark = '' end
       WinModemenuitem.Caption = sMenuItem2 .. sWindowMark
    end
end

function cycleWinMode()
    if (getOpenedProcessID() == 0) then return end
    -- 0 = windowed ~ 1 = fullscreen
    local bStatus = readBytes(readInteger(addrD3D))
    --print(string.format('%X + %d',readInteger(addrD3D),bStatus))
    if (bStatus == 0) then bStatus = 1; sWindowMark = '' else bStatus = 0; sWindowMark = ' ✓' end
    WinModemenuitem.Caption = sMenuItem2 .. sWindowMark
    writeBytes(readInteger(addrD3D),bStatus)
end -- end game windowed....

{$asm}
// disables script automatically by CE...
test al,al


[DISABLE]

</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>26071</ID>
                  <Description>"Run All Form Scripts"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version:
  Date   : 2020-11-02
  Author :

  Runs any script, "linked" in Form(s)...
}

[ENABLE]
{$lua}
execStruct = nil
execRoutine = nil

function runFormScripts(sender)
  if syntaxcheck then return end
  --print(sender.Name)
  if (sender.Name == 'ListBox') then onSelectIcon(sender) end
  --if (sender.Name == 'IconTeleport') then TeleportToIcon(sender) end
  if (sender.Name == 'BtnTeleport') then TeleportToIcon(sender) end
  if (sender.Name == 'GodMode') then setGodmode(sender) end
  if (sender.Name == 'IconList') then setGodmode(sender,1) end
  if (sender.Name == 'Clipboard') then copyClipboard(sender) end
  if (sender.Name == 'Structure') then openStructure(sender) end
  if (sender.Name == 'RecycleBin') then removeRecycleBin(sender) end
end

-- onEvent Form routines...
function onSelectIcon(sender)
    if (sender.ItemIndex &lt; 0) then return end
    local f = sender.Parent
    if (f.ListBox.Items.Count &lt; 1) then return end
    local sCoord = sender.Items[sender.ItemIndex]

    -- see also openStructure()...
    addrStruct = sCoord:match("{(.-)}")
    if (addrStruct ~= nil) then addrStruct = string.gsub(addrStruct, '^%s*(.-)%s*$', '%1') end -- stackoverflow...
    --print('['.. addrStruct .. ']')
    strStruct = sCoord:match("&lt;(.-)&gt;")                       -- in case of descriptive (see Kena eg)
    if (strStruct ~= nil) then strStruct = string.gsub(strStruct, '^%s*(.-)%s*$', '%1') end

    if not (f.pCoord.Visible) then return end
    sCoord = sCoord:match("%|(.-)%|")
    local aCoord = SplitStr(sCoord,'~')

    local xCoord = f.CoordX
    xCoord.Caption = string.format('%9.3f',aCoord[1])
    local yCoord = f.CoordY
    yCoord.Caption = string.format('%9.3f',aCoord[2])
    local zCoord = f.CoordZ
    zCoord.Caption = string.format('%9.3f',aCoord[3])

    f.PlayerX.Caption = ''
    f.PlayerY.Caption = ''
    f.PlayerZ.Caption = ''
    --print(string.format('[%f] \t [%f] \t [%f]',tonumber(aCoord[1]),tonumber(aCoord[2]),tonumber(aCoord[3])))
end

function TeleportToIcon(sender)
  --local f = IconList
  local f = sender.Parent.Parent
  if not (f.pCoord.Visible) then return end
  local fHeight = readFloat(getAddress("ZstepdropHeight"))

  local xCoord = f.CoordX
  local yCoord = f.CoordY
  local zCoord = f.CoordZ
  if (xCoord.Caption == '' or yCoord.Caption == '' or zCoord.Caption == '') then return end

  -- enable godmode - freeroam...
  local al = getAddressList()
  local mr = al.getMemoryRecordByID(aTeleportInfo[2])
  mr.Active = true

  -- see AC2 for example (camera)...
  local sEntity,sCrdOffset = '[pEntity]','pStructCrdOffset'
  if (aTeleportInfo[3] ~= nil) then sEntity = aTeleportInfo[3] end
  if (aTeleportInfo[4] ~= nil) then sCrdOffset = aTeleportInfo[4] end

  local addrEntity = getAddressSafe(sEntity)
  local chkEntity = readPointer(addrEntity)
  local CrdOffset = readInteger(getAddressSafe(sCrdOffset))
  addrEntity = addrEntity + CrdOffset
  local nHeight = aTeleportInfo[1]
  --print(string.format('%X ~ %X',chkEntity,addrMapIcon))

  local zVal = tonumber(zCoord.Caption)+fHeight
  if (nHeight ~= 0) then zVal = math.max(zVal,nHeight) end
  --print(string.format('%f ~ %f ~ %f',fHeight,nHeight,zVal))

  local bInverseXY =  readBytes(getAddressSafe("bInverseXY"))
  local xOffsY,xOffsZ = 0x4,0x8
  if (bInverseXY == 1) then xOffsY,xOffsZ = 0x8,0x4 end

  -- see ACS - icon teleport...
  if execRoutine ~= nil then
      f.btnTeleport.Tag = createRef({1})
      execRoutine(sender)
      destroyRef(getRef(f.btnTeleport.Tag))
  end

  writeFloat(addrEntity+xOffsZ,zVal)
  writeFloat(addrEntity,tonumber(xCoord.Caption))
  writeFloat(addrEntity+xOffsY,tonumber(yCoord.Caption))

  if execRoutine ~= nil then
      f.btnTeleport.Tag = createRef({2})
      execRoutine(sender)
      destroyRef(getRef(f.btnTeleport.Tag))
  end

  local bFreeRoam = readBytes(getAddressSafe("bFreeRoam"))
  if (bFreeRoam == 1) then
      local addrX = getAddress("Xval")
      local addrY = getAddress("Yval")
      local addrZ = getAddress("Zval")
      writeFloat(addrX,tonumber(xCoord.Caption))
      writeFloat(addrY,tonumber(yCoord.Caption))
      writeFloat(addrZ,zVal)

      -- see Kena for example (moveMode)...
      if execRoutine ~= nil then
         execRoutine(sender)
      end
  end

  f.PlayerX.Caption = xCoord.Caption
  f.PlayerY.Caption = yCoord.Caption
  f.PlayerZ.Caption = zCoord.Caption
end

function setGodmode(sender,nFocus)
    local f = sender
    if (f.Name == 'GodMode') then f = sender.Parent.Parent end
    if not (f.pCoord.Visible) or aTeleportInfo == nil then return end
    --if (f == nil) then return end
    local nFocus = nFocus or 0
    local cbGodmode = f.GodMode
    local al = getAddressList()
    local mr = al.getMemoryRecordByID(aTeleportInfo[2])
    if (nFocus == 0) then mr.Active = cbGodmode.Checked else cbGodmode.Checked = mr.Active end
end

function copyClipboard(sender)
  --print(sender.Parent.Name)
  local f = sender.Parent
  --local f = IconList
  local strList = createStringlist()
  strList.Text = f.IconTitle.Caption .. "\n\n" .. f.IconHead.Caption
  strList.Text = strList.Text .. f.ListBox.Items.Text
  writeToClipboard(strList.Text)
end

function openStructure(sender)
    if (strStruct == nil) then strStruct = '' end
    --print('['..addrStruct..']' .. strStruct)
    if (addrStruct == '' or addrStruct == nil) then return end

    -- for formlists with divers structs...
    if execStruct ~= nil then
        local result = execStruct(sender)
        if not (result) then return end
    end

    local nCount = getStructureCount()
    --local i
    for i=nCount-1,0,-1 do
        local oStruct = getStructure(i)
        if (oStruct.Name == aStructGui[2]) then oStruct.destroy(); break end
    end
    local oStruct = createStructure(aStructGui[2])
    -- 1=Name ~ 2=offset ~ 3=Vartype ~ 4=highlightColor ~ 5 = showAsHex | vtPointer_array
    -- 5 = child ~ must be array within array = { {rec1},{rec2},... }
    --print(string.format('%s',addrStruct))
    for i=1,#aStructInfo do
        local addrPtr = tonumber(addrStruct,16) + aStructInfo[i][2]
        local vType = aStructInfo[i][3]
        if ( vType ~= vtPointer or (vType == vtPointer and readPointer(addrPtr) ~= 0) ) then
            local e = oStruct.addElement()
            e.Name = aStructInfo[i][1]
            e.Offset = aStructInfo[i][2]
            e.Vartype = aStructInfo[i][3]
            if ( e.Vartype == vtPointer ) then
                --print(string.format('%X %X %d',tonumber(addrStruct,16)+e.Offset,e.Offset,e.Vartype))
                local oStruct = createStructure('subStruct')
                for j=1,#aStructInfo[i][5] do
                    local eSub = oStruct.addElement()
                    local aElem = aStructInfo[i][5][j]
                    eSub.Name = aElem[1]
                    eSub.Offset = aElem[2]
                    eSub.Vartype = aElem[3]
                    if (aElem[4]) then eSub.BackgroundColor = 0xEDEEF6 end
                end
                e.ChildStruct = oStruct
            end
            if (aStructInfo[i][4]) then e.BackgroundColor = 0xEDEEF6 end
            -- cheatengine Generate Memory Records From Structure
            if (aStructInfo[i][5]) then e.DisplayMethod = 'dtHexadecimal' end
        end
    end

    for i,v in ipairs(enumStructureForms()) do
        if ( v.Caption == aStructGui[1]) then v.Close() end
    end

    oStruct.addToGlobalStructureList()
    oForm = createStructureForm('0x' .. addrStruct, strStruct, oStruct.Name)
    -- 1=windowTitle ~ 2=structName ~ 3+4=windowWidth+Height ~ 5=showMenu ~ 6+7=columnWidth
    oForm.Caption = aStructGui[1]
    oForm.Width = aStructGui[3]
    oForm.Height = aStructGui[4]
    oForm.Menu = aStructGui[5]

    oForm.HeaderControl1.Sections[0].Text = '&lt;Offset&gt;'
    oForm.HeaderControl1.Sections[0].Width = aStructGui[6]
    oForm.HeaderControl1.Sections[1].Width = aStructGui[7]
    oForm.miExpandAll.doClick()

end

function removeRecycleBin(sender)
  local f = sender
  if (f.Name == 'RecycleBin') then f = sender.Parent end
  if (f.ListBox.Items.Count &lt; 1) then return end

  if execRoutine ~= nil then
      execRoutine(sender)
      return
  end
end

{$asm}
// disables script automatically by CE...
test al,al


[DISABLE]

</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1</ID>
                  <Description>"Scripts to run per Timer interval"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version:
  Date   : 2020-11-02
  Author :

  Add any scripts/functions/routines here that need to be run on a regular interval
  (current interval uses 'Timer's Interval')
}

[ENABLE]
{$lua}
  -- pcall ensures that no errors are reported prior to loading/enabling scripts in addresslist...
  --if not pcall(function() myFunction() end) then return end


-- author: #Sunbeam @Fearless Revolution.
-- (google: "Bypass integrity Unity fearlessRev Sunbeam")
--

function KillAntiDebug(oForm)
local f = oForm or nil

-- see main script... (aobscanmodules)
-- local addrAntiDebugOffs = getAddress("GameProtect") - getAddress("GameProcess")

--print(string.format('%X',addrAntiDebugOffs))
local addrKillAntiDebug = getAddress("bKillAntiDebug")
local bKillAntiDebug = readBytes(addrKillAntiDebug)

if bKillAntiDebug == 9 then return end

local addrAntiDebug = getAddress("[GameProtect]")

-- create a stringlist class object to hold future thread ids as strings
local tl = createStringlist()

-- fill the stringlist object with the threadlist of the currently opened process
getThreadList( tl )

-- before going into the loop, time for some declarations
-- we will make use of several APIs, hence CE needs to know their addresses; so..
local OpenThread = getAddressSafe( "OpenThread" )
local NtQueryInformationThread = getAddressSafe( "NtQueryInformationThread" )
local TerminateThread = getAddressSafe( "TerminateThread" )
local CloseHandle = getAddressSafe( "CloseHandle" )
-- note that I'm not checking any above in the next part of the code for NULLs
-- I really hope you're doing this after you've opened up ACU.exe in CE

-- do a quick search for "#define THREAD_ALL_ACCESS" on google and you will find what its value is
-- e.g.: https://bbs.pediy.com/thread-89713.htm
local THREAD_ALL_ACCESS = 0x001F03FF
-- we're going to use this with OpenThread

-- do a quick search for "#define ThreadQuerySetWin32StartAddress" on google and you will find what its value is
-- e.g.: https://stackoverflow.com/questions/24728979/ntqueryinformationthread-sometimes-fails-no-error-code
local ThreadQuerySetWin32StartAddress = 0x9
-- we're going to use this with NtQueryInformationThread

-- we'll use this in the loop to store the text-to-number converted thread id
local thread_id
-- we'll use this in the loop to store the handle to the thread
local thread_handle
-- we'll use this in the loop to store our NtQueryInformationThread result, the thread's Entry address
local dwStartAddress = allocateMemory( 0x1000 )
-- we'll use this to check NtQueryInformationThread's result
local nt_status

-- we'll need this in the loop, to check if the thread's Entry address matches the one we know
local module_base = getAddressSafe( process )
-- ACU.exe+275DE50 - E9 E5F11803           - jmp ACU.exe+58ED03A
local func_addr = addrAntiDebug
-- local func_addr = module_base + addrAntiDebugOffs
-- ACU = 0x275DE50  ~ ACS = 0x22F2CB0
-- can/will be different per game EXE...!
-- yes, the above will be most likely different in any other executable; replace it with the one you'd find based on my video tutorial

-- now we want to loop all list items, from first till last and..
f.IconTitle.Caption = 'Processing ' ..  tl.Count .. ' threads...'
--f.ListBox.Items.beginUpdate()
for i = 0, tl.Count-1 do
    local sName = string.format('[%2d ~ %2d]: ThreadID = %s',i+1,tl.Count,tl[i])
    synchronize(function()
        f.ListBox.Items.Add(sName)
        f.ListBox.ItemIndex = i
    end)
    -- print(sName)

  -- ..open each thread with THREAD_ALL_ACCESS parameter
  -- each string in the list needs to be converted to a number before being used
  thread_id = tonumber( tl[i], 16 ) -- no idea if you'd get ids past 0xFFFF; but just in case
  -- ..then we want to obtain a handle to the thread via OpenThread, using the id with THREAD_ALL_ACCESS privileges
  thread_handle = executeCodeEx( 0, nil, OpenThread, THREAD_ALL_ACCESS, 0, thread_id )
  -- according to this post on stackoverflow: https://stackoverflow.com/questions/3528111/how-to-find-the-entry-point-of-a-specific-thread-in-windows
  -- we can get the Entry of a thread using NtQueryInformationThread with ThreadQuerySetWin32StartAddress parameter; so..
  -- the API proto taken from some C++ code is: NTSTATUS ntStatus = NtQueryInformationThread(hThread, ThreadQuerySetWin32StartAddress, &amp;dwStartAddress, sizeof(DWORD), NULL);
  -- we're on x64, so we need QWORD instead of DWORD, meaning 8 bytes instead of 4; so sizeof(QWORD) == 0x8
  -- then we need a dwStartAddress; &amp; indicates this is where the information will be returned by the API, thus a buffer; that's why we allocated it up top
  -- time to run NtQueryInformationThread
  nt_status = executeCodeEx( 0, nil, NtQueryInformationThread, thread_handle, ThreadQuerySetWin32StartAddress, dwStartAddress, 0x8, 0 )
  -- the result should be NT_SUCCESS == 0x0; we want to skip any other statuses
  if nt_status == 0x0 then
    -- now we want to check if the thread Entry address is the one we're looking for, the one we KNOW
    if readQword( dwStartAddress ) == func_addr then
      -- if it's our address, then..
      -- ..terminate the thread based on thread_handle obtained in the loop from thread_id
      local t = executeCodeEx( 0, nil, TerminateThread, thread_handle, 0 )
      -- and close the current open handle before exiting 'for' loop
      executeCodeEx( 0, nil, CloseHandle, thread_handle )
      --showMessage( string.format( "VMProtect Integrity Check thread with id: 0x%X killed.", thread_id ) )
      sName = string.format("*** VMProtect Integrity Check thread with id: 0x%X killed. *** \n", thread_id)
      synchronize(function()
          f.ListBox.Items.Add('\n')
          f.ListBox.Items.Add(sName)
      end)
      --print(sName)
      --- ensures routine is run only once...
      writeBytes(addrKillAntiDebug,0x9)
      break
    end
  end
  -- then close the current open handle
  executeCodeEx( 0, nil, CloseHandle, thread_handle )
end

  local addrGame = getAddress(myGame)
  local nRange = getModuleSize(process)
  synchronize(function()
      f.ListBox.Items.Add('\n')
      f.ListBox.Items.Add('=&gt; You can close this window now...')
      f.ListBox.Items.Add('\n')
      f.ListBox.Items.Add(string.format(' &gt; GameEXE: %X + %d (%2.1f GB)',addrGame,nRange,nRange/2147483648))
  end)
--f.ListBox.Items.endUpdate()

-- clean-up the allocation
deAlloc( dwStartAddress )
-- end of KillAntiDebug()
end


function handleDeath()
 -- in dev ~ find struct similar to WorldTransitionManager ~ save/load/etc flag
end


{$asm}
test al,al

[DISABLE]


</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>82793</ID>
      <Description>"+--------------------------------------------------------------------------------------------------------------------------+"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Enable this first, then use NUMPAD 0 to toggle timestop"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//---------
// Scans for 2 address offsets and 2 indexes used as offsets from the address offsets
// All scans are constants free, so they should be patch resistant (like Ubisoft patches their games!)
// Made for AC Syndicate v1.5 or higher, but might also work on Unity or other AC builds (x64 only!)(but not tested).
//
// If you use it on other AC games, be sure to change the ACS.exe name to the exe name you're using, in the code below.
//
// By Otis / Infuse Project
//---------

// Menu system data structures AOB scan.
// Scan for:
// 40 53                 - push rbx
// 48 83 EC ??           - sub rsp,20 { 32 }
// 48 8B D9              - mov rbx,rcx
// E8 ????????           - call 1418950C0
// 48 8B 0D ????????     - mov rcx,[1470C2A08] { [240] }  &lt;&lt;&lt; Offset we need
// 48 85 C9              - test rcx,rcx
// 74 ??                 - je 1418A81B6
// E8 ????????           - call 141853E10
// 48 8B 0D ????????     - mov rcx,[1470C2A08] { [240] }  &lt;&lt;&lt; Same offset again.
//
// This offset gives us the pointer to the menu system data structures. We'll set the byte on an index to 1 to make
// the menu render system think it's enabled. This will enable the camera when the complete engine is frozen in the second scan.
aobscanmodule(MenuSystemEnable_AOB, ACS.exe, 40534883EC??488BD9E8????????488B0D????????4885C974??E8????????488B0D????????)
label(MenuSystemEnable)
registersymbol(MenuSystemEnable)
MenuSystemEnable_AOB:
MenuSystemEnable:

// Engine control data structures AOB scan
// scan for
// 48 89 B4 24 ????????  - mov [rsp+00000080],rsi
// 48 8B 35 ????????     - mov rsi,[147151690] { [03CB5D90] } &lt;&lt; Offset we need
// 4C 89 74 24 ??        - mov [rsp+68],r14
// 4C 89 7C 24 ??        - mov [rsp+60],r15
// 45 33 FF              - xor r15d,r15d
// 44 89 BC 24 ????????  - mov [rsp+000000B0],r15d
// 48 85 F6              - test rsi,rsi
//
// This offset gives us the pointer to the engine control data structures. As it's a pointer to a pointer, we need two indices
// to use it: [[address+offset1]+offset2]== byte for engine tick on/off. Setting it to 1 freezes the entire system, enabling the
// flag in the first scan again will enable the camera system.
aobscanmodule(EngineControlEnable_AOB, ACS.exe, 4889B424????????488B35????????4C897424??4C897C24??4533FF4489BC24????????4885F6)
label(EngineControlEnable)
registersymbol(EngineControlEnable)
EngineControlEnable_AOB:
EngineControlEnable:

// Menu system enable/disable flag offset AOB scan.
// scan for:
// 48 8D 4A ??           - lea rcx,[rdx+18]
// E8 ????????           - call 1401C0FE0
// C6 87 ???????? 01     - mov byte ptr [rdi+000002F8],01 { 1 }  &lt;&lt; Offset we need
// E8 ????????           - call 141AB1D20
// 48 8B C8              - mov rcx,rax
// E8 ????????           - call 14020AAE0
// 48 8B 87 ????????     - mov rax,[rdi+00000358]
// 0F57 C9               - xorps xmm1,xmm1
aobscanmodule(MenuSystemEnableFlagOffset_AOB, ACS.exe, 488D4A??E8????????C687????????01E8????????488BC8E8????????488B87????????0F57C9)
label(MenuSystemEnableFlagOffset)
registersymbol(MenuSystemEnableFlagOffset)
MenuSystemEnableFlagOffset_AOB:
MenuSystemEnableFlagOffset:

// Engine control ticker on/off switch offset 1 AOB scan
// scan for
// 4C 89 74 24 ??        - mov [rsp+68],r14
// 4C 89 7C 24 ??        - mov [rsp+60],r15
// 45 33 FF              - xor r15d,r15d
// 44 89 BC 24 ????????  - mov [rsp+000000B0],r15d
// 48 85 F6              - test rsi,rsi
// 74 ??                 - je 1417A9CCF
// 48 8B B6 ????????     - mov rsi,[rsi+00000098]		&lt;&lt; Offset we need
// EB ??                 - jmp 1417A9CD2
aobscanmodule(EngineTickerEnableFlagOffset1_AOB, ACS.exe, 4C897424??4C897C24??4533FF4489BC24????????4885F674??488BB6????????EB??)
label(EngineTickerEnableFlagOffset1)
registersymbol(EngineTickerEnableFlagOffset1)
EngineTickerEnableFlagOffset1_AOB:
EngineTickerEnableFlagOffset1:

// Engine control ticker on/off switch offset 2 AOB scan
// scan for
// 4C 8B F0              - mov r14,rax
// 48 85 F6              - test rsi,rsi
// 0F84 ????????         - je 1417AA189
// 48 8B CE              - mov rcx,rsi
// E8 ????????           - call 141AB2980
// 84 C0                 - test al,al
// 0F85 ????????         - jne 1417AA189
// 44 39 BE ????????     - cmp [rsi+000008A8],r15d       &lt;&lt; Offset we need
// 7E ??                 - jle 1417A9D09
aobscanmodule(EngineTickerEnableFlagOffset2_AOB, ACS.exe, 4C8BF04885F60F84????????488BCEE8????????84C00F85????????4439BE????????7E??)
label(EngineTickerEnableFlagOffset2)
registersymbol(EngineTickerEnableFlagOffset2)
EngineTickerEnableFlagOffset2_AOB:
EngineTickerEnableFlagOffset2:

[DISABLE]
unregistersymbol(MenuSystemEnable)
unregistersymbol(EngineControlEnable)
unregistersymbol(MenuSystemEnableFlagOffset)
unregistersymbol(EngineTickerEnableFlagOffset1)
unregistersymbol(EngineTickerEnableFlagOffset2)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"StopTime. NUMPAD0 enable/disable."</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
globalalloc(PerformTimeStopThread, 128)
createthread(PerformTimeStopThread)
//----------------------------------------------------
// Declarations
// Global code labels
label(CalculateRealAddress)
// Local code labels
label(_isPositive)
label(_waitForDisable)
// Data labels
label(pMenuSystemData)
registersymbol(pMenuSystemData)
label(pEngineControlData)
registersymbol(pEngineControlData)
label(pStopFlag)
registersymbol(pStopFlag)
label(pThreadEnded)
registersymbol(pThreadEnded)
label(dwMenuSystemDataFlagOffset)
registersymbol(dwMenuSystemDataFlagOffset)
label(dwEngineTickerEnableFlagOffset1)
registersymbol(dwEngineTickerEnableFlagOffset1)
label(dwEngineTickerEnableFlagOffset2)
registersymbol(dwEngineTickerEnableFlagOffset2)

//----------------------------------------------------
// Code
PerformTimeStopThread:
  push rsi
  push rdi
  push eax
  push rbx
  // calculate the absolute addresses based on the found offsets in the AOB blocks
  mov rsi, MenuSystemEnable+0
  mov rax, 11            // offset in AOB block for DWord to read
  mov rbx, pMenuSystemData
  call CalculateRealAddress
  mov rsi, EngineControlEnable+0
  mov rax, B             // offset in AOB block for DWord to read
  mov rbx, pEngineControlData
  call CalculateRealAddress
  // obtain offsets for flag bytes within the datablocks found.
  mov rsi, MenuSystemEnableFlagOffset+0
  add rsi, B             // offset in AOB block for DWord to read
  mov eax, [rsi]
  mov [dwMenuSystemDataFlagOffset], eax
  mov rsi, EngineTickerEnableFlagOffset1+0
  add rsi, 1D             // offset in AOB block for DWord to read
  mov eax, [rsi]
  mov [dwEngineTickerEnableFlagOffset1], eax
  mov rsi, EngineTickerEnableFlagOffset2+0
  add rsi, 1F             // offset in AOB block for DWord to read
  mov eax, [rsi]
  mov [dwEngineTickerEnableFlagOffset2], eax
  // switch off engine ticker
  mov rdi, [pEngineControlData]
  mov eax, [dwEngineTickerEnableFlagOffset1]
  mov rdi, [rdi+eax]
  mov eax, [dwEngineTickerEnableFlagOffset2]
  mov byte ptr [rdi+eax], 01
  mov rcx,#100
  call Sleep
  // switch on menu camera system
  mov rdi, [pMenuSystemData]
  mov eax, [dwMenuSystemDataFlagOffset]
  mov byte ptr [rdi+eax], 01
  // wait for disable using a sleep loop.
  push rcx
_waitForDisable:
  mov rcx, #100       // x64, so pass # of milliseconds in rcx.
  call Sleep
  cmp byte [pStopFlag], 01
  jne _waitForDisable
  // disable invoked, end it!
  pop rcx
  // reset flags to 0
  // switch off menu camera system
  mov rdi, [pMenuSystemData]
  mov eax, [dwMenuSystemDataFlagOffset]
  mov byte ptr [rdi+eax], 0
  mov rcx,#100
  call Sleep
  // switch on engine ticker
  mov rdi, [pEngineControlData]
  mov eax, [dwEngineTickerEnableFlagOffset1]
  mov rdi, [rdi+eax]
  mov eax, [dwEngineTickerEnableFlagOffset2]
  mov byte ptr [rdi+eax], 0
  // signal we ended a glorious death
  mov rbx, pThreadEnded
  mov byte ptr [rbx], 1
  pop rbx
  pop eax
  pop rdi
  pop rsi
  ret

// Calculates the real address for a RIP relative offset obtained from an offset in an AOB scanned block
// Needed for x64 absolute address calculations based on RIP relative offset operands.
// in:
//    - rsi: Source of AOB scanned block
//    - eax: offset in AOB block for dword to read
//    - rbx: address of label to write the calculated pointer to. Used in disable.
//
// out:
//    - rdi: address of start of block to index into.
CalculateRealAddress:
  push ecx
  xor rdi, rdi
  add rsi, eax                 // rsi now points to DWord to read
  cmp dword [rsi], 80000000    // test if the most significant bit is set
  jb short _isPositive
  mov rdi, ffffffff00000000    // it's set so sign extend
_isPositive:
  mov ecx, [rsi]               // clear the upper bits of rcx leaving the unsigned value at [rsi+eax] in rcx
  add rdi, ecx
  add rsi, edi
  add rsi, 4                   // offset to dword already added to rsi. add 4 as we read a dword,  this is now the offset after the Dword in the AOB scanned block
  mov rdi, [rsi]
  mov [rbx], rdi               // store address for later use
  pop ecx
  ret

//----------------------------------------------------
// Local data variables
pMenuSystemData:
dq 0
pEngineControlData:
dq 0
pStopFlag:
db 0
pThreadEnded:
db 0
dwMenuSystemDataFlagOffset:
dd 0
dwEngineTickerEnableFlagOffset1:
dd 0
dwEngineTickerEnableFlagOffset2:
dd 0


[DISABLE]
pStopFlag:
db 1

unregistersymbol(pEngineControlData)
unregistersymbol(pMenuSystemData)
unregistersymbol(pStopFlag)
unregistersymbol(pThreadEnded)
unregistersymbol(dwMenuSystemDataFlagOffset)
unregistersymbol(dwEngineTickerEnableFlagOffset1)
unregistersymbol(dwEngineTickerEnableFlagOffset2)

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>13953</ID>
      <Description>"+--------------------------------------------------------------------------------------------------------------------------+"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>13954</ID>
      <Description>"Fullscreen Resolution"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>13963</ID>
      <Description>"  1. To change fullscreen image size, ALT+TAB out, change resolution using Fullscreens Resolution Selector drop down, ALT+TAB back to fullscreen.
"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>13961</ID>
      <Description>"  2. If desired, the resolution values can be changed. Right-click the value and select "Set/Change dropdown selection options"."</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>13964</ID>
      <Description>"  3. Note: If game is zoomed in after selecting the new resolution then try changing the override high dpi settings in the games .exe properties."</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>13960</ID>
      <Description>"+--------------------------------------------------------------------------------------------------------------------------+"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>11489</ID>
      <Description>"Fullscreen Resolution Selector"</Description>
      <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0000043800000780:1920x1080
000005A000000A00:2560X1440
0000087000000F00:3840x2160
00000B4000001400:5120x2880
000010E000001E00:7680x4320
00000C8000000960:2400x3200
0000115800000D02:3330x4440
00001900000012C0:4800x6400
00000F0000000F00:3840x3840
000007620000113A:4410x1890
0000087000001400:5120x2160
</DropDownList>
      <ShowAsHex>1</ShowAsHex>
      <ShowAsSigned>0</ShowAsSigned>
      <Color>FF0000</Color>
      <VariableType>8 Bytes</VariableType>
      <Address>ACS.exe+716999C</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>82791</ID>
          <Description>"Current Width"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>ACS.exe+716999C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>82792</ID>
          <Description>"Current Height"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>ACS.exe+716999C+4</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>82790</ID>
      <Description>"+--------------------------------------------------------------------------------------------------------------------------+"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of mov [rsi+0A],r14w</Description>
      <AddressString>ACS_Gold.exe+20FC4C8</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>3B</Byte>
        <Byte>DF</Byte>
        <Byte>75</Byte>
        <Byte>D8</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>76</Byte>
        <Byte>0A</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>81</Byte>
        <Byte>C6</Byte>
        <Byte>10</Byte>
        <Byte>07</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pBhvAssassin</Name>
      <Address>130A80020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pEntity</Name>
      <Address>130A80010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHealth</Name>
      <Address>130A80030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pInventory</Name>
      <Address>130A80040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSharedData</Name>
      <Address>052B0040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pNotoriety</Name>
      <Address>052B0050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bGodmode</Name>
      <Address>130A80060</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInvisible</Name>
      <Address>130A80070</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFullBreath</Name>
      <Address>052B0080</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash1</Name>
      <Address>130A800D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash2</Name>
      <Address>130A800E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash3</Name>
      <Address>130A800F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash4</Name>
      <Address>130A80100</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash5</Name>
      <Address>052B00D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pStructCrdBase</Name>
      <Address>130A80110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pStructCrdOffset</Name>
      <Address>130A80120</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCheckTools</Name>
      <Address>052B0100</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCheckIcons</Name>
      <Address>052B0110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCheckViewP</Name>
      <Address>052B0120</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAccomplishm</Name>
      <Address>130A80210</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAccomplVFT</Name>
      <Address>130A80220</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pNavalShipPlayer</Name>
      <Address>203C0150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInvisibleShip</Name>
      <Address>203C0160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bShowHideLua</Name>
      <Address>05280150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFreeRoam</Name>
      <Address>052B0150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AddrListID</Name>
      <Address>052B0160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>OrigCoord</Name>
      <Address>1858C0280</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>XYstepVal</Name>
      <Address>1858C0290</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ZstepVal</Name>
      <Address>1858C02A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ZstepdropHeight</Name>
      <Address>1858C02B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Xval</Name>
      <Address>1858C02C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Yval</Name>
      <Address>1858C02D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Zval</Name>
      <Address>1858C02E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInit</Name>
      <Address>052B01E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInit2</Name>
      <Address>052B01F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFreeRoam</Name>
      <Address>1858C02F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FOVCam</Name>
      <Address>1858C0340</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMapWayp</Name>
      <Address>1858C0250</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nDropHeight</Name>
      <Address>1858C0260</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nChoice</Name>
      <Address>05280160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pDayTimeMgr</Name>
      <Address>1858C0450</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pDTime</Name>
      <Address>05290160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMissionTimer2</Name>
      <Address>1858C03B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IntTimerDiffer2</Name>
      <Address>1858C03C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMissionTimer2</Name>
      <Address>1858C03D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMissionTimer</Name>
      <Address>1858C0380</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IntTimerDiffer</Name>
      <Address>1858C0390</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMissionTimer</Name>
      <Address>1858C03A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAddrPerk</Name>
      <Address>1858C0430</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPerkBChoice</Name>
      <Address>1858C0440</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pProgression</Name>
      <Address>130A80240</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCameraMgr</Name>
      <Address>130A80000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pInventCheck</Name>
      <Address>130A80050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUIMinimapMgr</Name>
      <Address>130A80080</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUIMapCheck1</Name>
      <Address>130A80090</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pLevelUp</Name>
      <Address>130A800A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFloat</Name>
      <Address>130A800B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSpeedSystem</Name>
      <Address>130A800C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>tInventory</Name>
      <Address>130A80130</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTimeOfDay</Name>
      <Address>130A80200</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInverseXY</Name>
      <Address>130A80230</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bDropHigh</Name>
      <Address>1858C0270</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCamera</Name>
      <Address>1858C0300</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bCoordSave</Name>
      <Address>1858C0310</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nFrameSpeed</Name>
      <Address>1858C0320</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pIconList</Name>
      <Address>1858C0350</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pIconBChoice</Name>
      <Address>1858C0360</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pIconLChoice</Name>
      <Address>1858C0370</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFreeCam</Name>
      <Address>1858C0330</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pChronoTimer</Name>
      <Address>1858C03E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IntChronoDiffer</Name>
      <Address>1858C03F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IntChronoSecs</Name>
      <Address>1858C0400</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bChronoTimer</Name>
      <Address>1858C0410</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>intDiv</Name>
      <Address>1858C0420</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bKillAntiDebug</Name>
      <Address>820000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GameProtect</Name>
      <Address>830000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGameProtect1</Name>
      <Address>840000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGameProtect2</Name>
      <Address>850000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>-- You must accept to execute
-- the script !
-- If not, the CE table
-- will return errors...


-- will auto-attach the game; even when table is loaded first...
-- place this at start/common part of lua script
-- will run ONLY once when CE table is loaded
-- when changing process, you must reload table or function !
--local myGame = "&lt;game&gt;.exe"
--local aalist=getAutoAttachList()
--stringlist_add(aalist,myGame)


-- *** still ToDo: ***
-- 'modal window' kicks in after X secs: stop checkTimer and report "game not found"


-- general settings:
local al = getAddressList()
local mForm = getMainForm()

-- will auto-attach the game; even when table is loaded first...
myGameID = 14867
myGame = al.getMemoryRecordByID(myGameID).Description
local myPathID = 14881
myPath = al.getMemoryRecordByID(myPathID).Description
local sGameParams = al.getMemoryRecordByID(14894).Description
-- ID main script ~ disabled upon re-attaching...
local getMrByID = al.getMemoryRecordByID
local mrMainScript = getMrByID(1993)

-- add 'Window Mode' to the [Tools] menu... ACBF only (for now)...
bWindowMode = tonumber(al.getMemoryRecordByID(14902).Description)
local bSysMenu = tonumber(al.getMemoryRecordByID(14900).Description)
-- verify regularly if correct process has been opened... - see WinTitle...
local bCorrectProc = al.getMemoryRecordByID(14836).Description
local sCheckProc = al.getMemoryRecordByID(14860).Description
local nCheckMemRange = al.getMemoryRecordByID(14861).Description
nCheckMemRange = tonumber(nCheckMemRange,16)
local sProtFlags = al.getMemoryRecordByID(14897).Description
local nChkTimer = tonumber(al.getMemoryRecordByID(14866).Description)
-- set to '0' if you want default CE GUI...
local bDefaultCompactGui = tonumber(al.getMemoryRecordByID(14831).Description)
if (bDefaultCompactGui ~= 0 and bDefaultCompactGui ~= 1) then bDefaultCompactGui = 1 end
-- set minimum size CE form...
mForm.Constraints.MinWidth = 510
mForm.Constraints.MinHeight = 300
-- add some color... ~ +compatible v6.7...  ~ default background color ~ 0xF6EEED
-- .List &amp; .Header not supported in prev.7x...
-- also converting color 'endianness'...
local hColor = al.getMemoryRecordByID(14833).Description
local sTmp = ""
for i = #hColor, 2, -2 do sTmp = sTmp .. string.sub(hColor,i-1,i) end
hColor = '0x' .. sTmp
local function setListColor(sColor)
    al.Control[0].BackgroundColor = sColor
    al.Control[0].Color = sColor
    al.Control[1].BackgroundColor = sColor
    al.Control[1].Color = sColor
end
setListColor(hColor)
-- define your default browser...
--local mr = al.getMemoryRecordByID(14654)
sBrowserID = 14830
sBrowser = al.getMemoryRecordByID(sBrowserID).Description .. '.exe'
sBrowserStringID = 14858
sBrowserString = al.getMemoryRecordByID(sBrowserStringID).Description
sSearch = " ? " .. sBrowserString .. [[ &gt;nul 2&gt;nul]]
-- Show/Hide Error &amp; Settings sections ~ see cycleConfig()...
local mrConfig = al.getMemoryRecordByID(1419)
-- prompt to save any changes in table, or simply ignore and quit instantly...
-- 'Ship Battle' script unintentionally changes table, causing a 'save'-prompt upon quiting...
-- google "memrec.DontSave still triggers Save changes"
local bPromptToSave = al.getMemoryRecordByID(14854).Description
-- sets 'editedsincelastsave' property accordingly...
-- note: setting to 'false' will stop CE from closing ?!
local function NoSaveChanges(bSaveOff)
  getMainForm().OnCloseQuery=function()
      --messageDialog('Throw away all your unsaved changes?', mtConfirmation,  mbYes, mbYesToAll)
      return bSaveOff end
end
if bPromptToSave == "0" then NoSaveChanges(true) end
-- hide most lua window elements...
-- keep menu copy ~ see settings DevTools...
if (luaMenu == nil) then luaMenu = getLuaEngine().Menu end
bHideLua = al.getMemoryRecordByID(14856).Description
if bHideLua == "1" then
   local luaForm = getLuaEngine()
   luaForm.Panel1.Visible = false
   luaForm.Splitter1.Visible = false
   luaForm.Menu = nil
end
-- Scripts to run per Timer interval
local mrScriptToRun = al.getMemoryRecordByID(1)
-- Pathname save location (eg: Dissect Code)
local pathSaveFiles = al.getMemoryRecordByID(14033).Description
local bDissectProc = al.getMemoryRecordByID(14034).Description
-- Dissect Structure: Game_engine, followed by respective offsets in chain path...
structParams = al.getMemoryRecordByID(14066).Description
nNameLookupID = 0
-- Pathname report export location...
sPathExport = getAddressList().getMemoryRecordByID(14424).Description


-- Initialize Special Scripts ~ Maintenance scripts ...
local mr = al.getMemoryRecordByID(26072)
mr.Active = true

-- redirect all prints for export to file...
-- makes use of global 'fContent' variable...!
default_print = print
function redirectPrint(bRedirect)
     if ( bRedirect == 1) then
        print = function(str)
              fContent = fContent .. str .. '\n'
        end
     else
        print = default_print
     end
end

-- functions for [Tools] submnenu...
-- **********************************
-- adds a Compact GUI...
-- google: "cheat engine CE compact mode" &amp; "Add menuItem for Main CE Form (hide/show some control)"
local sCompactMark = ' ✓'
sWindowMark = ''
sGetnameMark = ''
local sConfigMark = ''
local sMenuItem1 = 'Compact View'
local sMenuItem2 = 'Window Mode'
local sMenuItem3 = 'Errors &amp;&amp; Settings...'
local sMenuItem4 = 'Select &amp;&amp; Launch Your Game...'
local sMenuItem5 = 'Show Table Name...'
local sMenuItem6 = 'Disable All Cheats [Ctrl+F11/F12]'

local sMenuItem21 = 'Open Memory View'
local sMenuItem22 = 'Open Dissect Structure'
local sMenuItem23 = 'Open Lua Engine'
local sMenuItem24 = 'Show CE Debug Info'
local sMenuItem25 = 'Dissect Code...'
local sMenuItem26 = 'Load Dissect Code'
local sMenuItem27 = 'Save Dissect Code'
local sMenuItem28 = 'Build Dissect Code'
local sMenuItem29 = 'Clear Dissect Code'
sMenuItem30 = 'getName...'
local sMenuItem31 = 'Switch Lua Engine GUI'

local sMenuItem41 = "Delete All 'Unnamed' Structures..."
local sMenuItem42 = "Delete Structures Selectively..."
local sMenuItem43 = "Add Address By Reference"
local sMenuItem44 = "CLean Up Structures..."
local sMenuItem45 = "Switch Lua Engine Gui"

local function cycleFullCompact()
   local state = not(compactmenuitem.Caption == sMenuItem1)
   compactmenuitem.Caption = state and sMenuItem1 or (sMenuItem1 .. sCompactMark)

   mForm.Splitter1.Visible = state
   --getMainForm().Panel1.Visible    = state
   --mForm.Panel2.Visible    = state
   --getMainForm().Panel3.Visible    = state
   mForm.Panel4.Visible    = state
   mForm.Panel5.Visible    = state
   --getMainForm().Panel6.Visible    = state
   --getMainForm().Panel7.Visible    = state           -- seems to cause "incorrect gui"
   --local MPanel90 = createPanel(getMainForm().Panel7)
   --MPanel90.Anchors = '[akTop]'
   --getMainForm().Panel8.Visible    = state
   --getMainForm().Panel9.Visible    = state
   --getMainForm().Panel10.Visible   = state
   --getMainForm().Panel14.Visible   = state

   -- incorrect color gives black background...!
   if state then setListColor('0xFFFFFF') else setListColor(hColor) end
end

local bConfig = 1
local function cycleConfig()
    -- show/hide Errors &amp; Settings subsections...
    local ceVersion = tonumber(string.match(getCEVersion(), '^.-.'))
    if (bConfig == 1) then
        bConfig = 0
        sConfigMark = ''
        if (ceVersion &lt; 7) then
            mrConfig.Options = '[moHideChildren,moDeactivateChildrenAsWell]'
        else
            mrConfig.Options = '[moAlwaysHideChildren,moDeactivateChildrenAsWell]'
        end
        mrConfig.Active = false
    else
        bConfig = 1
        sConfigMark = ' ✓'
        mrConfig.Options = '[moDeactivateChildrenAsWell]'
        mrConfig.Active = true
    end
    Configmenuitem.Caption = sMenuItem3 .. sConfigMark
end

local function OpenFileDialog(sender)
    local fdialog = createOpenDialog(self)
    fdialog.Filename = myPath:match("(.*[/\\])")
    --fdialog.File = myGame:match("\\([^\\]+)$")
    fdialog.Filter = 'Executable files|*.exe'
    --fdialog.InitalDir = os.getenv('USERPROFILE')
    fdialog.Execute()
    local sEXE = fdialog.FileName:match("\\([^\\]+)$")
    if (sEXE ~= "" and sEXE ~= nil) then
       myGame = sEXE
       local sPath = fdialog.FileName:match("(.*[/\\])")
       local cmd = "start \"\" /d \"" .. sPath .. "\" " .. sEXE .. " " .. sGameParams
       --print(cmd)
       os.execute(cmd)
       --shellExecute(cmd)
       al.getMemoryRecordByID(myPathID).Description = sPath
       if ( bCorrectProc == '9' ) then
          local nCount = 1
          -- needed to attach process to CE...
          openProcess(myGame)
          while process ~= myGame do
              openProcess(myGame)
              sleep(1000)
              nCount = nCount + 1
              if (nCount &gt; 10) then
                  local sMessage = [[
                        CE can not seem to attach the program ?!
                        Use [File ~ Open Process] instead...]]
                  showMessage(sMessage)
                  break
              end
          end
          --print(string.format('%s ~ %s',tostring(enumModules()[1].Name),tostring(enumModules()[1].Address)))
          openProcess(myGame)
       end
    end
    --print(myGame)
end

myTablename = ''
local function ShowTableName()
    local sTablename = getTable()
    local sText = 'Table name &amp; location: \n'
    sText = sText .. '[' .. sTablename .. ']'
    local nType = mtInformation
    local nButton = mbOK
    messageDialog(sText, nType, nButton)
end

function getTable()
       local sOpen = mForm.OpenDialog1.FileName
       local sSave = mForm.SaveDialog1.FileName
       local s1 = sSave or sOpen -- or 'undefined'
       --print(s1 .. ' ~ ' .. myGame)
       -- gets processname now and then...
       if (s1:match("\\([^\\]+)$") == myGame:match("\\([^\\]+)$")) then s1 = myTablename end
       --local s2 = s1:match("(.*[/\\])") or s1 ~ pathname
       --local s1 = s1:match("\\([^\\]+)$") or s1 ~ filename
       myTablename = s1
       return myTablename
end

function DisableMainScript(bAll)
  if ( bDisableRun == 1 ) then return end
  --local bAll = bAll or true
  for i=0,al.Count-1 do
      if (bAll) then
          al[i].Active = false
      else
          if (al[i].Type &lt; 10) then al[i].Active = false end
      end
  end
end

local function OpenMemViewer()
    getMainForm().btnMemoryView.doClick()
end


function SplitStr(s, delimiter)
    result = {};
    for match in (s..delimiter):gmatch("(.-)"..delimiter) do
        table.insert(result, match);
    end
    return result;
end

-- functions for [Design] submnenu...
-- **********************************

-- add Design menu to Structure form...
local function OpenDissectStruct()
   --getMemoryViewForm().miDissectData2.doClick()
   --getMemoryViewForm().miOpenInDissectData.doClick()
   local form = createStructureForm()
   --local form = enumStructureForms()[1]
   local mmenu = form.Menu

   local mmenu_items = menu_getItems(mmenu)

   -- Design submenu...
   local mi1 = createMenuItem(mmenu)
   mi1.Caption = '[Design]'

   local DelUnnamedmenuitem = createMenuItem(mmenu)
   DelUnnamedmenuitem.Caption = sMenuItem41
   DelUnnamedmenuitem.OnClick = DissectStructRemove
   mi1.add(DelUnnamedmenuitem)

   local DissectStructRemoveSelectmenuitem = createMenuItem(mmenu)
   DissectStructRemoveSelectmenuitem.Caption = sMenuItem42
   DissectStructRemoveSelectmenuitem.OnClick = DissectStructRemoveSelect
   mi1.add(DissectStructRemoveSelectmenuitem)

   local Sepmenuitem = createMenuItem(mmenu)
   Sepmenuitem.Caption = '-'
   mi1.add(Sepmenuitem)

   local AddAddressRefmenuitem = createMenuItem(mmenu)
   AddAddressRefmenuitem.Caption = sMenuItem43
   AddAddressRefmenuitem.OnClick = AddAddressByRef
   mi1.add(AddAddressRefmenuitem)

   local CleanupStructmenuitem = createMenuItem(mmenu)
   CleanupStructmenuitem.Caption = sMenuItem44
   CleanupStructmenuitem.OnClick = CleanupStruct
   mi1.add(CleanupStructmenuitem)

   local Sep2menuitem = createMenuItem(mmenu)
   Sep2menuitem.Caption = '-'
   mi1.add(Sep2menuitem)

   local SwitchLuaGuimenuitem = createMenuItem(mmenu)
   SwitchLuaGuimenuitem.Caption = sMenuItem45
   SwitchLuaGuimenuitem.OnClick = SwitchLuaGui
   mi1.add(SwitchLuaGuimenuitem)

   mmenu_items.add(mi1)
   --form.show()
end

function DissectStructRemove()
  local nCount = getStructureCount()

  local sText = 'Do you want to delete all Unnamed structures now...? \n' ..
                'Note: [All] = Delete ALL structures !'
  local nResult = messageDialog(sText, mtInformation, mbYes, mbAll, mbCancel)
  if not (nResult == 6 or nResult == 8) then return end

  -- LIFO deletion...
  for i=nCount-1,0,-1 do
    --local sName = nil
    local oStruct = getStructure(i)
    local sName = string.match(oStruct.name, "unnamed")
    if (nResult == 8) then sName = oStruct.name end
    if (sName ~= nil) then oStruct.removeFromGlobalStructureList() end
  end
end

function CleanupStruct()
    local nResult = 0

    local nIdx = 0
    local aStructInfo = {}
    local aStructList = {}
    local aStructElem = {}
    function Split(s, sep)
        local sep = sep or '%.'
        local nPosSep = string.find(s,sep)
        if (nPosSep == nil) then return end           -- when explicit offsets are used...
        local sStr1 = string.sub(s,1,nPosSep-1)
        local sStr2 = string.sub(s,nPosSep+1)
        aStructInfo[sStr1] = nIdx
        aStructInfo[sStr2] = nIdx +1
        aStructList[sStr1] = nIdx

        local nOffset = 0
        local nCount = getStructureCount()
        for i=0,nCount-1 do
            local oStruct = getStructure(i)
            if (oStruct.Name  == sStr1) then
                local nElem = oStruct.Count
                for j=0,nElem-1 do
                    local oElem = oStruct.Element[j]
                    if (oElem.Name == sStr2) then nOffset = oElem.Offset; break end
                end
            end
        end

        aStructElem[sStr1..'~'..sStr2..'~'..nOffset] = nIdx
    end

    function StructElemRemove()
        local sText = 'Do you want to remove obsolete elements from all structures now...? \n\n'..
                      'Tip: Remove "Unnamed/Obsolete" structures first !'
        nResult = messageDialog(sText, mtInformation, mbYes, mbCancel)
        if not (nResult == 6 ) then return end

        -- clears Lua Engine window
        luaForm = getLuaEngine()
        luaForm.MenuItem5.doClick()

        print('\n\n')
        print('Recreating "Structure.Elements" objects... Please, be patient... \n')

        local nCount = getStructureCount()
        -- perhaps: better to delete structs first and then add struct.elements...?!
        for i=nCount-1,0,-1 do
            local oStruct = getStructure(i)
            local sName = string.match(oStruct.name, "unnamed")
            if (sName == nil) then
                oStruct.destroy()
            end
        end

        local sPrevStruct = ''
        local oCurStruct = nil
        for k,v in ipairs(aStructElem) do
            local aString = SplitStr(v, '~')
            local sCurStruct = aString[1]

            print('=&gt; ['.. k .. ']: ' .. aString[1] .. ' + ' .. aString[2] .. ' + ' .. string.format('%X',tonumber(aString[3])))
            if (sCurStruct ~= sPrevStruct) then
                oCurStruct = createStructure(aString[1])
                oCurStruct.addToGlobalStructureList()
            end
            local oElem = oCurStruct.addElement()
            oElem.Name = aString[2]
            oElem.Offset = tonumber(aString[3])
            oElem.Vartype = 3
            sPrevStruct = aString[1]
        end
    end

    -- *********************************
    -- *** looping through memrecords...
    local al = getAddressList()
    local nCount = al.Count
    local sSep = '%.'

    for i=0,nCount-1 do
        local mr = al.getMemoryRecord(i)
        local addrVal = tostring(tonumber(mr.Address) or -99)
        if (addrVal == "-99") then addrVal = string.sub(mr.Address,1,1) end
        local sDescr = string.match(mr.Description,"pointerscan")

        if ( (mr.Type &lt; 10 and mr.OffsetCount &gt; 0 and sDescr == nil) or addrVal == "+") then
            --print(string.format('[%03d/%03d~%03d]: %s =&gt; %02d - %03d |  %s ~&gt; %s {%s}',
             --                    i, mr.ID, mr.Index, mr.Description, mr.Type, mr.OffsetCount, mr.Address, addrVal, sDescr))

            if (string.sub(mr.Address,1,1) == "+") then
                Split(string.sub(mr.Address,2),sSep)
            end
            for j=0,mr.OffsetCount-1 do
                local sOffset = tonumber(mr.OffsetText[j],16)
                if (sOffset == nil) then
                    Split(mr.OffsetText[j],sSep)
                end
            end
        end
    end

    local aTmp = {}
    for n in pairs(aStructElem) do table.insert(aTmp, n) end
    table.sort(aTmp)
    aStructElem = aTmp

--[[
    for i,n in ipairs(aStructElem) do
        print(i .. ' - ' .. n .. ' [' .. aStructElem[i] .. ']')
    end


  local nCount = getStructureCount()
  local sName = ''
  for i=0,nCount-1 do
      local oStruct = getStructure(i)
      sName = oStruct.name
      print(tostring(sName))
  end

for k,v in pairs(aStructInfo) do
    print(k)
end
print('\n')
for k,v in pairs(aStructList) do
    print(k)
end
]]--

    StructElemRemove()

    if (nResult == 6 ) then
        print('\n =&gt; Verify your structures and then [Save As] your table under new name...')
        print('\n =&gt; Just close window when no longer needed...')
    end
end

-- ***
-- source info: google "cheat engine a way to create a checkbox list?"
function DissectStructRemoveSelect()
    function createScrollBox(Parent)
        local scrbox = createComponentClass('TScrollBox', Parent)
        scrbox.Parent = Parent
        return scrbox
    end

    local function addImgButton(oPanel)
        local btn1 = createButton(oPanel)
        btn1.Width = 120
        btn1.Height = 20
        btn1.Top = oPanel.Height - btn1.Height - 10
        btn1.Left = 10
        btn1.Caption = 'Delete selected...'
        btn1.onClick = bg_Toggle
        btn1.ShowHint = true
        btn1.Hint = " Click here to initiate deletion... "
    end

    function bg_Toggle(sender)
        local sText = 'Do you want to delete these selected structures now...?'
        local nResult = messageDialog(sText, mtInformation, mbYes, mbCancel)
        if not (nResult == 6 ) then return end

        local nCount = getStructureCount()
        local i
        for i=nCount-1,0,-1 do
            --print(_G['cbx'..i].State)
            local oStruct = getStructure(i)
            if (_G['cbx'..i].State == 1) then
                oStruct.destroy()
            end
        end
        f.close()
    end

    function buildListbox()
        local nCount = getStructureCount()
        if (nCount == 0) then return end

        f = createForm()
        f.Top = 200
        f.Left = 200
        f.Width = 350
        f.Height = 350
        f.Caption = "Deleting structures..."

        local oPanel = createPanel(f)
        oPanel.width,oPanel.top,oPanel.left = 320,10,10
        oPanel.Height = 300

        addImgButton(f)

        a = createScrollBox(oPanel)
        a.Top = 0
        a.Left = 10
        a.Width = 300
        a.Height = 290
        a.Color = '0x00DFF7FF'
        a.ScrollWidth = 10
        a.VertScrollBar.Increment = 200
        a.VertScrollBar.Page = 300
        --a.VertScrollBar.Smooth = true
        local nRange = nCount * 15            -- still gives good results with "full" structure list...
        a.VertScrollBar.Range = nRange

        local ctop=a.Top
        local i
        for i=0,nCount-1 do
            local oStruct = getStructure(i)
            sName = oStruct.name
            local cbxname='cbx'..i
            --print(cbxname .. ' : ' .. sName)
            local cbx=createCheckBox(a)
            _G[cbxname]=cbx
            cbx.Left = 10
            cbx.Top = ctop
            ctop=ctop+20
            cbx.caption = sName
        end
    end

    buildListbox()
end

-- ***
-- source info: google "cheat engine Change description/value of a node in structure dissect"
function AddAddressByRef()
    local bCreateStruct = true
    local bReplaceBracket = '_'
    local bReplaceSpace = false

    local structForm = enumStructureForms()[1]
    if (structForm == nil) then return end

    -- gives base/startaddress of chain_Structs...
    local sBaseAddr = structForm.Column[0].AddressText
    local sBaseAddr2 = sBaseAddr:match("%[(.-)%]")
    if (sBaseAddr2 ~= nil) then sBaseAddr = sBaseAddr2 end
    --print(string.format("A) %X - %s",structForm.Column[0].Address, sBaseAddr))

    local aStructList = {}
    local nCount = getStructureCount()
    local sName = ''

    for i=0,nCount-1 do
        local oStruct = getStructure(i)
        sName = oStruct.name
        if (sName ~= nil) then aStructList[sName] = i end
        --print('{' .. i .. '}: ' .. tostring(sName))
    end

--[[
for k,v in pairs(aStructList) do
    print(k .. ' ~ ' .. v)
end
]]--

    local entry = structForm.tvStructureView.Selected
    local struct = integerToUserData(entry.Parent.Data)
    local structelement = struct.Element[entry.Index]

    local offsetlist={}
    nCount = 0
    while entry.Parent do
        local sStruct = structelement.Name
        -- replacing [] and 'spaces'...
        local sStruct1 = string.gsub(sStruct,'[%[%]]',bReplaceBracket)
        if (sStruct ~= sStruct1) then
            if (bReplaceBracket ~= '') then
                if (bReplaceSpace) then sStruct = string.gsub(sStruct,'%s',bReplaceBracket) end
                sStruct = string.gsub(sStruct,'[%[%]]',bReplaceBracket)
            else
                sStruct = ''
            end
        end
        local bUseOffset = 0
        --print(string.format('[%X] = %s',structelement.Offset, sStruct))
        table.insert(offsetlist,1,{structelement.Offset, sStruct, structelement.Vartype, bUseOffset})
        entry = entry.Parent
        if entry.Parent then
            struct = integerToUserData(entry.Parent.Data)
            structelement = struct.Element[entry.Index]
        end
    nCount = nCount + 1
    end
    -- add mainstruct name...
    table.insert(offsetlist,1,{0,struct.Name,0,0})

    -- create memrecord...
    local al = getAddressList()
    local mr = al.createMemoryRecord()
    local sDescript = offsetlist[#offsetlist][2]
    if (sDescript == '') then sDescript = '_no_Name_Descriptive' end
    mr.Description = sDescript
    mr.Address = sBaseAddr
    mr.Type = offsetlist[#offsetlist][3]
    mr.OffsetCount = #offsetlist-1

    for i=2,#offsetlist do
        local sCurStruct = offsetlist[i-1][2]
        if (bCreateStruct and sCurStruct ~= '') then
            local oStruct = getStructure(aStructList[sCurStruct])
            if (aStructList[sCurStruct] == nil) then
                oStruct = createStructure(sCurStruct)
                oStruct.addToGlobalStructureList()
            end
            local oElem = oStruct.getElementByOffset(offsetlist[i][1])
            if (oElem == nil) then oElem = oStruct.addElement() end
            oElem.Offset = offsetlist[i][1]
            oElem.Name = offsetlist[i][2]
        end
        local sAddr1 = offsetlist[i-1][2]
        local sAddr2 = offsetlist[i][2]
        sAddress =  sAddr1 .. '.' .. sAddr2
        if (sAddr1 == '' or sAddr2 == '') then mr.Offset[#offsetlist-i] = offsetlist[i][1]
        else mr.OffsetText[#offsetlist-i] = sAddress end

        --print(string.format('%X ~ %s =&gt; Type: %d |  bUseOffset: %d',offsetlist[i][1], sAddress, offsetlist[i][3], offsetlist[i][4]))
    end
end

local function OpenLuaEngine()
    form = getLuaEngine()                            -- get Lua Engine form
    form.MenuItem5.doClick()                         -- clear its window (using menu_item)
    getMemoryViewForm().miLuaEngine.doClick()
    form.Panel1.Visible = true
    form.Splitter1.Visible = true
    form.Menu = luaMenu
end

function SwitchLuaGui()
    if (bHideLua == 0) then bHideLua = 1 else bHideLua = 0 end

    form = getLuaEngine()
    form.MenuItem5.doClick()                         -- clearing lua window
    getMemoryViewForm().miLuaEngine.doClick()        -- opening lua window

    if (luaMenu == nil) then luaMenu = form.Menu end

    if (bHideLua == 0) then
       form.Panel1.Visible = true
       form.Splitter1.Visible = true
       form.Menu = luaMenu

       form.Font.Name = 'default'
       form.Font.Size = 10

       --form.Panel2.Visible = false
       --form.Panel3.Visible = false
    else
        form.Panel1.Visible = false
        form.Splitter1.Visible = false
        form.Menu = nil
    end
end

-- END functions for [Design] submnenu...
-- **************************************

local function CheckCEinfo()
    local myCEset = getSettings()                     -- or getSettings('')
    local nDebugger1 = myCEset.Value['Use VEH Debugger']
    local nDebugger2 = myCEset.Value['Use Windows Debugger']
    local nDebugger3 = myCEset.Value['Use Kernel Debugger']
    local sDebugger = 'VEH'
    if ( nDebugger2 == '1') then sDebugger = 'Windows' end
    if ( nDebugger3 == '1') then sDebugger = 'Kernel' end

    local nBP1 = myCEset.Value['Hardware breakpoints']
    local nBP2 = myCEset.Value['Software breakpoints']
    local nBP3 = myCEset.Value['Exception breakpoints']
    local sBP = 'Hardware'
    if ( nBP2 == '1') then sBP = 'Software' end
    if ( nBP3 == '1') then sBP = 'Page Exceptions' end

    showMessage('Debugger   : ' .. sDebugger .. "\n\z" .. 'Breakpoints: ' .. sBP)
--[[
    print('Debugger   : ' .. sDebugger .. '\n')
    print('Breakpoints: ' .. sBP .. '\n')

    myCEset = getSettings('VersionCheck')
    print('VersionCheck:')
    print('Check On Launch: \t' .. myCEset.Value['CheckOnLaunch'])
    print('Check Interval: \t' .. myCEset.Value['CheckInterval'])
    ]]
end

function chkDirFile(sPath, bType)
    -- directory can NOT end with a '\'... !
    local sCheck = string.sub(sPath,-1)
    if (sCheck == '\\') then sPath = string.gsub(sPath,'\\$','') end
    --print(sPath)
    local attr = lfs.attributes(sPath)
    local sType = 'directory'
    if (bType == 1) then sType = 'file' end
    if attr then
       -- file/folder exists or get filesize...
       if (bType == 2) then
          if (attr.size &lt; 1000) then
             return '(file seems invalid as being too small... ?!) \n'
          else return '\n' end
       end
       if attr.mode == sType then
          return true
       else
          return false
       end
    end
    return false
end

function getPath(path, sMgs, sSection)
    local path = path
    if ( path == '&lt;game&gt;' ) then
       local bExist = chkDirFile(myPath,0)
       if bExist then path = myPath else path = 'undefined' end
    end
    if ( path == '&lt;table&gt;' ) then
       local sTablename = getTable():match("(.*[/\\])")
       local bExist = chkDirFile(sTablename,0)
       if bExist then path = sTablename else path = 'undefined' end
    end
    local bExist = chkDirFile(path,0)
    if not bExist then
       showMessage('Your \'' .. sMgs .. '\'  is incorrect ! \n' ..
                    '[' .. path .. '] \n\n' ..
                   'Check [' .. sSection .. '...] and correct accordingly...')
       path = 'undefined'
    end
    return path
end

local function DissectCode(sender)
    local path = getPath(pathSaveFiles,'Dissect Code location','Developer tools')
    if ( path == 'undefined' ) then return end

    -- for those rare occassions whereby myGame is not picked up...
    if ( bDissectProc == '0' ) then
       --if (process == nil or process == '') then return end
       --if (myGame == nil or myGame == '') then return end
       if not openProcess(myGame) then
          if not openProcess(process) then
             showMessage('You need to attach a game first... !')
             return
          else
              myGame = process
          end
       end
    else
        -- manually attaching process can give problems for certain games...
        if not openProcess(process) then
           showMessage('You need to attach a game first... !')
           return
        else
           myGame = process
        end
    end

    local sCheck = string.sub(path,-1)
    if (sCheck == '\\') then path = string.gsub(path,'\\$','') end
    path = string.format(path .. '\\' .. myGame:match("(.+)%..+") .. '.disCode')
    --print(path)

    local bExist = chkDirFile(path,1)
    local sFileExist = 'Following Dissect Code file already exists: \n'
    local sFileInvalid = '\n'
    if bExist then
        local bSize = chkDirFile(path,2)
        -- filesize in bytes...
        if not (bSize) then
           sFileInvalid = '(file seems invalid as being too small... ?!) \n'
        end
    end

    local menufn = sender.Caption
    if menufn == sMenuItem26 then
       if bExist then
          sFileInvalid = chkDirFile(path,2)
          if (not ( sFileInvalid == '\n') ) then
             local sText = sFileExist ..
                           '[' .. path .. '] \n' ..
                           sFileInvalid ..
                           '\n\n' ..
                           'Therefore this file will not be loaded...'
             showMessage(sText)
             return
          end
          local sText = sFileExist ..
                        '[' .. path .. '] \n\n\n' ..
                        'Do you want to load it now...? \n' ..
                        '&gt; loading will take about 10~30 secs \n' ..
                        '&gt; wait for it to finish...'
          local nResult = messageDialog(sText, mtInformation, mbYes, mbCancel)
          if not (nResult == 6 ) then return end
       else
           local sText = 'Following Dissect Code file could not be found:' ..
                         '\n' .. '[' .. path .. ']'
           showMessage(sText)
           return
       end

       local bOK = getDissectCode().loadFromFile(path)
       if (bOK) then
          sText = 'Dissect Code file loaded successfully...'
       else
          sText = 'Dissect Code file could not be loaded... ?!'
       end
       showMessage(sText)
    end

    if menufn == sMenuItem27 then
       if ( getDissectCode().getReferencedStrings() == nil ) then
          sText = 'No Dissect Code Analysis currently exits... \n' ..
                  'Either Load a Dissect Code file or Build one... !'
          showMessage(sText)
          return
       end
       if bExist then
          local sText = 'Are your sure you want to overwrite it now...?! \n' ..
                        '&gt; saving info will take about 10~30 secs \n' ..
                        '&gt; wait for it to finish...'
          sFileInvalid = chkDirFile(path,2)
          sText = sFileExist ..
                  '[' .. path .. '] \n' ..
                  sFileInvalid  .. '\n\n' ..
                  sText

          local nResult = messageDialog(sText, mtWarning, mbYes, mbCancel)
          if not (nResult == 6 ) then return end
       else
          sText = 'The Dissect Code file will be save as follows: \n' ..
                  '[' .. path .. '] \n\n\n' ..
                  'Do you want to save it now...? \n' ..
                  '&gt; saving info will take about 10~30 secs \n' ..
                  '&gt; wait for it to finish...'
          local nResult = messageDialog(sText, mtWarning, mbYes, mbCancel)
          if not (nResult == 6 ) then return end
       end

       local bOK = getDissectCode().saveToFile(path)
       -- verify if filesize makes sense...
       sFileInvalid = chkDirFile(path,2)
       if (not ( sFileInvalid == '\n') ) then
          local sText = 'Following Dissect Code file has been created: \n' ..
                        '[' .. path .. '] \n' ..
                        sFileInvalid .. '\n' ..
                        'Therefore you should try to resave and/or rebuild...'
          showMessage(sText)
          return
       end

       if (bOK) then
          sText = 'Dissect Code file saved successfully...'
       else
          sText = 'Dissect Code file could not be saved... ?!'
       end
       showMessage(sText)
    end

    if menufn == sMenuItem28 then
       local sText = 'The Dissect Code routine can run a very long time ! \n' ..
                     'Are you sure you want to start this process now ? \n' ..
                     '(close the analysis window when finished...) ?'
       if bExist then
          sFileInvalid = chkDirFile(path,2)
          sText = sFileExist ..
                  '[' .. path .. '] \n' ..
                  sFileInvalid .. '\n\n' ..
                  sText
       end
       local nResult = messageDialog(sText,mtWarning, mbYes, mbCancel)
       if not (nResult == 6 ) then return end

       -- also possible to call: miReferencedFunctions
       getMemoryViewForm().Dissectcode1.doClick()
    end

    if menufn == sMenuItem29 then
       local sText = 'Are you sure you want to clear the current Dissect Code Analysis ?'
       if bExist then
          sFileInvalid = chkDirFile(path,2)
          sText = sFileExist ..
                  '[' .. path .. '] \n' ..
                  sFileInvalid .. '\n\n' ..
                  sText
       end
       local nResult = messageDialog(sText,mtWarning, mbYes, mbCancel)
       if not (nResult == 6 ) then return end

       getDissectCode().clear()
    end
end



-- section [Design] submnenu (main)...
-- ****************************

-- adding submenus...
-- ******************
-- 1 = menuTitle ~2 = functionName
aMenuEngine = { {'getName Anvil','getAnvil'},{'getName UE3','getUE3'},{'getName UE4','getUE4'},{'getName UE4.1x','getUE41'} }
local function addMenuItem()
   local mmenu = mForm.Menu
   local mmenu_items = menu_getItems(mmenu)

   -- Design submenu...
   if (bSysMenu == 1) then
      local mi2 = createMenuItem(mmenu)
      mi2.Caption = '[Design]'

      local MemViewmenuitem = createMenuItem(mmenu)
      MemViewmenuitem.Caption = sMenuItem21
      MemViewmenuitem.OnClick = OpenMemViewer
      mi2.add(MemViewmenuitem)

      local DissectStructmenuitem = createMenuItem(mmenu)
      DissectStructmenuitem.Caption = sMenuItem22
      DissectStructmenuitem.OnClick = OpenDissectStruct
      mi2.add(DissectStructmenuitem)

      local LuaEnginemenuitem = createMenuItem(mmenu)
      LuaEnginemenuitem.Caption = sMenuItem23
      LuaEnginemenuitem.OnClick = OpenLuaEngine
      mi2.add(LuaEnginemenuitem)

      local Sepmenuitem = createMenuItem(mmenu)
      Sepmenuitem.Caption = '-'
      mi2.add(Sepmenuitem)

      local CheckDebugmenuitem = createMenuItem(mmenu)
      CheckDebugmenuitem.Caption = sMenuItem24
      CheckDebugmenuitem.OnClick = CheckCEinfo
      mi2.add(CheckDebugmenuitem)

      local Dissect_mi = createMenuItem(mmenu)
      Dissect_mi.Caption = sMenuItem25
      --DissectLoadmenuitem.OnClick = DissectCode
      mi2.add(Dissect_mi)

      local DissectLoadmenuitem = createMenuItem(mmenu)
      DissectLoadmenuitem.Caption = sMenuItem26
      DissectLoadmenuitem.OnClick = DissectCode
      Dissect_mi.add(DissectLoadmenuitem)

      local DissectSavemenuitem = createMenuItem(mmenu)
      DissectSavemenuitem.Caption = sMenuItem27
      DissectSavemenuitem.OnClick = DissectCode
      Dissect_mi.add(DissectSavemenuitem)

      local DissectBuildmenuitem = createMenuItem(mmenu)
      DissectBuildmenuitem.Caption = sMenuItem28
      DissectBuildmenuitem.OnClick = DissectCode
      Dissect_mi.add(DissectBuildmenuitem)

      local DissectClearmenuitem = createMenuItem(mmenu)
      DissectClearmenuitem.Caption = sMenuItem29
      DissectClearmenuitem.OnClick = DissectCode
      Dissect_mi.add(DissectClearmenuitem)

      -- show Anvil option...
      local gameOffsets = SplitStr(structParams, "~")
      local bStructEnabled = tonumber(string.format('%d',gameOffsets[1]))
      if aMenuEngine[bStructEnabled] then sMenuItem30 = aMenuEngine[bStructEnabled][1] end

      if (bStructEnabled ~= 99) then
         Getnamemenuitem = createMenuItem(mmenu)
         Getnamemenuitem.Caption = sMenuItem30 .. sGetnameMark
         Getnamemenuitem.OnClick = enableStructLookup
         mi2.add(Getnamemenuitem)
      end

      local Sep2menuitem = createMenuItem(mmenu)
      Sep2menuitem.Caption = '-'
      mi2.add(Sep2menuitem)

      SwitchLuamenuitem = createMenuItem(mmenu)
      SwitchLuamenuitem.Caption = sMenuItem31
      SwitchLuamenuitem.OnClick = SwitchLuaGui
      mi2.add(SwitchLuamenuitem)

      mmenu_items.add(mi2)
   end

   -- Tools submenu...
   local mi = createMenuItem(mmenu)
   mi.Caption = '[Tools]'

   compactmenuitem = createMenuItem(mmenu)
   compactmenuitem.Caption = sMenuItem1
   compactmenuitem.OnClick = cycleFullCompact
   mi.add(compactmenuitem)

   if (bWindowMode == 1) then
      WinModemenuitem = createMenuItem(mmenu)
      WinModemenuitem.Caption = sMenuItem2 .. sWindowMark
      WinModemenuitem.OnClick = cycleWinMode
      mi.add(WinModemenuitem)
   end

   OpenFilemenuitem = createMenuItem(mmenu)
   OpenFilemenuitem.Caption = sMenuItem4
   OpenFilemenuitem.OnClick = OpenFileDialog
   OpenFilemenuitem.Name = 'LaunchGame'
   mi.add(OpenFilemenuitem)

   local DisableCheatsmenuitem = createMenuItem(mmenu)
   DisableCheatsmenuitem.Caption = sMenuItem6
   DisableCheatsmenuitem.OnClick = DisableMainScript
   mi.add(DisableCheatsmenuitem)

   local Sepmenuitem = createMenuItem(mmenu)
   Sepmenuitem.Caption = '-'
   mi.add(Sepmenuitem)

   local ShowTablemenuitem = createMenuItem(mmenu)
   ShowTablemenuitem.Caption = sMenuItem5
   ShowTablemenuitem.OnClick = ShowTableName
   mi.add(ShowTablemenuitem)

   Configmenuitem = createMenuItem(mmenu)
   Configmenuitem.Caption = sMenuItem3 .. sConfigMark
   Configmenuitem.OnClick = cycleConfig
   mi.add(Configmenuitem)

   mmenu_items.add(mi)

   itemMenusalreadyexists = 'yes'
end


if not itemMenusalreadyexists then addMenuItem() end
if (bDefaultCompactGui == 1) then cycleFullCompact() end


-- adding image footer to gui...
-- google: "cheat engine Adding a background picture"
-- **************************************************
local sImgName = 'FearlessRev_Footer.png'

local function attachBackground(wc,tblFile)
   local p = createPicture()
   p.loadFromStream(findTableFile(tblFile).Stream)
   wc.OnPaint = function(sender)
     local c = sender.getCanvas()
     local bitmap = p.getBitmap()
     local width = wc.width
     -- centering image...
     width = (width /2) - (bitmap.Width /2) -- image width
     c.draw(width,0,bitmap)
   end
end


local function addImgFooter(oPanel,tblFile)
   if ImgFooter then return end
   --MPanelImg = createPanel(al)
   local p = createPicture()
   p.loadFromStream(findTableFile(tblFile).Stream)
   local bitmap = p.getBitmap()
   oPanel.width,oPanel.top,oPanel.left = 10,0,10
   -- get panel height based on img_height...
   oPanel.Height = bitmap.Height + 2
   oPanel.Align = alBottom
   oPanel.Caption = 'FearlessRevolution'
   ImgFooter = 'yes'
   -- additional settings...
   oPanel.Anchors = '[akBottom]'
   oPanel.Color = hColor                -- use same color as addresslist
   oPanel.setBevelOuter(0)              -- hide surrounding "border"border
end

-- google "cheat engine edit box has two properties that do not work"
local function addImgButton(oPanel)
   local btn1 = createButton(oPanel)
   btn1.Width = 35
   btn1.Height = 20
   btn1.Top = oPanel.Height - btn1.Height - 5
   btn1.Left = 5
   btn1.Caption = 'Info'
   btn1.onClick = bg_Toggle
   btn1.ShowHint = true
   btn1.Hint = " Click this button to open your browser, which will then show you this game\'s topic @ FRF... "
end

function bg_Toggle(sender)
    os.execute([[start "" ]] ..  sBrowser .. sSearch)
end

if not imgFooteralreadyexists then
   local MPanelImg = createPanel(al)
   addImgFooter(MPanelImg,sImgName)
   attachBackground(MPanelImg,sImgName)
   addImgButton(MPanelImg)

   cycleConfig()

   imgFooteralreadyexists = 'yes'
end

-- show info in Title bar...
-- *************************
function WinTitleTimer()
    local tmer2 = createTimer(mForm, false)
    tmer2.OnTimer = UpdateWinTitle
    tmer2.Interval = nChkTimer
    tmer2.Enabled = true
end

local sPID = 0
local bReset = 0
local bDisableRun = 0
function UpdateWinTitle()
    -- scripts to run w/ every time_interval...
    mrScriptToRun.Active = true
    -- ***
    local sGame = myGame
    local myPID = getProcessIDFromProcessName(myGame)
    if (myPID == sPID) then return end
    sPID = getProcessIDFromProcessName(myGame)
    if (sPID == nil) then sPID = 0 end
    --print(string.format('%s -- %s -- %s',myGame, tostring(sPID), process))
    if ( bCorrectProc == '0' or bCorrectProc == '1' or bCorrectProc == '2') then
       if ( openProcess(myGame) ) then
          -- x64 games can give "timely loading issues" here...
          if not pcall(function() getAddress(myGame) end) then sPID = 0; return end
          local startAddr = getAddress(myGame)
          local endAddr = nCheckMemRange
          if (endAddr &lt;= 0 ) then endAddr = getModuleSize(process) end
          endAddr = startAddr + endAddr
          local addrProc = getStaticAddr(sCheckProc,0,"",3,startAddr,endAddr,sProtFlags)
          if (addrProc == nil or addrProc == 0) then sPID = 0 else bReset = 1 end
          --print(tostring(sGame) .. ' + ' .. tostring(process))
       end
    end

    if (sPID == 0 or process == nil) then
       sGame = '&lt;no/incorrect Game process selected&gt;'
       -- in case of crashes, reset variable...
       myGame = al.getMemoryRecordByID(myGameID).Description
       if (bCorrectProc == '9') then myGame = '' end
       OpenFilemenuitem.Enabled = true
       bDisableRun = 0
    end
    --print("**" .. tostring(sPID) .. ' - ' .. tostring(process))
    mForm.Caption="Cheat Engine v" .. getCEVersion() .. "  ~  [" .. sGame .. "]"

    if (tmer2 ~= nil and sPID ~= 0 and bCorrectProc == '0') then
        tmer2.destroy()
        tmer2 = nil
    end

    -- "reset" table for pre-v7 CEs...
    if (bReset == 1) then
       -- using hotkey to disable script will disable scripts AND locked values...
       DisableMainScript(true)
       bReset = 0
       bDisableRun = 1
       OpenFilemenuitem.Enabled = false

       if (bWindowMode == 1) then addrD3D = 0; CheckWindowMode() end
    end

    if ( bCorrectProc == '2' and myPID ~= sPID) then CheckOnFilename() end
    --print("***" .. tostring(myStartAddr) .. " -*")
end

-- checks processlist for "similar" name...
function CheckOnFilename()
    -- remove extension...
    local sFilename = myGame:match("(.+)%..+")
    --print(myGame .. sFilename)
    if (sFilename == '' or sFilename == nil) then return end
    for pid,name in pairs(getProcessList()) do
        local bHit = string.find(name, sFilename)
        if ( bHit ~= nil ) then
           --print(string.format("%x - %s", pid,name))
           myGame = name
        end
    --print(string.format("%x - %s", pid,name))
    end
end

-- see Settings page for details...
WinTitleTimer()

-- ensures that myGame is updated when [File ~ Open Process]-ing...
function onOpenProcess(processId)
    myGame = getProcessList()[processId]
    --print(string.format('ProcessID: %d &amp; name: %s', processId,getProcessList()[processId] ))
    getTable()
end

-- google "cheat engine REQ: access to CT table name - [Solved] ~ @CEF - Cheat Engine section"
function onTableLoad(before)
   if ( before == false ) then
      getTable()
   end
end


-- collects [address] found in opcode...
-- see also 'getName' as alternative...!
function getStaticAddr(sAOB,nOffset,sBaseAddr,nEval,nStartMem,nEndMem,sFlags)
  nEval = nEval or 0
  nStartMem = nStartMem or 0
  nEndMem = nEndMem or 0xffffffffffffffff
  sFlags = sFlags or "+X-C-W"
  --local scan1 = AOBScan(sAOB,"+X-C-W")
  --print("* " .. scan1[0])
  local scan = createMemScan(false)
  scan.setOnlyOneResult(true)
  scan.firstScan(soExactValue,vtByteArray,rtRounded,sAOB,nil,nStartMem,nEndMem,sFlags,
                                      fsmNotAligned,nil,true,false,false,false)
  scan.waitTillDone()
  scan.getOnlyResult()

  local bArch = targetIs64Bit()
  local addrStruct = scan.Result
  --print(string.format('+ %X +',scan.Result))
  if (nEval == 0 or nEval == 2) then
     local offsVal = scan.Result - nOffset
     --print(string.format('- %X -',offsVal))
     offsVal = string.format('%X',readInteger(offsVal,true))
     --print(offsVal)
     addrStruct = tonumber(offsVal,16)
     if ( bArch ) then addrStruct = scan.Result + tonumber(offsVal,16) - nOffset + 4 end
     --print(string.format('%X',addrStruct))
     if (nEval == 2) then
        addrStruct = readPointer(addrStruct)
     end
  end

  scan.destroy()
  if (nEval == 3) then return addrStruct end

  local addrFound = getAddress(sBaseAddr)
  if ( bArch ) then writeQword(addrFound,addrStruct) else writeInteger(addrFound,addrStruct) end
  --print(string.format('* %X *',addrStruct))
end

-- see Settings ~ Maintenance scripts...
function Form_Actions(sender)
    runFormScripts(sender)
end
-- run script at least once...
local mr = al.getMemoryRecordByID(26071)
mr.Active = true

</LuaScript>
</CheatTable>
