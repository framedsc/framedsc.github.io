{"version":3,"sources":["assets/svgIcons.jsx","components/FramedModal/FramedModal.jsx","utils/utils.js","components/ImageGrid.jsx","assets/framed_intro_pino.jpg","utils/ModalContext.js","components/ImageNav.jsx","components/Spinner/Spinner.jsx","components/ImageViewer.jsx","pages/ImageGridContainer.jsx","api/request.js","App.js","reportWebVitals.js","index.js"],"names":["SortUp","className","xmlns","width","height","viewBox","fill","d","SortDown","FramedIcon","x","y","Menu","Fullscreen","points","Cancel","ExitFullscreen","About","FramedModal","show","component","onClose","visibleClass","undefined","handleClose","React","useCallback","document","fullScreen","mozFullScreen","webkitIsFullScreen","msFullscreenElement","exitFullscreen","classNames","onClick","event","stopPropagation","useViewport","actualWidth","documentElement","clientWidth","body","useState","setWidth","onWindowLoad","useEffect","resizeTimeout","window","setTimeout","handleWindowResize","windowWidth","clearTimeout","addEventListener","removeEventListener","breakpoints","getBrowserFullscreenElementProp","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","Error","ImageGrid","images","rowTargetHeight","borderOffset","maxWidth","makeSmaller","image","amount","newHeight","getCumulativeWidth","i","length","buildRows","currentRow","currentWidth","imageCounter","rows","processedImages","parseInt","id","author","authorsAvatarUrl","data","date","gameName","score","fullWidth","fullHeight","shotUrl","thumbnailUrl","push","processImages","normalizeImages","fitImagesInRow","difference","amountOfImages","addToEach","n","style","paddingLeft","paddingTop","map","row","index","imageIndex","marginRight","marginBottom","alt","src","Math","ceil","cursor","renderGrid","buildGrid","ModalContext","createContext","showL","ImageNav","ref","onClickOutside","options","reverseSort","updateSort","updateType","updateSearch","active","setActive","type","setType","searchTerm","setSearchTerm","setModal","useContext","showAbout","framedBanner","icon","renderSearch","name","value","onChange","target","toLowerCase","placeholder","renderSort","item","isActive","key","buttonClass","label","selection","renderFilters","checked","htmlFor","renderModalButton","isMobile","showMenu","setShowMenu","viewportClass","mobileMenuRef","useRef","handleClickOutside","current","contains","Spinner","props","renderSpinner","bind","baseClass","this","spinnerContainer","cx","cy","r","modifierClass","modifier","spinner","svgSpinner","PureComponent","defaultProps","reducer","state","action","initialized","loadedState","showImage","ImageViewer","isFullscreen","setIsFullscreen","fullScreenError","onPrev","onNext","setBgImage","useReducer","dispatch","imageViewerContent","elRef","useLayoutEffect","onfullscreenchange","requestFullscreen","then","catch","useFullscreenStatus","e","prevDisabled","findIndex","nextDisabled","handlePrev","handleNext","handleKeyboard","handlers","useSwipeable","onSwipedLeft","left","onSwipedRight","onSwiping","dir","deltaX","onSwiped","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","fullscreenClass","loadedClass","disabled","onLoad","ImageGridContainer","sortOptions","imageData","setImageData","sortOption","setSortOption","showViewer","setShowViewer","viewerSrc","setViewerSrc","isReverse","setIsReverse","modal","searchData","filter","obj","Object","keys","reduce","acc","curr","toString","includes","filterImages","results","sortMethod","a","b","sort","slice","container","querySelector","margin","Provider","option","scrollTo","top","behavior","keyword","axios","require","App","setData","setInitialized","bgImageContainer","setBgImageContainer","setBackground","imageObject","bgImage","backgroundImage","getNewImages","get","response","entries","_default","shots","forEach","shotData","randomImageIndex","floor","random","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5abe7d3c.chunk.js","sourcesContent":["export const SortUp = () => {\r\n  return (\r\n    <div className=\"sort-icon\">\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"10\"\r\n        height=\"10\"\r\n        viewBox=\"0 0 292 292\"\r\n        fill=\"#fff\"\r\n      >\r\n        <g>\r\n          <path\r\n            d=\"M286.935,197.286L159.028,69.379c-3.613-3.617-7.895-5.424-12.847-5.424s-9.233,1.807-12.85,5.424L5.424,197.286\r\n                C1.807,200.9,0,205.184,0,210.132s1.807,9.233,5.424,12.847c3.621,3.617,7.902,5.428,12.85,5.428h255.813\r\n                c4.949,0,9.233-1.811,12.848-5.428c3.613-3.613,5.427-7.898,5.427-12.847S290.548,200.9,286.935,197.286z\"\r\n          />\r\n        </g>\r\n      </svg>\r\n\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"10\"\r\n        height=\"10\"\r\n        viewBox=\"0 0 292 292\"\r\n        fill=\"#aaa\"\r\n      >\r\n        <g>\r\n          <path\r\n            d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\r\n            C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\r\n            s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"\r\n          />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SortDown = () => {\r\n  return (\r\n    <div className=\"sort-icon\">\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"10\"\r\n        height=\"10\"\r\n        viewBox=\"0 0 292 292\"\r\n        fill=\"#aaa\"\r\n      >\r\n        <g>\r\n          <path\r\n            d=\"M286.935,197.286L159.028,69.379c-3.613-3.617-7.895-5.424-12.847-5.424s-9.233,1.807-12.85,5.424L5.424,197.286\r\n                C1.807,200.9,0,205.184,0,210.132s1.807,9.233,5.424,12.847c3.621,3.617,7.902,5.428,12.85,5.428h255.813\r\n                c4.949,0,9.233-1.811,12.848-5.428c3.613-3.613,5.427-7.898,5.427-12.847S290.548,200.9,286.935,197.286z\"\r\n          />\r\n        </g>\r\n      </svg>\r\n\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"10\"\r\n        height=\"10\"\r\n        viewBox=\"0 0 292 292\"\r\n        fill=\"#fff\"\r\n      >\r\n        <g>\r\n          <path\r\n            d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\r\n            C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\r\n            s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"\r\n          />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const FramedIcon = () => {\r\n\treturn (\r\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0\" y=\"0\" viewBox=\"0 0 2048 2048\" fill=\"#9A9A9A\">\r\n\t\t<g>\r\n\t\t\t<g>\r\n\t\t\t\t<path d=\"M892.3,688v242h539v247.2h-539v411.9H609.1v-1150h889.1V688H892.3z\"/>\r\n\t\t\t</g>\r\n\t\t</g>\r\n\t\t<path d=\"M143.6,138.5v1760.9h1760.9V138.5H143.6z M1783.8,1778.7H264.2V259.2h1519.6V1778.7z\"/>\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\n\r\nexport const Menu = () => {\r\n  return (\r\n    <svg viewBox=\"0 0 80 80\" width=\"40\" height=\"30\" fill=\"#fff\">\r\n      <rect y=\"15\" width=\"80\" height=\"10\"></rect>\r\n      <rect y=\"35\" width=\"80\" height=\"10\"></rect>\r\n      <rect y=\"55\" width=\"80\" height=\"10\"></rect>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const Fullscreen = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\r\n      <polygon points=\"68.284,40 165,40 165,0 0,0 0,165 40,165 40,68.284 177,205.284 205.284,177\" />\r\n      <polygon points=\"205.284,335 177,306.716 40,443.716 40,347 0,347 0,512 165,512 165,472 68.284,472\" />\r\n      <polygon points=\"347,0 347,40 443.716,40 306.716,177 335,205.284 472,68.284 472,165 512,165 512,0\" />\r\n      <polygon points=\"472,347 472,443.716 335,306.716 306.716,335 443.716,472 347,472 347,512 512,512 512,347\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const Cancel = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n      <path\r\n        fill=\"#fff\"\r\n        d=\"M21 4.41L19.59 3 12 10.59 4.41 3 3 4.41 10.59 12 3 19.59 4.41 21 12 13.41 19.59 21 21 19.59 13.41 12 21 4.41z\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const ExitFullscreen = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\">\r\n      <polygon points=\"22.586,25.414 29.172,32 32,29.172 25.414,22.586 28,20 20,20 20,28\" />\r\n      <polygon points=\"6.547,9.371 4,12 11.961,11.957 12,4 9.375,6.543 2.828,0 0,2.828\" />\r\n      <polygon points=\"0,29.172 2.828,32 9.414,25.414 12,28 12,20 4,20 6.586,22.586\" />\r\n      <polygon points=\"28.031,12 25.438,9.404 32,2.838 29.164,0 22.598,6.566 20,3.971 20,12\" />\r\n    </svg>\r\n\r\n  )\r\n}\r\n\r\nexport const About = () => {\r\n  return (\r\n    <svg viewBox=\"0 0 24 24\">\r\n      <path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport { Cancel } from '../../assets/svgIcons';\r\n\r\nconst FramedModal = ({show, className, component, onClose }) => {\r\n  const visibleClass = show ? 'is-visible' : undefined;\r\n\r\n  const handleClose = React.useCallback(() => {\r\n    const isFullscreen = document.fullScreen ||\r\n    document.mozFullScreen ||\r\n    document.webkitIsFullScreen ||\r\n    document.msFullscreenElement;\r\n\r\n    if (isFullscreen) {\r\n      document.exitFullscreen();\r\n    } else {\r\n      if (onClose) {\r\n        onClose();\r\n      }\r\n    }\r\n  }, [onClose]);\r\n\r\n  return (\r\n    <div className={classNames('framed-modal', className, visibleClass)}>\r\n      <div className=\"framed-modal-overlay\" onClick={handleClose}>\r\n        <div className=\"framed-modal-content\" onClick={(event) => {event.stopPropagation();}}>\r\n          {component}\r\n        </div>\r\n      </div>\r\n      <button className=\"close\" onClick={handleClose}>\r\n        <Cancel />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FramedModal;","import { useEffect, useLayoutEffect, useState } from 'react';\r\n\r\nexport const useViewport = () => {\r\n  const actualWidth = document.documentElement.clientWidth || document.body.clientWidth;\r\n  const [width, setWidth] = useState(actualWidth);\r\n\r\n  const onWindowLoad = () => {\r\n    const actualWidth = document.documentElement.clientWidth || document.body.clientWidth;\r\n    setWidth(actualWidth);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let resizeTimeout;\r\n    window.setTimeout(onWindowLoad, 1000);\r\n    const handleWindowResize = () => {\r\n      const windowWidth = document.documentElement.clientWidth || document.body.clientWidth;\r\n      clearTimeout(resizeTimeout);\r\n      resizeTimeout = setTimeout(() => setWidth(windowWidth), 50);\r\n    };\r\n    window.addEventListener('resize', handleWindowResize);\r\n    return () => window.removeEventListener('resize', handleWindowResize);\r\n  }, []);\r\n\r\n  // Return the width so we can use it in our components\r\n  return { width };\r\n};\r\n\r\nexport const useOutsideAlerter = (ref, onClickOutside) => {\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        onClickOutside();\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [ref, onClickOutside]);\r\n};\r\n\r\nexport const breakpoints = {\r\n  mobile: 820,\r\n};\r\n\r\nexport const getBrowserFullscreenElementProp = () => {\r\n  if (typeof document.fullscreenElement !== 'undefined') {\r\n    return 'fullscreenElement';\r\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\r\n    return 'mozFullScreenElement';\r\n  } else if (typeof document.msFullscreenElement !== 'undefined') {\r\n    return 'msFullscreenElement';\r\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\r\n    return 'webkitFullscreenElement';\r\n  } else {\r\n    throw new Error('fullscreenElement is not supported by this browser');\r\n  }\r\n}\r\n\r\nexport const useFullscreenStatus = (elRef) => {\r\n  const [isFullscreen, setIsFullscreen] = useState(\r\n    document[getBrowserFullscreenElementProp()] != null,\r\n  );\r\n\r\n  const setFullscreen = () => {\r\n    if (elRef.current == null) return;\r\n\r\n    elRef.current\r\n      .requestFullscreen()\r\n      .then(() => {\r\n        setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n      })\r\n      .catch(() => {\r\n        setIsFullscreen(false);\r\n      });\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    document.onfullscreenchange = () =>\r\n      setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n\r\n    return () => (document.onfullscreenchange = undefined);\r\n  });\r\n\r\n  return [isFullscreen, setFullscreen];\r\n};\r\n","import { useViewport } from '../utils/utils';\r\n\r\nconst ImageGrid = ({\r\n  className,\r\n  images,\r\n  rowTargetHeight = 400,\r\n  borderOffset = 5,\r\n  onClick,\r\n}) => {\r\n  const { width } = useViewport();\r\n  const maxWidth = width - (borderOffset*2);\r\n\r\n  const processImages = () => {\r\n    const processedImages = [];\r\n\r\n    for (let i = 0; i < images.length; i++) {\r\n      let width = parseInt(images[i].width);\r\n      const height = parseInt(images[i].height);\r\n      width = width * (rowTargetHeight / height);\r\n\r\n      const image = {\r\n        id: images[i].id,\r\n        author: images[i].author,\r\n        authorsAvatarUrl: images[i].authorsAvatarUrl,\r\n        data: images[i].date,\r\n        gameName: images[i].gameName,\r\n        score: images[i].score,\r\n        fullWidth: images[i].width,\r\n        fullHeight: images[i].height,\r\n        shotUrl: images[i].shotUrl,\r\n        thumbnailUrl: images[i].thumbnailUrl,\r\n        width: width,\r\n        height: rowTargetHeight,\r\n      };\r\n\r\n      processedImages.push(image);\r\n    }\r\n\r\n    return processedImages;\r\n  };\r\n\r\n  const makeSmaller = (image, amount) => {\r\n    amount = amount || 1;\r\n\r\n    const newHeight = image.height - amount;\r\n    image.width = image.width * (newHeight / image.height);\r\n    image.height = newHeight;\r\n\r\n    return image;\r\n  };\r\n\r\n  const getCumulativeWidth = (images) => {\r\n    let width = 0;\r\n\r\n    for (let i = 0; i < images.length; i++) {\r\n      width += images[i].width;\r\n    }\r\n\r\n    width += (images.length - 1) * borderOffset;\r\n\r\n    return width;\r\n  };\r\n\r\n  const buildRows = () => {\r\n    let currentRow = 0;\r\n    let currentWidth = 0;\r\n    let imageCounter = 0;\r\n    const rows = [];\r\n    const processedImages = processImages();\r\n\r\n    while (processedImages[imageCounter]) {\r\n      if (currentWidth >= maxWidth) {\r\n        currentRow++;\r\n        currentWidth = 0;\r\n      }\r\n      if (!rows[currentRow]) {\r\n        rows[currentRow] = [];\r\n      }\r\n\r\n      rows[currentRow].push(processedImages[imageCounter]);\r\n      currentWidth += processedImages[imageCounter].width;\r\n\r\n      imageCounter++;\r\n    }\r\n\r\n    return rows;\r\n  };\r\n\r\n  const normalizeImage = (image) => {\r\n    image.width = parseInt(image.width);\r\n    image.height = parseInt(image.height);\r\n\r\n    return image;\r\n  };\r\n\r\n  const normalizeImages = (images) => {\r\n    for (let i = 0; i < images.length; i++) {\r\n      normalizeImage(images[i]);\r\n    }\r\n\r\n    return images;\r\n  };\r\n\r\n  const fitImagesInRow = (images) => {\r\n    while (getCumulativeWidth(images) > maxWidth) {\r\n      for (let i = 0; i < images.length; i++) {\r\n        images[i] = makeSmaller(images[i]);\r\n      }\r\n    }\r\n\r\n    return images;\r\n  };\r\n\r\n  const renderGrid = (rows) => {\r\n    return (\r\n      <div \r\n        className={className} \r\n        style={{\r\n            paddingLeft: borderOffset,\r\n            paddingTop: 50+borderOffset\r\n        }}\r\n      >\r\n        {rows.map((row, index) => {\r\n          return (\r\n            <div key={index} className=\"image-row\">\r\n              {row.map((image, imageIndex) => {\r\n                return (\r\n                  <div\r\n                    className=\"thumbnail-container\"\r\n                    style={{\r\n                      marginRight: borderOffset,\r\n                      marginBottom: borderOffset,\r\n                    }}\r\n                    key={`thumbnail-container-${image.id}`}\r\n                  >\r\n                    <img\r\n                      alt={image.gameName}\r\n                      key={imageIndex}\r\n                      src={image.thumbnailUrl}\r\n                      style={{\r\n                        width: Math.ceil(image.width),\r\n                        height: image.height,\r\n                        cursor: 'pointer',\r\n                      }}\r\n                      onClick={() => onClick(image, imageIndex)}\r\n                    />\r\n                    <div className=\"image-info\">\r\n                      <span className=\"by\">by</span> <span className=\"author\">{image.author}</span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const buildGrid = () => {\r\n    const rows = buildRows();\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      rows[i] = fitImagesInRow(rows[i]);\r\n\r\n      rows[i] = normalizeImages(rows[i]);\r\n\r\n      const difference = maxWidth - getCumulativeWidth(rows[i]);\r\n      const amountOfImages = rows[i].length;\r\n\r\n      if (amountOfImages > 1 && difference < 10) {\r\n        const addToEach = difference / amountOfImages;\r\n        for (let n = 0; n < rows[i].length; n++) {\r\n          rows[i][n].width += addToEach;\r\n        }\r\n\r\n        rows[i] = normalizeImages(rows[i]);\r\n\r\n        rows[i][rows[i].length - 1].width += maxWidth - getCumulativeWidth(rows[i]);\r\n      }\r\n    }\r\n\r\n    return renderGrid(rows);\r\n  };\r\n\r\n  return buildGrid();\r\n};\r\n\r\nexport default ImageGrid;\r\n","export default __webpack_public_path__ + \"static/media/framed_intro_pino.3888f15f.jpg\";","import { createContext } from 'react';\r\n\r\nexport const ModalContext = createContext({showL: false, component: null, className:''})","import classNames from 'classnames';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport framedBanner from '../assets/framed_intro_pino.jpg';\r\nimport { About, FramedIcon, Menu, SortDown, SortUp } from '../assets/svgIcons';\r\nimport { ModalContext } from '../utils/ModalContext';\r\nimport { breakpoints, useOutsideAlerter, useViewport } from '../utils/utils';\r\n\r\nconst ImageNav = ({ className, options, reverseSort, updateSort, updateType, updateSearch }) => {\r\n  const [active, setActive] = useState(options[0]);\r\n  const [type, setType] = useState('All');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const { setModal } = useContext(ModalContext);\r\n\r\n  const handleOptionChange = (selection) => {\r\n    setActive(selection);\r\n    updateSort(selection);\r\n  };\r\n\r\n  const handleTypeChange = (value) => {\r\n    setType(value);\r\n    updateType(value);\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    updateSearch(event.target.value.toLowerCase());\r\n  };\r\n\r\n  const showAbout = () => {\r\n    const modalComponent = (\r\n      <div className=\"about-modal-content\">\r\n        <img alt=\"Welcome to Framed\" src={framedBanner}></img>\r\n        <h2>About the Hall of Framed</h2>\r\n        <p>\r\n          The Framed Screenshot Community Discord server is full of so many amazing screenshots\r\n          that we quickly ran out of pins with which to showcase them. So we created a Discord bot\r\n          that would automatically post the most popular screenshots (the ones that exceed a\r\n          certain number of reactions) to a special channel. A list of those images is updated\r\n          instantly when a new one gets posted, and that list gets uploaded so that we can display\r\n          them on this here web site.\r\n        </p>\r\n        <p>\r\n          We hope that this can serve as a showcase for what talented screenshotters can achieve.\r\n          Maybe you'll find it useful as inspiration, or as a nice source of background images for\r\n          your PC or phone.\r\n        </p>\r\n        <p>\r\n          The Image Viewer can be controlled with the keyboard. Arrow keys will switch to the\r\n          previous or next image. F will open an image in fullscreen. Escape will close fullscreen\r\n          or close the image viewer. You can also swipe on mobile to change images.\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    setModal({ show: true, component: modalComponent, className: 'about-window' });\r\n  };\r\n\r\n  const types = ['All', 'Wide', 'Portrait'];\r\n  const icon = reverseSort ? <SortUp /> : <SortDown />;\r\n\r\n  const renderSearch = (\r\n    <div className=\"search\">\r\n      <input\r\n        type=\"search\"\r\n        name=\"search\"\r\n        className=\"search-input\"\r\n        value={searchTerm}\r\n        onChange={handleSearchChange}\r\n        placeholder=\"Search\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const renderSort = (\r\n    <ul className=\"filters\">\r\n      {options.map((item, index) => {\r\n        const isActive = active.key === item.key;\r\n        const buttonClass = isActive ? 'is-active' : undefined;\r\n\r\n        return (\r\n          <li key={index}>\r\n            <button\r\n              id={item.label}\r\n              className={classNames('filter', buttonClass)}\r\n              onClick={() => handleOptionChange(item)}\r\n              key={item.label}\r\n            >\r\n              {item.label}\r\n              {isActive && icon}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n\r\n  const renderFilters = (\r\n    <div className=\"image-types\">\r\n      {types.map((item) => {\r\n        return (\r\n          <>\r\n            <input\r\n              id={`${item}-label`}\r\n              onChange={() => handleTypeChange(item)}\r\n              checked={type === item}\r\n              type=\"radio\"\r\n              value={item}\r\n              name=\"type\"\r\n              key={`${item}-input`}\r\n            />\r\n            <label key={`${item}-label`} htmlFor={`${item}-label`}>\r\n              {item}\r\n            </label>\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n\r\n  const renderModalButton = () => {\r\n    return isMobile ? undefined : (\r\n      <button className=\"about-icon\" onClick={showAbout}>\r\n        <About />\r\n      </button>\r\n    );\r\n  }\r\n\r\n  const renderDesktop = () => {\r\n    return (\r\n      <>\r\n        {renderSort}\r\n        {renderFilters}\r\n        {renderSearch}\r\n        {renderModalButton()}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderMobile = () => {\r\n    return (\r\n      <div className=\"mobile-menu\" ref={mobileMenuRef}>\r\n        <button className=\"menu-button\" onClick={() => setShowMenu((current) => !current)}>\r\n          <Menu />\r\n        </button>\r\n        {showMenu && (\r\n          <div className=\"mobile-menu-content\">\r\n            {renderModalButton()}\r\n            {renderSearch}\r\n            {renderSort}\r\n            {renderFilters}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleClickOutside = () => {\r\n    setShowMenu(false);\r\n  };\r\n\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const { width } = useViewport();\r\n  const isMobile = width <= breakpoints.mobile;\r\n  const viewportClass = isMobile ? 'image-nav--mobile' : 'image-nav--desktop';\r\n\r\n  const mobileMenuRef = useRef(null);\r\n  useOutsideAlerter(mobileMenuRef, handleClickOutside);\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      setShowMenu(false);\r\n    }\r\n  }, [isMobile]);\r\n\r\n  return (\r\n    <div className={`image-nav ${viewportClass} ${className}`}>\r\n      <div className=\"framed-icon\">\r\n        <FramedIcon />\r\n      </div>\r\n      {!isMobile && renderDesktop()}\r\n      {isMobile && renderMobile()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageNav;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nclass Spinner extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    modifier: PropTypes.string,\r\n    show: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    show: false,\r\n    modifier: ''\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.renderSpinner = this.renderSpinner.bind(this);\r\n    this.baseClass = 'framed-spinner';\r\n  }\r\n\r\n  get svgSpinner() {\r\n    return (\r\n      <div className={`${this.baseClass}-svg-wrapper`}>\r\n        <svg className={`${this.baseClass}-svg-back`} viewBox=\"0 0 200 200\">\r\n          <circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" />\r\n        </svg>\r\n        <svg className={`${this.baseClass}-svg-segment`} viewBox=\"0 0 200 200\">\r\n          <circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" />\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  get spinnerContainer() {\r\n    const { modifier } = this.props;\r\n    const modifierClass = modifier ? 'global' : false;\r\n\r\n    return <div className={`${this.baseClass}-container ${modifierClass}`}>{this.spinner}</div>;\r\n  }\r\n\r\n  get spinner() {\r\n    const { className, modifier } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={classNames(\r\n          this.baseClass,\r\n          `${this.baseClass}--${modifier}`,\r\n          className\r\n        )}\r\n      >\r\n        {this.svgSpinner}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSpinner() {\r\n    return this.spinnerContainer;\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n\r\n    return show ? this.renderSpinner() : null;\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import classNames from 'classnames';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { useSwipeable } from 'react-swipeable';\r\nimport { Cancel, ExitFullscreen, Fullscreen } from '../assets/svgIcons';\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport { useFullscreenStatus } from '../utils/utils';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'initialize':\r\n      return { ...state, initialized: true };\r\n    case 'close':\r\n      return { initialized: false, loadedState: false, showImage: false };\r\n    case 'loadImage':\r\n      return { initialized: true, loadedState: true, showImage: true };\r\n    case 'changeImage':\r\n      return { ...state, loadedState: false };\r\n    case 'showGlobalSpinner':\r\n        return { ...state, initialized: false, showImage: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst ImageViewer = ({ image = {}, show, onClose, data, onPrev, onNext, setBgImage }) => {\r\n  const [{ initialized, loadedState, showImage }, dispatch] = useReducer(reducer, {\r\n    initialized: false,\r\n    loadedState: false,\r\n    showImage: false,\r\n  });\r\n\r\n  let isFullscreen, setIsFullscreen;\r\n  const imageViewerContent = React.useRef(null);\r\n  let fullScreenError;\r\n  try {\r\n    [isFullscreen, setIsFullscreen] = useFullscreenStatus(imageViewerContent);\r\n  } catch (e) {\r\n    fullScreenError = 'Fullscreen not supported';\r\n    isFullscreen = false;\r\n    setIsFullscreen = undefined;\r\n  }\r\n\r\n  const visibleClass = show ? 'is-visible' : undefined;\r\n  const prevDisabled = data.findIndex((e) => e.id === image.id) === 0 || !loadedState;\r\n  const nextDisabled = data.findIndex((e) => e.id === image.id) === data.length - 1 || !loadedState;\r\n\r\n  const handleExitFullscreen = () => document.exitFullscreen();\r\n\r\n  const handlePrev = React.useCallback((event) => {\r\n      event?.stopPropagation();\r\n      dispatch({ type: 'changeImage' });\r\n      onPrev();\r\n    },\r\n    [onPrev],\r\n  );\r\n\r\n  const handleNext = React.useCallback((event) => {\r\n      event?.stopPropagation();\r\n      dispatch({ type: 'changeImage' });\r\n      onNext();\r\n    },\r\n    [onNext],\r\n  );\r\n\r\n  const handleClose = React.useCallback(() => {\r\n    if (isFullscreen) {\r\n      document.exitFullscreen();\r\n    } else {\r\n      dispatch({ type: 'close' });\r\n      onClose();\r\n    }\r\n  }, [isFullscreen, onClose]);\r\n\r\n  const handleLoad = () => {\r\n    dispatch({ type: 'loadImage' });\r\n    setBgImage(image);\r\n  };\r\n\r\n  const handleKeyboard = React.useCallback(\r\n    (event) => {\r\n      const { key } = event;\r\n\r\n      if (!show) {\r\n        return false;\r\n      }\r\n\r\n      switch (key) {\r\n        case 'ArrowRight':\r\n          if (nextDisabled) {\r\n            return false;\r\n          }\r\n          return handleNext(event);\r\n        case 'ArrowLeft':\r\n          if (prevDisabled) {\r\n            return false;\r\n          }\r\n          return handlePrev(event);\r\n        case 'Escape':\r\n          if (isFullscreen) {\r\n            return false;\r\n          }\r\n          return handleClose();\r\n        case 'f':\r\n          if (fullScreenError) {\r\n            return false;\r\n          }\r\n          return setIsFullscreen();\r\n        default:\r\n          return false;\r\n      }\r\n    },\r\n    [\r\n      isFullscreen,\r\n      handleClose,\r\n      handleNext,\r\n      handlePrev,\r\n      nextDisabled,\r\n      prevDisabled,\r\n      setIsFullscreen,\r\n      fullScreenError,\r\n      show,\r\n    ],\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keyup', handleKeyboard);\r\n\r\n    // remove listener when component unmounts\r\n    return () => {\r\n      window.removeEventListener('keyup', handleKeyboard);\r\n    };\r\n  }, [initialized, handleKeyboard]);\r\n\r\n  const swipeConfig = {\r\n    delta: 10,\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackTouch: true,\r\n    trackMouse: true,\r\n    rotationAngle: 0,\r\n  };\r\n\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => {\r\n      if (nextDisabled) {\r\n        return false;\r\n      }\r\n      imageViewerContent.current.style.left = '0px';\r\n      dispatch({ type: 'showGlobalSpinner' });\r\n      return handleNext();\r\n    },\r\n    onSwipedRight: () => {\r\n      if (prevDisabled) {\r\n        return false;\r\n      }\r\n      imageViewerContent.current.style.left = '0px';\r\n      dispatch({ type: 'showGlobalSpinner' });\r\n      return handlePrev();\r\n    },\r\n    onSwiping: (event) => {\r\n      if ((event.dir === 'Right' && !prevDisabled) || (event.dir === 'Left' && !nextDisabled)) {\r\n        imageViewerContent.current.style.left = `${event.deltaX}px`;\r\n      } else {\r\n        imageViewerContent.current.style.left = '0px';\r\n      }\r\n    },\r\n    onSwiped: () => {\r\n      imageViewerContent.current.style.left = '0px';\r\n    },\r\n    ...swipeConfig,\r\n  });\r\n\r\n  const modifier = !initialized ? 'global' : '';\r\n  const fullscreenClass = isFullscreen ? 'fullscreen' : false;\r\n  const loadedClass = showImage ? 'loaded' : 'hidden';\r\n\r\n  return (\r\n    <div className={classNames('image-viewer', 'framed-modal', visibleClass)} onClick={handleClose}>\r\n      <div className=\"image-nav\">\r\n        <button className=\"image-nav-button left\" disabled={prevDisabled} onClick={handlePrev}>\r\n          [ Prev ]\r\n        </button>\r\n        <button className=\"image-nav-button right\" disabled={nextDisabled} onClick={handleNext}>\r\n          [ Next ]\r\n        </button>\r\n      </div>\r\n\r\n      <div ref={imageViewerContent} className={classNames('image-viewer-content', fullscreenClass)}>\r\n        {image && (\r\n          <>\r\n            <img\r\n              alt={image.gameName}\r\n              src={image.shotUrl}\r\n              onClick={(event) => {\r\n                event.stopPropagation();\r\n              }}\r\n              onLoad={handleLoad}\r\n              className={loadedClass}\r\n              {...handlers}\r\n            />\r\n            {initialized && !isFullscreen && (\r\n              <div\r\n                className=\"shot-info\"\r\n                onClick={(event) => {\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                {/* <img src={image.authorsAvatarUrl} alt=\"avatar\" /> */}\r\n                <div className=\"info\">\r\n                  <span className=\"by\">by</span> <span className=\"author\">{image.author}</span>\r\n                  <span className=\"title\">{image.gameName}</span>\r\n                </div>\r\n                {!isFullscreen && !fullScreenError && (\r\n                  <button className=\"fullscreen-button\" onClick={setIsFullscreen}>\r\n                    <Fullscreen />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            )}\r\n            {isFullscreen ? (\r\n              <button className=\"close\" onClick={handleExitFullscreen}>\r\n                <ExitFullscreen />\r\n              </button>\r\n            ) : (\r\n              <button className=\"close\" onClick={handleClose}>\r\n                <Cancel />\r\n              </button>\r\n            )}\r\n          </>\r\n        )}\r\n        <Spinner modifier={modifier} show={!loadedState} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageViewer;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport FramedModal from '../components/FramedModal/FramedModal';\r\nimport ImageGrid from '../components/ImageGrid';\r\nimport ImageNav from '../components/ImageNav';\r\nimport ImageViewer from '../components/ImageViewer';\r\nimport { ModalContext } from '../utils/ModalContext';\r\n\r\nconst ImageGridContainer = ({ data, setBgImage }) => {\r\n  const sortOptions = [\r\n    {\r\n      label: 'Date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      label: 'Popularity',\r\n      key: 'score',\r\n    },\r\n  ];\r\n\r\n  const [imageData, setImageData] = useState([]);\r\n  const [sortOption, setSortOption] = useState(sortOptions[0]);\r\n  const [type, setType] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [showViewer, setShowViewer] = useState(false);\r\n  const [viewerSrc, setViewerSrc] = useState({});\r\n  const [isReverse, setIsReverse] = useState(false);\r\n  const [modal, setModal] = useState({ show: false, component: null, className: '' });\r\n\r\n  const handleSortChange = (option) => {\r\n    if (option.key === sortOption.key) {\r\n      setIsReverse((current) => !current);\r\n    } else {\r\n      setIsReverse(false);\r\n      setSortOption(option);\r\n    }\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleTypeChange = (type) => {\r\n    setType(type);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleSearchChange = (keyword) => {\r\n    setSearchTerm(keyword);\r\n  };\r\n\r\n  const handleImageClick = (image) => {\r\n    setViewerSrc(image);\r\n    setShowViewer(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setViewerSrc({});\r\n    setShowViewer(false);\r\n    setModal({ ...modal, component: null, show: false });\r\n  };\r\n\r\n  const searchData = useCallback(\r\n    (data) => {\r\n      if (searchTerm?.length < 3) {\r\n        return data;\r\n      }\r\n\r\n      const results = data.filter((obj) => {\r\n        return Object.keys(obj).reduce((acc, curr) => {\r\n          return acc || obj[curr].toString().toLowerCase().includes(searchTerm.toLowerCase());\r\n        }, false);\r\n      });\r\n\r\n      return results;\r\n    },\r\n    [searchTerm],\r\n  );\r\n\r\n  const filterImages = useCallback(\r\n    (images) => {\r\n      let results = images;\r\n      const key = sortOption.key;\r\n\r\n      let sortMethod = (a, b) => (a[key] < b[key] ? 1 : b[key] < a[key] ? -1 : 0);\r\n      if (isReverse) {\r\n        sortMethod = (a, b) => (a[key] > b[key] ? 1 : b[key] > a[key] ? -1 : 0);\r\n      }\r\n      results = images.sort(sortMethod);\r\n\r\n      if (type === 'Wide') {\r\n        results = results.filter((item) => item.width >= item.height);\r\n      } else if (type === 'Portrait') {\r\n        results = results.filter((item) => item.width <= item.height);\r\n      }\r\n\r\n      return searchData(results);\r\n    },\r\n    [isReverse, searchData, sortOption, type],\r\n  );\r\n\r\n  const selectPreviousImage = () => {\r\n    const index = imageData.findIndex((e) => e.id === viewerSrc.id);\r\n    if (index - 1 >= 0) {\r\n      setViewerSrc(imageData[index - 1]);\r\n    }\r\n  };\r\n\r\n  const selectNextImage = () => {\r\n    const index = imageData.findIndex((e) => e.id === viewerSrc.id);\r\n    if (index + 1 <= imageData.length) {\r\n      setViewerSrc(imageData[index + 1]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.length) {\r\n      const images = filterImages(data.slice());\r\n\r\n      setImageData(images);\r\n    }\r\n  }, [data, sortOption, type, searchTerm, isReverse, filterImages]);\r\n\r\n  const container = document.querySelector('.image-grid');\r\n\r\n  return (\r\n    <div style={{ margin: '0 auto' }} className=\"home\">\r\n      <ModalContext.Provider value={{ modal, setModal }}>\r\n        <ImageNav\r\n          className={showViewer || modal.show ? 'hidden' : ''}\r\n          options={sortOptions}\r\n          reverseSort={isReverse}\r\n          updateSort={handleSortChange}\r\n          updateType={handleTypeChange}\r\n          updateSearch={handleSearchChange}\r\n        />\r\n        {imageData && container && (\r\n          <ImageGrid\r\n            className=\"image-rows\"\r\n            images={imageData}\r\n            rowTargetHeight={400}\r\n            container={container}\r\n            onClick={handleImageClick}\r\n            borderOffset={7}\r\n          />\r\n        )}\r\n        <ImageViewer\r\n          image={viewerSrc}\r\n          show={showViewer}\r\n          onClose={handleClose}\r\n          data={imageData}\r\n          onPrev={selectPreviousImage}\r\n          onNext={selectNextImage}\r\n          setBgImage={setBgImage}\r\n        />\r\n        <FramedModal\r\n          onClose={handleClose}\r\n          className={modal.className}\r\n          show={modal.show}\r\n          component={modal.component}\r\n        />\r\n      </ModalContext.Provider>\r\n    </div>\r\n  );\r\n};\r\nexport default ImageGridContainer;\r\n","const APIURL = 'https://raw.githubusercontent.com/originalnicodrgitbot/hall-of-framed-db/main/shotsdb.json';\r\nconst axios = require('axios');\r\nexport const getImages = () => axios.get(`${APIURL}`);","import React, { useCallback, useEffect, useState } from 'react';\r\nimport ImageGridContainer from '../src/pages/ImageGridContainer';\r\nimport { getImages } from './api/request';\r\nimport './components/Spinner/Spinner.css';\r\nimport './styles/App.css';\r\nimport './styles/reset.css';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [initialized, setInitialized] = useState(false);\r\n  const [bgImageContainer, setBgImageContainer] = useState(null);\r\n\r\n  const setBackground = useCallback(\r\n    (imageObject) => {\r\n      const bgImage = imageObject.thumbnailUrl;\r\n      bgImageContainer.style.backgroundImage = `url('${bgImage}')`;\r\n    },\r\n    [bgImageContainer],\r\n  );\r\n\r\n  const getNewImages = async () => {\r\n    setInitialized(true);\r\n    const response = await getImages({});\r\n    const entries = Object.entries(response.data._default);\r\n    const shots = [];\r\n\r\n    entries.forEach((item) => {\r\n      const id = item[0];\r\n      const shotData = item[1];\r\n      shots.push({ id, ...shotData });\r\n    });\r\n\r\n    setData(shots);\r\n  };\r\n\r\n  useEffect(() => {\r\n    !initialized && getNewImages();\r\n    data.length && !bgImageContainer && setBgImageContainer(document.querySelector('.bg-blur'));\r\n    if (data.length && bgImageContainer) {\r\n      const randomImageIndex = Math.floor(Math.random() * Math.floor(data.length-1));\r\n      setBackground(data[randomImageIndex]);\r\n    }\r\n  }, [bgImageContainer, data, initialized, setBackground]);\r\n\r\n  return (\r\n    <div className=\"image-grid\">\r\n      {data && <ImageGridContainer data={data} setBgImage={setBackground} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}