{"version":3,"sources":["utils/utils.js","components/ImageGrid.jsx","assets/svgIcons.jsx","components/ImageNav.jsx","components/Spinner/Spinner.jsx","components/ImageViewer.jsx","pages/ImageGridContainer.jsx","api/request.js","App.js","reportWebVitals.js","index.js"],"names":["useViewport","actualWidth","document","documentElement","clientWidth","body","useState","width","setWidth","onWindowLoad","useEffect","window","setTimeout","handleWindowResize","windowWidth","addEventListener","removeEventListener","useOutsideAlerter","ref","onClickOutside","handleClickOutside","event","current","contains","target","breakpoints","getBrowserFullscreenElementProp","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","Error","ImageGrid","className","images","rowTargetHeight","borderOffset","onClick","outerPadding","maxWidth","makeSmaller","image","amount","newHeight","height","getCumulativeWidth","i","length","buildRows","currentRow","currentWidth","imageCounter","rows","processedImages","parseInt","id","author","authorsAvatarUrl","data","date","gameName","score","fullWidth","fullHeight","shotUrl","thumbnailUrl","push","processImages","normalizeImages","fitImagesInRow","difference","amountOfImages","addToEach","n","map","row","index","imageIndex","style","marginRight","marginBottom","alt","src","Math","ceil","cursor","renderGrid","buildGrid","SortUp","xmlns","viewBox","fill","d","SortDown","FramedIcon","x","y","Menu","Fullscreen","points","Cancel","ExitFullscreen","About","ImageNav","options","reverseSort","updateSort","updateType","updateSearch","active","setActive","type","setType","searchTerm","setSearchTerm","icon","renderSearch","name","value","onChange","toLowerCase","placeholder","renderSort","item","isActive","key","buttonClass","undefined","label","classNames","selection","renderFilters","checked","htmlFor","showMenu","setShowMenu","showAbout","setShowAbout","isMobile","viewportClass","mobileMenuRef","useRef","aboutModalRef","Spinner","props","renderSpinner","bind","baseClass","this","spinnerContainer","show","cx","cy","r","modifierClass","modifier","spinner","svgSpinner","PureComponent","defaultProps","reducer","state","action","initialized","loadedState","showImage","ImageViewer","isFullscreen","setIsFullscreen","fullScreenError","onClose","onPrev","onNext","setBgImage","useReducer","dispatch","maximizableElement","React","elRef","useLayoutEffect","onfullscreenchange","requestFullscreen","then","catch","useFullscreenStatus","e","visibleClass","prevDisabled","findIndex","nextDisabled","handlePrev","useCallback","stopPropagation","handleNext","handleClose","exitFullscreen","handleKeyboard","fullscreenClass","loadedClass","handlers","useSwipeable","onSwipedRight","onSwipedLeft","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","disabled","onLoad","ImageGridContainer","sortOptions","imageData","setImageData","sortOption","setSortOption","showViewer","setShowViewer","viewerSrc","setViewerSrc","isReverse","setIsReverse","filterImages","results","sortMethod","a","b","sort","filter","obj","Object","keys","reduce","acc","curr","toString","includes","searchData","slice","container","querySelector","margin","option","scrollTo","top","behavior","keyword","axios","require","App","setData","setInitialized","bgImageContainer","setBgImageContainer","setBackground","imageObject","bgImage","backgroundImage","getNewImages","get","response","entries","_default","shots","forEach","shotData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5a475402.chunk.js","sourcesContent":["import { useEffect, useLayoutEffect, useState } from 'react';\n\nexport const useViewport = () => {\n  const actualWidth = document.documentElement.clientWidth || document.body.clientWidth;\n  const [width, setWidth] = useState(actualWidth);\n\n  const onWindowLoad = () => {\n    const actualWidth = document.documentElement.clientWidth || document.body.clientWidth;\n    setWidth(actualWidth);\n  }\n\n  useEffect(() => {\n    window.setTimeout(onWindowLoad, 1000);\n    const handleWindowResize = () => {\n      const windowWidth = document.documentElement.clientWidth || document.body.clientWidth;\n      setWidth(windowWidth);\n    };\n    window.addEventListener('resize', handleWindowResize);\n    return () => window.removeEventListener('resize', handleWindowResize);\n  }, []);\n\n  // Return the width so we can use it in our components\n  return { width };\n};\n\nexport const useOutsideAlerter = (ref, onClickOutside) => {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onClickOutside();\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref, onClickOutside]);\n};\n\nexport const breakpoints = {\n  mobile: 820,\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.msFullscreenElement !== 'undefined') {\n    return 'msFullscreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  } else {\n    throw new Error('fullscreenElement is not supported by this browser');\n  }\n}\n\nexport const useFullscreenStatus = (elRef) => {\n  const [isFullscreen, setIsFullscreen] = useState(\n    document[getBrowserFullscreenElementProp()] != null,\n  );\n\n  const setFullscreen = () => {\n    if (elRef.current == null) return;\n\n    elRef.current\n      .requestFullscreen()\n      .then(() => {\n        setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\n      })\n      .catch(() => {\n        setIsFullscreen(false);\n      });\n  };\n\n  useLayoutEffect(() => {\n    document.onfullscreenchange = () =>\n      setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\n\n    return () => (document.onfullscreenchange = undefined);\n  });\n\n  return [isFullscreen, setFullscreen];\n};\n","import { useViewport } from '../utils/utils';\n\nconst ImageGrid = ({\n  className,\n  images,\n  rowTargetHeight = 400,\n  borderOffset = 5,\n  onClick,\n  outerPadding = 10,\n}) => {\n  const { width } = useViewport();\n  const maxWidth = width - outerPadding;\n\n  const processImages = () => {\n    const processedImages = [];\n\n    for (let i = 0; i < images.length; i++) {\n      let width = parseInt(images[i].width);\n      const height = parseInt(images[i].height);\n      width = width * (rowTargetHeight / height);\n\n      const image = {\n        id: images[i].id,\n        author: images[i].author,\n        authorsAvatarUrl: images[i].authorsAvatarUrl,\n        data: images[i].date,\n        gameName: images[i].gameName,\n        score: images[i].score,\n        fullWidth: images[i].width,\n        fullHeight: images[i].height,\n        shotUrl: images[i].shotUrl,\n        thumbnailUrl: images[i].thumbnailUrl,\n        width: width,\n        height: rowTargetHeight,\n      };\n\n      processedImages.push(image);\n    }\n\n    return processedImages;\n  };\n\n  const makeSmaller = (image, amount) => {\n    amount = amount || 1;\n\n    const newHeight = image.height - amount;\n    image.width = image.width * (newHeight / image.height);\n    image.height = newHeight;\n\n    return image;\n  };\n\n  const getCumulativeWidth = (images) => {\n    let width = 0;\n\n    for (let i = 0; i < images.length; i++) {\n      width += images[i].width;\n    }\n\n    width += (images.length - 1) * borderOffset;\n\n    return width;\n  };\n\n  const buildRows = () => {\n    let currentRow = 0;\n    let currentWidth = 0;\n    let imageCounter = 0;\n    const rows = [];\n    const processedImages = processImages();\n\n    while (processedImages[imageCounter]) {\n      if (currentWidth >= maxWidth) {\n        currentRow++;\n        currentWidth = 0;\n      }\n      if (!rows[currentRow]) {\n        rows[currentRow] = [];\n      }\n\n      rows[currentRow].push(processedImages[imageCounter]);\n      currentWidth += processedImages[imageCounter].width;\n\n      imageCounter++;\n    }\n\n    return rows;\n  };\n\n  const normalizeImage = (image) => {\n    image.width = parseInt(image.width);\n    image.height = parseInt(image.height);\n\n    return image;\n  };\n\n  const normalizeImages = (images) => {\n    for (let i = 0; i < images.length; i++) {\n      normalizeImage(images[i]);\n    }\n\n    return images;\n  };\n\n  const fitImagesInRow = (images) => {\n    while (getCumulativeWidth(images) > maxWidth) {\n      for (let i = 0; i < images.length; i++) {\n        images[i] = makeSmaller(images[i]);\n      }\n    }\n\n    return images;\n  };\n\n  const renderGrid = (rows) => {\n    return (\n      <div className={className}>\n        {rows.map((row, index) => {\n          return (\n            <div key={index} className=\"image-row\">\n              {row.map((image, imageIndex) => {\n                return (\n                  <div\n                    className=\"thumbnail-container\"\n                    style={{\n                      marginRight: borderOffset,\n                      marginBottom: borderOffset,\n                    }}\n                    key={`thumbnail-container-${image.id}`}\n                  >\n                    <img\n                      alt={image.gameName}\n                      key={imageIndex}\n                      src={image.thumbnailUrl}\n                      style={{\n                        width: Math.ceil(image.width),\n                        height: image.height,\n                        cursor: 'pointer',\n                      }}\n                      onClick={() => onClick(image, imageIndex)}\n                    />\n                    <div className=\"image-info\">\n                      <span className=\"by\">by</span> <span className=\"author\">{image.author}</span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const buildGrid = () => {\n    const rows = buildRows();\n\n    for (let i = 0; i < rows.length; i++) {\n      rows[i] = fitImagesInRow(rows[i]);\n\n      rows[i] = normalizeImages(rows[i]);\n\n      const difference = maxWidth - getCumulativeWidth(rows[i]);\n      const amountOfImages = rows[i].length;\n\n      if (amountOfImages > 1 && difference < 10) {\n        const addToEach = difference / amountOfImages;\n        for (let n = 0; n < rows[i].length; n++) {\n          rows[i][n].width += addToEach;\n        }\n\n        rows[i] = normalizeImages(rows[i]);\n\n        rows[i][rows[i].length - 1].width += maxWidth - getCumulativeWidth(rows[i]);\n      }\n    }\n\n    return renderGrid(rows);\n  };\n\n  return buildGrid();\n};\n\nexport default ImageGrid;\n","export const SortUp = () => {\n  return (\n    <div className=\"sort-icon\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"10\"\n        height=\"10\"\n        viewBox=\"0 0 292 292\"\n        fill=\"#fff\"\n      >\n        <g>\n          <path\n            d=\"M286.935,197.286L159.028,69.379c-3.613-3.617-7.895-5.424-12.847-5.424s-9.233,1.807-12.85,5.424L5.424,197.286\n                C1.807,200.9,0,205.184,0,210.132s1.807,9.233,5.424,12.847c3.621,3.617,7.902,5.428,12.85,5.428h255.813\n                c4.949,0,9.233-1.811,12.848-5.428c3.613-3.613,5.427-7.898,5.427-12.847S290.548,200.9,286.935,197.286z\"\n          />\n        </g>\n      </svg>\n\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"10\"\n        height=\"10\"\n        viewBox=\"0 0 292 292\"\n        fill=\"#aaa\"\n      >\n        <g>\n          <path\n            d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\n            C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\n            s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport const SortDown = () => {\n  return (\n    <div className=\"sort-icon\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"10\"\n        height=\"10\"\n        viewBox=\"0 0 292 292\"\n        fill=\"#aaa\"\n      >\n        <g>\n          <path\n            d=\"M286.935,197.286L159.028,69.379c-3.613-3.617-7.895-5.424-12.847-5.424s-9.233,1.807-12.85,5.424L5.424,197.286\n                C1.807,200.9,0,205.184,0,210.132s1.807,9.233,5.424,12.847c3.621,3.617,7.902,5.428,12.85,5.428h255.813\n                c4.949,0,9.233-1.811,12.848-5.428c3.613-3.613,5.427-7.898,5.427-12.847S290.548,200.9,286.935,197.286z\"\n          />\n        </g>\n      </svg>\n\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"10\"\n        height=\"10\"\n        viewBox=\"0 0 292 292\"\n        fill=\"#fff\"\n      >\n        <g>\n          <path\n            d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\n            C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\n            s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport const FramedIcon = () => {\n\treturn (\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0\" y=\"0\" viewBox=\"0 0 2048 2048\" fill=\"#9A9A9A\">\n\t\t<g>\n\t\t\t<g>\n\t\t\t\t<path d=\"M892.3,688v242h539v247.2h-539v411.9H609.1v-1150h889.1V688H892.3z\"/>\n\t\t\t</g>\n\t\t</g>\n\t\t<path d=\"M143.6,138.5v1760.9h1760.9V138.5H143.6z M1783.8,1778.7H264.2V259.2h1519.6V1778.7z\"/>\n\t\t</svg>\n\t);\n}\n\n\nexport const Menu = () => {\n  return (\n    <svg viewBox=\"0 0 80 80\" width=\"40\" height=\"30\" fill=\"#fff\">\n      <rect y=\"15\" width=\"80\" height=\"10\"></rect>\n      <rect y=\"35\" width=\"80\" height=\"10\"></rect>\n      <rect y=\"55\" width=\"80\" height=\"10\"></rect>\n    </svg>\n  );\n};\n\nexport const Fullscreen = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n      <polygon points=\"68.284,40 165,40 165,0 0,0 0,165 40,165 40,68.284 177,205.284 205.284,177\" />\n      <polygon points=\"205.284,335 177,306.716 40,443.716 40,347 0,347 0,512 165,512 165,472 68.284,472\" />\n      <polygon points=\"347,0 347,40 443.716,40 306.716,177 335,205.284 472,68.284 472,165 512,165 512,0\" />\n      <polygon points=\"472,347 472,443.716 335,306.716 306.716,335 443.716,472 347,472 347,512 512,512 512,347\" />\n    </svg>\n  );\n};\n\nexport const Cancel = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n      <path\n        fill=\"#fff\"\n        d=\"M21 4.41L19.59 3 12 10.59 4.41 3 3 4.41 10.59 12 3 19.59 4.41 21 12 13.41 19.59 21 21 19.59 13.41 12 21 4.41z\"\n      />\n    </svg>\n  );\n};\n\nexport const ExitFullscreen = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\">\n      <polygon points=\"22.586,25.414 29.172,32 32,29.172 25.414,22.586 28,20 20,20 20,28\" />\n      <polygon points=\"6.547,9.371 4,12 11.961,11.957 12,4 9.375,6.543 2.828,0 0,2.828\" />\n      <polygon points=\"0,29.172 2.828,32 9.414,25.414 12,28 12,20 4,20 6.586,22.586\" />\n      <polygon points=\"28.031,12 25.438,9.404 32,2.838 29.164,0 22.598,6.566 20,3.971 20,12\" />\n    </svg>\n\n  )\n}\n\nexport const About = () => {\n  return (\n    <svg viewBox=\"0 0 24 24\">\n      <path fill=\"#9A9A9A\" d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" />\n    </svg>\n  )\n}\n","import classNames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { SortUp, SortDown, FramedIcon, Menu, About } from '../assets/svgIcons';\nimport { useViewport, breakpoints, useOutsideAlerter } from '../utils/utils';\n\n\nconst ImageNav = ({ className, options, reverseSort, updateSort, updateType, updateSearch }) => {\n  const [active, setActive] = useState(options[0]);\n  const [type, setType] = useState('All');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleOptionChange = (selection) => {\n    setActive(selection);\n    updateSort(selection);\n  };\n\n  const handleTypeChange = (value) => {\n    setType(value);\n    updateType(value);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n    updateSearch(event.target.value.toLowerCase());\n  };\n\n  const types = ['All', 'Wide', 'Portrait'];\n  const icon = reverseSort ? <SortUp /> : <SortDown />;\n\n  const renderSearch = (\n    <div className=\"search\">\n      <input\n        type=\"search\"\n        name=\"search\"\n        className=\"search-input\"\n        value={searchTerm}\n        onChange={handleSearchChange}\n        placeholder=\"Search\"\n      />\n    </div>\n  );\n\n  const renderSort = (\n    <ul className=\"filters\">\n      {options.map((item, index) => {\n        const isActive = active.key === item.key;\n        const buttonClass = isActive ? 'is-active' : undefined;\n\n        return (\n          <li key={index}>\n            <button\n              id={item.label}\n              className={classNames('filter', buttonClass)}\n              onClick={() => handleOptionChange(item)}\n              key={item.label}\n            >\n              {item.label}\n              {isActive && icon}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n\n  const renderFilters = (\n    <div className=\"image-types\">\n      {types.map((item) => {\n        return (\n          <>\n            <input\n              id={`${item}-label`}\n              onChange={() => handleTypeChange(item)}\n              checked={type === item}\n              type=\"radio\"\n              value={item}\n              name=\"type\"\n              key={`${item}-input`}\n            />\n            <label key={`${item}-label`} htmlFor={`${item}-label`}>\n              {item}\n            </label>\n          </>\n        );\n      })}\n    </div>\n  );\n\n    const renderAbout = () => (\n        <div className=\"about\">\n            <button className=\"about-icon\" onClick={() => setShowAbout((current) => !current)}>\n                <About />\n            </button>\n            {showAbout && (\n                <div className=\"about-modal\">\n                    <div className=\"about-modal-content\" ref={aboutModalRef}>\n                        <div className=\"framed-icon\">\n                            <FramedIcon />\n                        </div>\n                        Hall-of-framed website which contains various galleries with screenshots made by the members of the community\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n    \n    const renderDesktop = () => {\n       return (\n           <>\n            {renderSort}\n            {renderFilters}\n            {renderSearch}\n            {renderAbout()}\n           </>\n       )\n    }\n    \n  const renderMobile = () => {\n    return (\n      <>\n        <div className=\"mobile-menu\" ref={mobileMenuRef}>\n          <button className=\"menu-button\" onClick={() => setShowMenu((current) => !current)}>\n            <Menu />\n          </button>\n          {showMenu && (\n            <div className=\"mobile-menu-content\">\n              {renderSearch}\n              {renderSort}\n              {renderFilters}\n            </div>\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const handleClickOutside = () => {\n    setShowMenu(false);\n  };\n  \n  const handleClickOutsideAboutModal = () => {\n    setShowAbout(false);\n  }\n\n  const [showMenu, setShowMenu] = useState(false);\n  const [showAbout, setShowAbout] = useState(false);\n  const { width } = useViewport();\n  const isMobile = width <= breakpoints.mobile;\n  const viewportClass = isMobile ? 'image-nav--mobile' : 'image-nav--desktop';\n\n  const mobileMenuRef = useRef(null);\n  const aboutModalRef = useRef(null);\n  useOutsideAlerter(mobileMenuRef, handleClickOutside);\n  useOutsideAlerter(aboutModalRef, handleClickOutsideAboutModal);\n\n  useEffect(() => {\n      if (!isMobile) {\n          setShowMenu(false);\n      }\n  }, [isMobile])\n    \n  return (\n      <div className={`image-nav ${viewportClass} ${className}`}>\n          <div className=\"framed-icon\">\n              <FramedIcon/>\n          </div>\n          {!isMobile && renderDesktop()}\n          {isMobile && renderMobile()}\n      </div>\n  )\n}\n\nexport default ImageNav;\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nclass Spinner extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    modifier: PropTypes.string,\r\n    show: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    show: false,\r\n    modifier: ''\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.renderSpinner = this.renderSpinner.bind(this);\r\n    this.baseClass = 'framed-spinner';\r\n  }\r\n\r\n  get svgSpinner() {\r\n    return (\r\n      <div className={`${this.baseClass}-svg-wrapper`}>\r\n        <svg className={`${this.baseClass}-svg-back`} viewBox=\"0 0 200 200\">\r\n          <circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" />\r\n        </svg>\r\n        <svg className={`${this.baseClass}-svg-segment`} viewBox=\"0 0 200 200\">\r\n          <circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" />\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  get spinnerContainer() {\r\n    const { modifier } = this.props;\r\n    const modifierClass = modifier ? 'global' : false;\r\n\r\n    return <div className={`${this.baseClass}-container ${modifierClass}`}>{this.spinner}</div>;\r\n  }\r\n\r\n  get spinner() {\r\n    const { className, modifier } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={classNames(\r\n          this.baseClass,\r\n          `${this.baseClass}--${modifier}`,\r\n          className\r\n        )}\r\n      >\r\n        {this.svgSpinner}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSpinner() {\r\n    return this.spinnerContainer;\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n\r\n    return show ? this.renderSpinner() : null;\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import classNames from 'classnames';\nimport React, { useEffect, useReducer } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport { Cancel, ExitFullscreen, Fullscreen } from '../assets/svgIcons';\nimport Spinner from '../components/Spinner/Spinner';\nimport { useFullscreenStatus } from '../utils/utils';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'initialize':\n      return { ...state, initialized: true };\n    case 'close':\n      return { initialized: false, loadedState: false, showImage: false };\n    case 'loadImage':\n      return { initialized: true, loadedState: true, showImage: true };\n    case 'changeImage':\n      return { ...state, loadedState: false };\n    default:\n      return state;\n  }\n};\n\nconst ImageViewer = ({ image = {}, show, onClose, data, onPrev, onNext, setBgImage }) => {\n  const [{ initialized, loadedState, showImage }, dispatch] = useReducer(reducer, {\n    initialized: false,\n    loadedState: false,\n    showImage: false,\n  });\n\n  let isFullscreen, setIsFullscreen;\n  const maximizableElement = React.useRef(null);\n  let fullScreenError;\n  try {\n    [isFullscreen, setIsFullscreen] = useFullscreenStatus(maximizableElement);\n  } catch (e) {\n    fullScreenError = 'Fullscreen not supported';\n    isFullscreen = false;\n    setIsFullscreen = undefined;\n  }\n\n  const visibleClass = show ? 'is-visible' : undefined;\n  const prevDisabled = data.findIndex((e) => e.id === image.id) === 0 || !loadedState;\n  const nextDisabled = data.findIndex((e) => e.id === image.id) === data.length - 1 || !loadedState;\n\n  const handleExitFullscreen = () => document.exitFullscreen();\n\n  const handlePrev = React.useCallback((event) => {\n      event?.stopPropagation();\n      dispatch({ type: 'changeImage' });\n      onPrev();\n    },\n    [onPrev],\n  );\n\n  const handleNext = React.useCallback((event) => {\n      event?.stopPropagation();\n      dispatch({ type: 'changeImage' });\n      onNext();\n    },\n    [onNext],\n  );\n\n  const handleClose = React.useCallback(() => {\n    if (isFullscreen) {\n      document.exitFullscreen();\n    } else {\n      dispatch({ type: 'close' });\n      onClose();\n    }\n  }, [isFullscreen, onClose]);\n\n  const handleLoad = () => {\n    dispatch({ type: 'loadImage' });\n    setBgImage(image);\n  };\n\n  const handleKeyboard = React.useCallback(\n    (event) => {\n      const { key } = event;\n\n      switch (key) {\n        case 'ArrowRight':\n          if (nextDisabled) {\n            return false;\n          }\n          return handleNext(event);\n        case 'ArrowLeft':\n          if (prevDisabled) {\n            return false;\n          }\n          return handlePrev(event);\n        case 'Escape':\n          if (isFullscreen) {\n            return false;\n          }\n          return handleClose();\n        case 'f':\n          if (fullScreenError) {\n            return false;\n          }\n          return setIsFullscreen();\n        default:\n          return false;\n      }\n    },\n    [\n      isFullscreen,\n      handleClose,\n      handleNext,\n      handlePrev,\n      nextDisabled,\n      prevDisabled,\n      setIsFullscreen,\n      fullScreenError,\n    ],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyboard);\n\n    // remove listener when component unmounts\n    return () => {\n      window.removeEventListener('keyup', handleKeyboard);\n    };\n  }, [initialized, handleKeyboard]);\n\n  const modifier = !initialized ? 'global' : '';\n  const fullscreenClass = isFullscreen ? 'fullscreen' : false;\n  const loadedClass = showImage ? 'loaded' : 'hidden';\n\n  const swipeConfig = {\n    delta: 10,\n    preventDefaultTouchmoveEvent: true,\n    trackTouch: true,\n    trackMouse: false,\n    rotationAngle: 0,\n  };\n\n  const handlers = useSwipeable({\n    onSwipedRight: () => {\n        if (nextDisabled) {\n            return false;\n        }\n        return handleNext();\n    },\n    onSwipedLeft: () => {\n        if (prevDisabled) {\n            return false;\n        }\n        return handlePrev();\n    },\n    ...swipeConfig,\n  });\n\n  return (\n    <div className={classNames('image-viewer', visibleClass)} onClick={handleClose}>\n      <div className=\"image-nav\">\n        <button className=\"image-nav-button left\" disabled={prevDisabled} onClick={handlePrev}>\n          [ Prev ]\n        </button>\n        <button className=\"image-nav-button right\" disabled={nextDisabled} onClick={handleNext}>\n          [ Next ]\n        </button>\n      </div>\n\n      <div ref={maximizableElement} className={classNames('image-viewer-content', fullscreenClass)}>\n        {image && (\n          <>\n            <img\n              alt={image.gameName}\n              src={image.shotUrl}\n              onClick={(event) => {\n                event.stopPropagation();\n              }}\n              onLoad={handleLoad}\n              className={loadedClass}\n              {...handlers}\n            />\n            {initialized && !isFullscreen && (\n              <div className=\"shot-info\" onClick={(event) => {event.stopPropagation();}}>\n                {/* <img src={image.authorsAvatarUrl} alt=\"avatar\" /> */}\n                <div className=\"info\">\n                  <span className=\"by\">by</span> <span className=\"author\">{image.author}</span>\n                  <span className=\"title\">{image.gameName}</span>\n                </div>\n                {!isFullscreen && !fullScreenError && (\n                  <button className=\"fullscreen-button\" onClick={setIsFullscreen}>\n                    <Fullscreen />\n                  </button>\n                )}\n              </div>\n            )}\n            {isFullscreen ? (\n              <button className=\"close\" onClick={handleExitFullscreen}>\n                <ExitFullscreen />\n              </button>\n            ) : (\n              <button className=\"close\" onClick={handleClose}>\n                <Cancel />\n              </button>\n            )}\n          </>\n        )}\n        <Spinner modifier={modifier} show={!loadedState} />\n      </div>\n    </div>\n  );\n};\n\nexport default ImageViewer;\n","import React, { useState, useEffect } from 'react';\n\nimport ImageGrid from '../components/ImageGrid';\nimport ImageNav from '../components/ImageNav';\nimport ImageViewer from '../components/ImageViewer';\n\nconst ImageGridContainer = ({data, setBgImage}) => {\n    const sortOptions = [\n        {\n            label: 'Date',\n            key: 'date',\n        },\n        {\n            label: 'Popularity',\n            key: 'score',\n        }\n    ]\n\n    const [imageData, setImageData] = useState([]);\n    const [sortOption, setSortOption] = useState(sortOptions[0]);\n    const [type, setType] = useState('all');\n    const [searchTerm, setSearchTerm] = useState('');\n    const [showViewer, setShowViewer] = useState(false);\n    const [viewerSrc, setViewerSrc] = useState({})\n    const [isReverse, setIsReverse] = useState(false);\n\n    const handleSortChange = (option) => {\n        if (option.key === sortOption.key) {\n            setIsReverse((current) => !current);\n        } else {\n            setIsReverse(false);\n            setSortOption(option)\n        }\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n\n    const handleTypeChange = (type) => {\n        setType(type);\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n\n    const handleSearchChange = (keyword) => {\n        setSearchTerm(keyword)\n    }\n\n    const handleImageClick = (image) => {\n        setViewerSrc(image);\n        setShowViewer(true);\n    }\n\n    const handleClose = () => {\n        setViewerSrc({});\n        setShowViewer(false);\n    }\n\n    const searchData = (data) => {\n        if (searchTerm?.length < 3) {\n            return data;\n        }\n\n        const results = data.filter((obj) => {\n            return Object.keys(obj).reduce((acc, curr) => {\n                return acc || obj[curr].toString().toLowerCase().includes(searchTerm.toLowerCase());\n            }, false);\n        });\n\n        return results;\n    }\n\n    const filterImages = (images) => {\n        let results = images;\n        const key = sortOption.key;\n\n        let sortMethod = (a,b) => (a[key] < b[key]) ? 1 : ((b[key] < a[key]) ? -1 : 0)\n        if (isReverse) {\n            sortMethod = (a,b) => (a[key] > b[key]) ? 1 : ((b[key] > a[key]) ? -1 : 0)\n        } \n        results = images.sort(sortMethod);\n\n        if (type === 'Wide') {\n            results = results.filter(item => item.width >= item.height);\n        } else if (type === 'Portrait') {\n            results = results.filter(item => item.width <= item.height);\n        }\n\n        // apply search\n\n        return searchData(results);\n    }\n\n    const selectPreviousImage = () => {\n        const index = imageData.findIndex((e) => e.id === viewerSrc.id);\n        if (index - 1 >= 0) {\n            setViewerSrc(imageData[index-1]);\n        }\n    }\n\n    const selectNextImage = () => {\n        const index = imageData.findIndex((e) => e.id === viewerSrc.id);\n        if (index + 1 <= imageData.length) {\n            setViewerSrc(imageData[index+1]);\n        }\n    }\n\n    useEffect(() => {\n        if (data.length) {\n            const images = filterImages(data.slice());\n\n            setImageData(images)\n        }\n    }, [data, sortOption, type, searchTerm, isReverse])\n\n    const container = document.querySelector('.image-grid');\n\n    return (\n        <div style={{ margin: '0 auto'}} className=\"home\">\n            <ImageNav \n                className={showViewer ? 'hidden' : ''}\n                options={sortOptions}\n                reverseSort={isReverse}\n                updateSort={handleSortChange} \n                updateType={handleTypeChange}\n                updateSearch={handleSearchChange}\n            />\n            {imageData && container && (\n                <ImageGrid \n                    className='image-rows'\n                    images={imageData} \n                    rowTargetHeight={400} \n                    container={container} \n                    onClick={handleImageClick}\n                />\n            )}\n            <ImageViewer \n                image={viewerSrc} \n                show={showViewer} \n                onClose={handleClose} \n                data={imageData}\n                onPrev={selectPreviousImage}\n                onNext={selectNextImage}\n                setBgImage={setBgImage}\n            />\n        </div>\n    );\n}\nexport default ImageGridContainer;","const APIURL = 'https://raw.githubusercontent.com/originalnicodrgitbot/hall-of-framed-db/main/shotsdb.json';\r\nconst axios = require('axios');\r\n\r\n\r\nexport const getImages = () => axios.get(`${APIURL}`);","import React, { useCallback, useEffect, useState } from 'react';\nimport ImageGridContainer from '../src/pages/ImageGridContainer';\nimport { getImages } from './api/request';\nimport './components/Spinner/Spinner.css';\nimport './styles/App.css';\nimport './styles/reset.css';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [initialized, setInitialized] = useState(false);\n  const [bgImageContainer, setBgImageContainer] = useState(null);\n\n  const setBackground = useCallback(\n    (imageObject) => {\n      const bgImage = imageObject.thumbnailUrl;\n      bgImageContainer.style.backgroundImage = `url('${bgImage}')`;\n    },\n    [bgImageContainer],\n  );\n\n  const getNewImages = async () => {\n    setInitialized(true);\n    const response = await getImages({});\n    const entries = Object.entries(response.data._default);\n    const shots = [];\n\n    entries.forEach((item) => {\n      const id = item[0];\n      const shotData = item[1];\n      shots.push({ id, ...shotData });\n    });\n\n    setData(shots);\n  };\n\n  useEffect(() => {\n    !initialized && getNewImages();\n    data.length && !bgImageContainer && setBgImageContainer(document.querySelector('.bg-blur'));\n    data.length && bgImageContainer && setBackground(data[0]);\n  }, [bgImageContainer, data, initialized, setBackground]);\n\n  return (\n    <div className=\"image-grid\">\n      {data && <ImageGridContainer data={data} setBgImage={setBackground} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}