{"version":3,"sources":["api/request.js","utils/utils.js","components/ImageGrid.jsx","assets/svgIcons.jsx","components/ImageNav.jsx","components/Spinner/Spinner.jsx","components/ImageViewer.jsx","pages/ImageGridContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","require","useViewport","useState","window","innerWidth","width","setWidth","useEffect","handleWindowResize","addEventListener","removeEventListener","breakpoints","ImageGrid","className","images","rowTargetHeight","borderOffset","onClick","outerPadding","maxWidth","makeSmaller","image","amount","newHeight","height","getCumulativeWidth","i","length","buildRows","currentRow","currentWidth","imageCounter","rows","processedImages","parseInt","id","author","authorsAvatarUrl","date","gameName","score","shotUrl","thumbnailUrl","push","processImages","normalizeImages","fitImagesInRow","difference","amountOfImages","addToEach","n","map","row","index","imageIndex","alt","src","style","marginRight","marginBottom","Math","ceil","cursor","renderGrid","buildGrid","SortUp","xmlns","viewBox","fill","d","SortDown","FramedIcon","x","y","Menu","ImageNav","ref","onClickOutside","options","reverseSort","updateSort","updateType","updateSearch","active","setActive","type","setType","searchTerm","setSearchTerm","icon","renderSearch","name","placeholder","value","onChange","event","target","toLowerCase","renderSort","item","isActive","key","buttonClass","undefined","classNames","selection","label","renderFilters","checked","htmlFor","showMenu","setShowMenu","isMobile","viewportClass","mobileMenuRef","useRef","handleClickOutside","current","contains","document","Spinner","props","renderSpinner","bind","baseClass","this","spinnerContainer","show","cx","cy","r","modifierClass","modifier","spinner","svgSpinner","PureComponent","defaultProps","reducer","state","action","initialized","loadedState","ImageViewer","onClose","data","onPrev","onNext","useReducer","dispatch","visibleClass","prevDisabled","findIndex","e","nextDisabled","handlePrev","stopPropagation","handleNext","handleClose","handleKeyboard","disabled","onLoad","ImageGridContainer","sortOptions","imageData","setImageData","sortOption","setSortOption","showViewer","setShowViewer","viewerSrc","setViewerSrc","isReverse","setIsReverse","filterImages","results","sortMethod","a","b","sort","filter","obj","Object","keys","reduce","acc","curr","toString","includes","searchData","slice","container","querySelector","margin","option","keyword","App","setData","setInitialized","getNewImages","get","response","entries","_default","shots","forEach","shotData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2047589c.chunk.js","sourcesContent":["const APIURL = 'https://raw.githubusercontent.com/originalnicodrgitbot/hall-of-framed-db/main/shotsdb.json';\r\nconst axios = require('axios');\r\n\r\n\r\nexport const getImages = () => axios.get(`${APIURL}`);","import { useState, useEffect } from 'react';\r\n\r\nexport const useViewport = () => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleWindowResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n  }, []);\r\n\r\n  // Return the width so we can use it in our components\r\n  return { width };\r\n}\r\n\r\nexport const useOutsideAlerter = (ref, onClickOutside) => {\r\n  useEffect(() => {\r\n      /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n      function handleClickOutside(event) {\r\n          if (ref.current && !ref.current.contains(event.target)) {\r\n            onClickOutside();\r\n          }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n          // Unbind the event listener on clean up\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n  }, [ref]);\r\n}\r\n\r\n\r\nexport const breakpoints = {\r\n  mobile: 760\r\n}","import { useViewport}  from '../utils/utils';\r\n\r\nconst ImageGrid = ({\r\n        className, \r\n        images, \r\n        rowTargetHeight = 400, \r\n        borderOffset = 5, \r\n        onClick,\r\n        outerPadding = 60\r\n    }) => {\r\n\r\n    const { width } = useViewport();\r\n    const maxWidth = width - outerPadding;\r\n\r\n    const processImages = () => {\r\n        const processedImages = [];\r\n\r\n        for (let i = 0; i < images.length; i++) {\r\n            let width = parseInt(images[i].width);\r\n            const height = parseInt(images[i].height);\r\n            width = width * (rowTargetHeight / height); \r\n\r\n            const image = {\r\n                'id': images[i].id,\r\n                'author': images[i].author,\r\n                'authorsAvatarUrl': images[i].authorsAvatarUrl,\r\n                'data': images[i].date,\r\n                'gameName': images[i].gameName,\r\n                'score': images[i].score,\r\n                'fullWidth': images[i].width,\r\n                'fullHeight': images[i].height,\r\n                'shotUrl': images[i].shotUrl,\r\n                'thumbnailUrl': images[i].thumbnailUrl,\r\n                'width': width,\r\n                'height': rowTargetHeight,\r\n            }\r\n\r\n            processedImages.push(image);\r\n        }\r\n\r\n        return processedImages;\r\n    }\r\n\r\n    const makeSmaller = (image, amount) => {\r\n        amount = amount || 1;\r\n\r\n        const newHeight = image.height - amount;\r\n        image.width = (image.width * (newHeight / image.height));\r\n        image.height = newHeight;\r\n\r\n\r\n        return image;\r\n    };\r\n\r\n    const getCumulativeWidth = (images) => {\r\n        let width = 0;\r\n\r\n        for(let i = 0; i < images.length; i++) {\r\n            width += images[i].width;\r\n        }\r\n\r\n        width += (images.length-1) * borderOffset;\r\n\r\n        return width;\r\n    };\r\n\r\n    const buildRows = () => {\r\n        let currentRow = 0;\r\n        let currentWidth = 0;\r\n        let imageCounter = 0;\r\n        const rows = [];\r\n        const processedImages = processImages();\r\n\r\n        while(processedImages[imageCounter]) {\r\n            if(currentWidth >= maxWidth) {\r\n                currentRow++;\r\n                currentWidth = 0;\r\n            }\r\n            if(!rows[currentRow]) {\r\n                rows[currentRow] = [];\r\n            }\r\n\r\n            rows[currentRow].push(processedImages[imageCounter]);\r\n            currentWidth += processedImages[imageCounter].width;\r\n\r\n            imageCounter++;\r\n        };\r\n\r\n        return rows;\r\n    }\r\n\r\n    const normalizeImage = (image) => {\r\n        image.width =  parseInt(image.width);\r\n        image.height = parseInt(image.height);\r\n\r\n        return image;\r\n    };\r\n\r\n    const normalizeImages = (images) => {\r\n        for(let i = 0; i < images.length; i++) {\r\n            normalizeImage(images[i]);\r\n        }\r\n\r\n        return images;\r\n    };\r\n\r\n    const fitImagesInRow = (images) => {\r\n        while(getCumulativeWidth(images) > maxWidth) {\r\n            for(let i = 0; i < images.length; i++) {\r\n                images[i] = makeSmaller(images[i]);\r\n            }\r\n        };\r\n\r\n        return images;\r\n    }\r\n\r\n    const renderGrid = (rows) => {\r\n        return (\r\n        <div className={className}>\r\n            {rows.map((row, index) => {\r\n                return (\r\n                    <div \r\n                        key={index} \r\n                        className=\"image-row\" \r\n                    >\r\n                        {row.map((image, imageIndex) => {\r\n                            return (\r\n                                <img \r\n                                    alt={image.gameName}\r\n                                    key={imageIndex} \r\n                                    src={image.thumbnailUrl} \r\n                                    style={{\r\n                                        marginRight: borderOffset,\r\n                                        marginBottom: borderOffset,\r\n                                        width: Math.ceil(image.width), \r\n                                        height:image.height,\r\n                                        cursor: 'pointer'\r\n                                    }}\r\n                                    onClick={() => onClick(image, imageIndex)} \r\n                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n        );\r\n    };\r\n\r\n    const buildGrid = () => {\r\n        const rows = buildRows();\r\n\r\n        for(let i = 0; i < rows.length; i++) {\r\n            rows[i] = fitImagesInRow(rows[i]);\r\n\r\n            rows[i] = normalizeImages(rows[i]);\r\n\r\n            const difference = (maxWidth - getCumulativeWidth(rows[i]));\r\n            const amountOfImages = rows[i].length;\r\n\r\n            if(amountOfImages > 1 && difference < 10) {\r\n                const addToEach = difference / amountOfImages;\r\n                for(let n = 0; n < rows[i].length; n++) {\r\n                    rows[i][n].width += addToEach;\r\n                }\r\n\r\n                rows[i] = normalizeImages(rows[i]);\r\n\r\n\r\n                rows[i][rows[i].length-1].width += (maxWidth - getCumulativeWidth(rows[i]));\r\n            }\r\n        }\r\n\r\n        return renderGrid(rows)\r\n    }\r\n\r\n    return buildGrid();\r\n}\r\n\r\nexport default ImageGrid;","export const SortUp = () => {\r\n  return (\r\n    <div className=\"sort-icon\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 292 292\" fill=\"#fff\">\r\n        <g>\r\n            <path d=\"M286.935,197.286L159.028,69.379c-3.613-3.617-7.895-5.424-12.847-5.424s-9.233,1.807-12.85,5.424L5.424,197.286\r\n                C1.807,200.9,0,205.184,0,210.132s1.807,9.233,5.424,12.847c3.621,3.617,7.902,5.428,12.85,5.428h255.813\r\n                c4.949,0,9.233-1.811,12.848-5.428c3.613-3.613,5.427-7.898,5.427-12.847S290.548,200.9,286.935,197.286z\"/>\r\n        </g>\r\n        </svg>\r\n\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 292 292\" fill=\"#aaa\">\r\n        <g>\r\n            <path d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\r\n            C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\r\n            s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"/>\r\n        </g>\r\n        </svg>\r\n    </div>\r\n  );\r\n}; \r\n\r\nexport const SortDown = () => {\r\n    return (\r\n        <div className=\"sort-icon\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 292 292\" fill=\"#aaa\">\r\n        <g>\r\n            <path d=\"M286.935,197.286L159.028,69.379c-3.613-3.617-7.895-5.424-12.847-5.424s-9.233,1.807-12.85,5.424L5.424,197.286\r\n                C1.807,200.9,0,205.184,0,210.132s1.807,9.233,5.424,12.847c3.621,3.617,7.902,5.428,12.85,5.428h255.813\r\n                c4.949,0,9.233-1.811,12.848-5.428c3.613-3.613,5.427-7.898,5.427-12.847S290.548,200.9,286.935,197.286z\"/>\r\n        </g>\r\n        </svg>\r\n\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 292 292\" fill=\"#fff\">\r\n        <g>\r\n            <path d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\r\n            C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\r\n            s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"/>\r\n        </g>\r\n        </svg>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport const FramedIcon = () => {\r\n\treturn (\r\n\t<div className=\"framed-icon\">\r\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0\" y=\"0\" viewBox=\"0 0 2048 2048\" fill=\"#9A9A9A\">\r\n\t\t<g>\r\n\t\t\t<g>\r\n\t\t\t\t<path d=\"M892.3,688v242h539v247.2h-539v411.9H609.1v-1150h889.1V688H892.3z\"/>\r\n\t\t\t</g>\r\n\t\t</g>\r\n\t\t<path d=\"M143.6,138.5v1760.9h1760.9V138.5H143.6z M1783.8,1778.7H264.2V259.2h1519.6V1778.7z\"/>\r\n\t\t</svg>\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport const Menu = () => {\r\n    return (\r\n      <svg viewBox=\"0 0 80 80\" width=\"40\" height=\"30\" fill=\"#fff\">\r\n        <rect y=\"15\" width=\"80\" height=\"10\"></rect>\r\n        <rect y=\"35\" width=\"80\" height=\"10\"></rect>\r\n        <rect y=\"55\" width=\"80\" height=\"10\"></rect>\r\n      </svg>\r\n    );\r\n  };","import React, { useState, useRef, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport { SortUp, SortDown, FramedIcon, Menu } from '../assets/svgIcons';\r\nimport { useViewport, breakpoints, useOutsideAlerter } from '../utils/utils';\r\n\r\nconst ImageNav = ({className, options, reverseSort, updateSort, updateType, updateSearch}) => {\r\n    const [active, setActive] = useState(options[0]);\r\n    const [type, setType] = useState('All')\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const handleOptionChange = (selection) => {\r\n        setActive(selection);\r\n        updateSort(selection);\r\n    }\r\n\r\n    const handleTypeChange = (value) => {\r\n        setType(value);\r\n        updateType(value);\r\n    }\r\n\r\n    const handleSearchChange = event => {\r\n        setSearchTerm(event.target.value);\r\n        updateSearch(event.target.value.toLowerCase());\r\n      };\r\n\r\n    const types = ['All', 'Wide', 'Portrait'];\r\n    const icon = reverseSort ? <SortUp /> : <SortDown />;\r\n\r\n    const renderSearch = (\r\n        <div className=\"search\">\r\n            <input\r\n                type=\"search\"\r\n                name=\"search\"\r\n                className=\"search-input\"\r\n                placeholder={'Search'}\r\n                value={searchTerm}\r\n                onChange={handleSearchChange}\r\n            />\r\n        </div>\r\n    );\r\n\r\n\r\n    const renderSort = (\r\n        <ul className=\"filters\">\r\n        {options.map((item, index) => {\r\n            const isActive = active.key === item.key;\r\n            const buttonClass = isActive ? 'is-active' : undefined;\r\n\r\n            return (\r\n                <li key={index}>\r\n                    <button\r\n                        className={classNames('filter', buttonClass)}\r\n                        onClick={() => handleOptionChange(item)}\r\n                        key={item.label}\r\n                    >\r\n                    <>\r\n                        {item.label}\r\n                        {isActive && icon}\r\n                    </>\r\n                    </button>\r\n                </li>\r\n            );\r\n        })}\r\n        </ul>\r\n    );\r\n    \r\n    const renderFilters = (\r\n        <div className=\"image-types\">\r\n            {types.map(item => {\r\n                return(\r\n                    <>\r\n                        <input \r\n                            id={`${item}-label`}\r\n                            onChange={()=> handleTypeChange(item)}\r\n                            checked={type===item} \r\n                            type=\"radio\" \r\n                            value={item} \r\n                            name=\"type\" \r\n                            key={`${item}-input`}\r\n                        /> \r\n                        <label key={`${item}-label`} htmlFor={`${item}-label`}>{item}</label>\r\n                    </>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n    \r\n    const renderDesktop = () => {\r\n       return (\r\n           <>\r\n            {renderSort}\r\n            {renderFilters}\r\n            {renderSearch}\r\n           </>\r\n       )\r\n    }\r\n\r\n    const renderMobile = () => {\r\n        return (\r\n            <div className=\"mobile-menu\" ref={mobileMenuRef}>\r\n                <button \r\n                    className=\"menu-button\" \r\n                    onClick={() => setShowMenu((current) => !current)}>\r\n                        <Menu />\r\n                </button>\r\n                {showMenu && (\r\n                <div className=\"mobile-menu-content\">\r\n                    {renderSearch}\r\n                    {renderSort}\r\n                    {renderFilters}\r\n                </div>)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleClickOutside = () => {\r\n        setShowMenu(false);\r\n    }\r\n\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const { width } = useViewport();\r\n    const isMobile = width <= breakpoints.mobile;\r\n    const viewportClass = isMobile ? 'image-nav--mobile' : 'image-nav--desktop';\r\n\r\n    const mobileMenuRef = useRef(null);\r\n    useOutsideAlerter(mobileMenuRef, handleClickOutside);\r\n\r\n    useEffect(() => {\r\n        if (!isMobile) {\r\n            setShowMenu(false);\r\n        }\r\n    }, [isMobile])\r\n    \r\n    return (\r\n        <div className={`image-nav ${viewportClass} ${className}`}>\r\n            <FramedIcon/>\r\n            {!isMobile && renderDesktop()}\r\n            {isMobile && renderMobile()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageNav;","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nclass Spinner extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    modifier: PropTypes.string,\r\n    show: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    show: false,\r\n    modifier: ''\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.renderSpinner = this.renderSpinner.bind(this);\r\n    this.baseClass = 'framed-spinner';\r\n  }\r\n\r\n  get svgSpinner() {\r\n    return (\r\n      <div className={`${this.baseClass}-svg-wrapper`}>\r\n        <svg className={`${this.baseClass}-svg-back`} viewBox=\"0 0 200 200\">\r\n          <circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" />\r\n        </svg>\r\n        <svg className={`${this.baseClass}-svg-segment`} viewBox=\"0 0 200 200\">\r\n          <circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" />\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  get spinnerContainer() {\r\n    const { modifier } = this.props;\r\n    const modifierClass = modifier ? 'global' : false;\r\n\r\n    return <div className={`${this.baseClass}-container ${modifierClass}`}>{this.spinner}</div>;\r\n  }\r\n\r\n  get spinner() {\r\n    const { className, modifier } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={classNames(\r\n          this.baseClass,\r\n          `${this.baseClass}--${modifier}`,\r\n          className\r\n        )}\r\n      >\r\n        {this.svgSpinner}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSpinner() {\r\n    return this.spinnerContainer;\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n\r\n    return show ? this.renderSpinner() : null;\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useReducer, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport Spinner from '../components/Spinner/Spinner';\r\n\r\nconst reducer = ( state, action) => {\r\n    switch (action.type) {\r\n        case \"initialize\": \r\n            return { ... state, initialized: true };\r\n        case \"close\":\r\n            return { initialized: false, loadedState: false };\r\n        case \"loadImage\":\r\n            return { initialized: true, loadedState: true };\r\n        case \"changeImage\":\r\n            return { ...state, loadedState: false}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ImageViewer = ({image = {}, show, onClose, data, onPrev, onNext}) => {\r\n    const [{ initialized, loadedState}, dispatch] = useReducer(reducer, {\r\n        initialized: false,\r\n        loadedState: false\r\n    })\r\n\r\n    const visibleClass = show ? 'is-visible' : undefined;\r\n\r\n    const prevDisabled = data.findIndex((e) => e.id === image.id) === 0 || !loadedState;\r\n    const nextDisabled = data.findIndex((e) => e.id === image.id) === data.length - 1 || !loadedState;\r\n\r\n    const handlePrev = (event) => {\r\n        event?.stopPropagation();\r\n        dispatch({ type: 'changeImage'});\r\n        onPrev();\r\n    }\r\n\r\n    const handleNext = (event) => {\r\n        event?.stopPropagation();\r\n        dispatch({ type: 'changeImage'});\r\n        onNext();\r\n    }\r\n\r\n    const handleClose = () => {\r\n        dispatch({ type: 'close'});\r\n        onClose();\r\n    }\r\n\r\n    const handleLoad = () => {\r\n        dispatch({ type: 'loadImage'});\r\n    }\r\n\r\n    const handleKeyboard = (event) => {\r\n        const { key } = event;\r\n\r\n        if (loadedState){ \r\n            if (key === 'ArrowRight' && !nextDisabled) {\r\n                return handleNext();\r\n            } else if (key === 'ArrowLeft' && !prevDisabled) {\r\n                return handlePrev();\r\n            } \r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keyup\", handleKeyboard);\r\n        \r\n        // remove listener when component unmounts\r\n        return () => {\r\n            window.removeEventListener(\"keyup\", handleKeyboard);\r\n        };\r\n    }, [initialized]);\r\n\r\n    const modifier = !initialized ? 'global' : '';\r\n\r\n    return (\r\n        <div className={classNames('image-viewer', visibleClass)} onClick={handleClose}> \r\n            <div className=\"image-nav\">\r\n                <button className=\"image-nav-button left\" disabled={prevDisabled} onClick={handlePrev}>[ Prev ]</button>\r\n                <button className=\"image-nav-button right\" disabled={nextDisabled} onClick={handleNext}>[ Next ]</button>\r\n            </div>\r\n            <div className=\"image-viewer-content\">\r\n                {image && (\r\n                    <>\r\n                        <img \r\n                            alt={image.gameName} \r\n                            src={image.shotUrl} \r\n                            onClick={(event) => {event.stopPropagation();}}\r\n                            onLoad={handleLoad}\r\n                        />\r\n                        {initialized && (<div className=\"author\" onClick={(event) => {event.stopPropagation();}}>\r\n                            {/* <img src={image.authorsAvatarUrl} alt=\"avatar\" /> */}\r\n                            <div><span>by</span> <strong>{image.author}</strong></div>\r\n                            <div className=\"title\">{image.gameName}</div>\r\n                        </div>)}\r\n                    </>\r\n                )}\r\n                <Spinner modifier={modifier} show={!loadedState} />\r\n                <button className=\"close\" onClick={handleClose}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer;","import React, { useState, useEffect } from 'react';\r\n\r\nimport ImageGrid from '../components/ImageGrid';\r\nimport ImageNav from '../components/ImageNav';\r\nimport ImageViewer from '../components/ImageViewer';\r\n\r\nconst ImageGridContainer = ({data}) => {\r\n    const sortOptions = [\r\n        {\r\n            label: 'Date',\r\n            key: 'date',\r\n        },\r\n        {\r\n            label: 'Popularity',\r\n            key: 'score',\r\n        }\r\n    ]\r\n\r\n    const [imageData, setImageData] = useState([]);\r\n    const [sortOption, setSortOption] = useState(sortOptions[0]);\r\n    const [type, setType] = useState('all');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [showViewer, setShowViewer] = useState(false);\r\n    const [viewerSrc, setViewerSrc] = useState({})\r\n    const [isReverse, setIsReverse] = useState(false);\r\n\r\n    const handleSortChange = (option) => {\r\n        if (option.key === sortOption.key) {\r\n            setIsReverse((current) => !current);\r\n        } else {\r\n            setIsReverse(false);\r\n            setSortOption(option)\r\n        }\r\n    }\r\n\r\n    const handleTypeChange = (type) => {\r\n        setType(type);\r\n    }\r\n\r\n    const handleSearchChange = (keyword) => {\r\n        setSearchTerm(keyword)\r\n    }\r\n\r\n    const handleImageClick = (image) => {\r\n        setViewerSrc(image);\r\n        setShowViewer(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setViewerSrc({});\r\n        setShowViewer(false);\r\n    }\r\n\r\n    const searchData = (data) => {\r\n        if (searchTerm?.length < 3) {\r\n            return data;\r\n        }\r\n\r\n        const results = data.filter((obj) => {\r\n            return Object.keys(obj).reduce((acc, curr) => {\r\n                return acc || obj[curr].toString().toLowerCase().includes(searchTerm.toLowerCase());\r\n            }, false);\r\n        });\r\n\r\n        return results;\r\n    }\r\n\r\n    const filterImages = (images) => {\r\n        let results = images;\r\n        const key = sortOption.key;\r\n\r\n        let sortMethod = (a,b) => (a[key] < b[key]) ? 1 : ((b[key] < a[key]) ? -1 : 0)\r\n        if (isReverse) {\r\n            sortMethod = (a,b) => (a[key] > b[key]) ? 1 : ((b[key] > a[key]) ? -1 : 0)\r\n        } \r\n        results = images.sort(sortMethod);\r\n\r\n        if (type === 'Wide') {\r\n            results = results.filter(item => item.width >= item.height);\r\n        } else if (type === 'Portrait') {\r\n            results = results.filter(item => item.width <= item.height);\r\n        }\r\n\r\n        // apply search\r\n\r\n        return searchData(results);\r\n    }\r\n\r\n    const selectPreviousImage = () => {\r\n        const index = imageData.findIndex((e) => e.id === viewerSrc.id);\r\n        if (index - 1 >= 0) {\r\n            setViewerSrc(imageData[index-1]);\r\n        }\r\n    }\r\n\r\n    const selectNextImage = () => {\r\n        const index = imageData.findIndex((e) => e.id === viewerSrc.id);\r\n        if (index + 1 <= imageData.length) {\r\n            setViewerSrc(imageData[index+1]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data.length) {\r\n            const images = filterImages(data.slice());\r\n\r\n            setImageData(images)\r\n        }\r\n    }, [data, sortOption, type, searchTerm, isReverse])\r\n\r\n    const container = document.querySelector('.image-grid');\r\n\r\n    return (\r\n        <div style={{ margin: '0 auto'}} className=\"home\">\r\n            <ImageNav \r\n                className={showViewer ? 'hidden' : ''}\r\n                options={sortOptions}\r\n                reverseSort={isReverse}\r\n                updateSort={handleSortChange} \r\n                updateType={handleTypeChange}\r\n                updateSearch={handleSearchChange}\r\n            />\r\n            {imageData && container && (\r\n                <ImageGrid \r\n                    className='image-rows'\r\n                    images={imageData} \r\n                    rowTargetHeight={400} \r\n                    container={container} \r\n                    onClick={handleImageClick}\r\n                />\r\n            )}\r\n            <ImageViewer \r\n                image={viewerSrc} \r\n                show={showViewer} \r\n                onClose={handleClose} \r\n                data={imageData}\r\n                onPrev={selectPreviousImage}\r\n                onNext={selectNextImage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default ImageGridContainer;","import './App.css';\r\nimport './components/Spinner/Spinner.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getImages } from './api/request'\r\nimport ImageGridContainer from '../src/pages/ImageGridContainer'\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [initialized, setInitialized] = useState(false);\r\n\r\n  const getNewImages = async () => {\r\n    setInitialized(true);\r\n    const response = await getImages({});\r\n    const entries = Object.entries(response.data._default);\r\n    const shots = [];\r\n    \r\n    entries.forEach((item) => \r\n    { \r\n        const id = item[0];\r\n        const shotData = item[1];\r\n        shots.push({ id, ...shotData });\r\n    });\r\n\r\n    setData(shots);\r\n  }\r\n\r\n  useEffect(() => {\r\n      if (!initialized) {\r\n          getNewImages();\r\n      }\r\n  })\r\n\r\n  return (\r\n    <div className=\"image-grid\">\r\n      {data && (<ImageGridContainer data={data}/>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}