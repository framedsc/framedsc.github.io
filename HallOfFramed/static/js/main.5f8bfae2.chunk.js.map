{"version":3,"sources":["assets/svgIcons.jsx","components/FramedModal/FramedModal.jsx","utils/utils.js","components/ImageGrid.jsx","assets/framed_intro_pino.jpg","utils/ModalContext.js","components/ImageNav.jsx","components/Spinner/Spinner.jsx","components/ImageViewer.jsx","pages/ImageGridContainer.jsx","api/request.js","App.js","reportWebVitals.js","index.js"],"names":["SortUp","className","xmlns","width","height","viewBox","fill","d","SortDown","FramedIcon","x","y","Menu","Fullscreen","points","Cancel","ExitFullscreen","About","FramedModal","show","component","onClose","visibleClass","undefined","handleClose","React","useCallback","document","fullScreen","mozFullScreen","webkitIsFullScreen","msFullscreenElement","exitFullscreen","classNames","onClick","useViewport","actualWidth","documentElement","clientWidth","body","useState","setWidth","onWindowLoad","useEffect","resizeTimeout","window","setTimeout","handleWindowResize","windowWidth","clearTimeout","addEventListener","removeEventListener","breakpoints","getBrowserFullscreenElementProp","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","Error","ImageGrid","images","rowTargetHeight","borderOffset","maxWidth","makeSmaller","image","amount","newHeight","getCumulativeWidth","i","length","buildRows","currentRow","currentWidth","imageCounter","rows","processedImages","parseInt","id","author","authorsAvatarUrl","data","date","gameName","score","fullWidth","fullHeight","shotUrl","thumbnailUrl","push","processImages","normalizeImages","fitImagesInRow","difference","amountOfImages","addToEach","n","style","paddingLeft","paddingTop","map","row","index","imageIndex","marginRight","marginBottom","alt","src","Math","ceil","cursor","renderGrid","buildGrid","ModalContext","createContext","showL","ImageNav","ref","onClickOutside","options","reverseSort","updateSort","updateType","updateSearch","active","setActive","type","setType","searchTerm","setSearchTerm","setModal","useContext","showAbout","class","framedBanner","icon","renderSearch","name","value","onChange","event","target","toLowerCase","placeholder","renderSort","item","isActive","key","buttonClass","label","selection","renderFilters","checked","htmlFor","renderModalButton","isMobile","showMenu","setShowMenu","viewportClass","mobileMenuRef","useRef","handleClickOutside","current","contains","Spinner","props","renderSpinner","bind","baseClass","this","spinnerContainer","cx","cy","r","modifierClass","modifier","spinner","svgSpinner","PureComponent","defaultProps","reducer","state","action","initialized","loadedState","showImage","ImageViewer","isFullscreen","setIsFullscreen","fullScreenError","onPrev","onNext","setBgImage","useReducer","dispatch","maximizableElement","elRef","useLayoutEffect","onfullscreenchange","requestFullscreen","then","catch","useFullscreenStatus","e","prevDisabled","findIndex","nextDisabled","handlePrev","stopPropagation","handleNext","handleKeyboard","fullscreenClass","loadedClass","handlers","useSwipeable","onSwipedRight","onSwipedLeft","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","disabled","onLoad","ImageGridContainer","sortOptions","imageData","setImageData","sortOption","setSortOption","showViewer","setShowViewer","viewerSrc","setViewerSrc","isReverse","setIsReverse","modal","searchData","filter","obj","Object","keys","reduce","acc","curr","toString","includes","filterImages","results","sortMethod","a","b","sort","slice","container","querySelector","margin","Provider","option","scrollTo","top","behavior","keyword","axios","require","App","setData","setInitialized","bgImageContainer","setBgImageContainer","setBackground","imageObject","bgImage","backgroundImage","getNewImages","get","response","entries","_default","shots","forEach","shotData","randomImageIndex","floor","random","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f8bfae2.chunk.js","sourcesContent":["export const SortUp = () => {\n  return (\n    <div className=\"sort-icon\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"10\"\n        height=\"10\"\n        viewBox=\"0 0 292 292\"\n        fill=\"#fff\"\n      >\n        <g>\n          <path\n            d=\"M286.935,197.286L159.028,69.379c-3.613-3.617-7.895-5.424-12.847-5.424s-9.233,1.807-12.85,5.424L5.424,197.286\n                C1.807,200.9,0,205.184,0,210.132s1.807,9.233,5.424,12.847c3.621,3.617,7.902,5.428,12.85,5.428h255.813\n                c4.949,0,9.233-1.811,12.848-5.428c3.613-3.613,5.427-7.898,5.427-12.847S290.548,200.9,286.935,197.286z\"\n          />\n        </g>\n      </svg>\n\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"10\"\n        height=\"10\"\n        viewBox=\"0 0 292 292\"\n        fill=\"#aaa\"\n      >\n        <g>\n          <path\n            d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\n            C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\n            s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport const SortDown = () => {\n  return (\n    <div className=\"sort-icon\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"10\"\n        height=\"10\"\n        viewBox=\"0 0 292 292\"\n        fill=\"#aaa\"\n      >\n        <g>\n          <path\n            d=\"M286.935,197.286L159.028,69.379c-3.613-3.617-7.895-5.424-12.847-5.424s-9.233,1.807-12.85,5.424L5.424,197.286\n                C1.807,200.9,0,205.184,0,210.132s1.807,9.233,5.424,12.847c3.621,3.617,7.902,5.428,12.85,5.428h255.813\n                c4.949,0,9.233-1.811,12.848-5.428c3.613-3.613,5.427-7.898,5.427-12.847S290.548,200.9,286.935,197.286z\"\n          />\n        </g>\n      </svg>\n\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"10\"\n        height=\"10\"\n        viewBox=\"0 0 292 292\"\n        fill=\"#fff\"\n      >\n        <g>\n          <path\n            d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\n            C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\n            s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport const FramedIcon = () => {\n\treturn (\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0\" y=\"0\" viewBox=\"0 0 2048 2048\" fill=\"#9A9A9A\">\n\t\t<g>\n\t\t\t<g>\n\t\t\t\t<path d=\"M892.3,688v242h539v247.2h-539v411.9H609.1v-1150h889.1V688H892.3z\"/>\n\t\t\t</g>\n\t\t</g>\n\t\t<path d=\"M143.6,138.5v1760.9h1760.9V138.5H143.6z M1783.8,1778.7H264.2V259.2h1519.6V1778.7z\"/>\n\t\t</svg>\n\t);\n}\n\n\nexport const Menu = () => {\n  return (\n    <svg viewBox=\"0 0 80 80\" width=\"40\" height=\"30\" fill=\"#fff\">\n      <rect y=\"15\" width=\"80\" height=\"10\"></rect>\n      <rect y=\"35\" width=\"80\" height=\"10\"></rect>\n      <rect y=\"55\" width=\"80\" height=\"10\"></rect>\n    </svg>\n  );\n};\n\nexport const Fullscreen = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n      <polygon points=\"68.284,40 165,40 165,0 0,0 0,165 40,165 40,68.284 177,205.284 205.284,177\" />\n      <polygon points=\"205.284,335 177,306.716 40,443.716 40,347 0,347 0,512 165,512 165,472 68.284,472\" />\n      <polygon points=\"347,0 347,40 443.716,40 306.716,177 335,205.284 472,68.284 472,165 512,165 512,0\" />\n      <polygon points=\"472,347 472,443.716 335,306.716 306.716,335 443.716,472 347,472 347,512 512,512 512,347\" />\n    </svg>\n  );\n};\n\nexport const Cancel = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n      <path\n        fill=\"#fff\"\n        d=\"M21 4.41L19.59 3 12 10.59 4.41 3 3 4.41 10.59 12 3 19.59 4.41 21 12 13.41 19.59 21 21 19.59 13.41 12 21 4.41z\"\n      />\n    </svg>\n  );\n};\n\nexport const ExitFullscreen = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\">\n      <polygon points=\"22.586,25.414 29.172,32 32,29.172 25.414,22.586 28,20 20,20 20,28\" />\n      <polygon points=\"6.547,9.371 4,12 11.961,11.957 12,4 9.375,6.543 2.828,0 0,2.828\" />\n      <polygon points=\"0,29.172 2.828,32 9.414,25.414 12,28 12,20 4,20 6.586,22.586\" />\n      <polygon points=\"28.031,12 25.438,9.404 32,2.838 29.164,0 22.598,6.566 20,3.971 20,12\" />\n    </svg>\n\n  )\n}\n\nexport const About = () => {\n  return (\n    <svg viewBox=\"0 0 24 24\">\n      <path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" />\n    </svg>\n  )\n}\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport { Cancel } from '../../assets/svgIcons';\r\n\r\nconst FramedModal = ({show, className, component, onClose }) => {\r\n  const visibleClass = show ? 'is-visible' : undefined;\r\n\r\n  const handleClose = React.useCallback(() => {\r\n    const isFullscreen = document.fullScreen ||\r\n    document.mozFullScreen ||\r\n    document.webkitIsFullScreen ||\r\n    document.msFullscreenElement;\r\n\r\n    if (isFullscreen) {\r\n      document.exitFullscreen();\r\n    } else {\r\n      if (onClose) {\r\n        onClose();\r\n      }\r\n    }\r\n  }, [onClose]);\r\n\r\n  return (\r\n    <div className={classNames('framed-modal', className, visibleClass)} onClick={handleClose}>\r\n      {component}\r\n      <button className=\"close\" onClick={handleClose}>\r\n        <Cancel />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FramedModal;\r\n","import { useEffect, useLayoutEffect, useState } from 'react';\n\nexport const useViewport = () => {\n  const actualWidth = document.documentElement.clientWidth || document.body.clientWidth;\n  const [width, setWidth] = useState(actualWidth);\n\n  const onWindowLoad = () => {\n    const actualWidth = document.documentElement.clientWidth || document.body.clientWidth;\n    setWidth(actualWidth);\n  }\n\n  useEffect(() => {\n    let resizeTimeout;\n    window.setTimeout(onWindowLoad, 1000);\n    const handleWindowResize = () => {\n      const windowWidth = document.documentElement.clientWidth || document.body.clientWidth;\n      clearTimeout(resizeTimeout);\n      resizeTimeout = setTimeout(() => setWidth(windowWidth), 50);\n    };\n    window.addEventListener('resize', handleWindowResize);\n    return () => window.removeEventListener('resize', handleWindowResize);\n  }, []);\n\n  // Return the width so we can use it in our components\n  return { width };\n};\n\nexport const useOutsideAlerter = (ref, onClickOutside) => {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onClickOutside();\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref, onClickOutside]);\n};\n\nexport const breakpoints = {\n  mobile: 820,\n};\n\nexport const getBrowserFullscreenElementProp = () => {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.msFullscreenElement !== 'undefined') {\n    return 'msFullscreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  } else {\n    throw new Error('fullscreenElement is not supported by this browser');\n  }\n}\n\nexport const useFullscreenStatus = (elRef) => {\n  const [isFullscreen, setIsFullscreen] = useState(\n    document[getBrowserFullscreenElementProp()] != null,\n  );\n\n  const setFullscreen = () => {\n    if (elRef.current == null) return;\n\n    elRef.current\n      .requestFullscreen()\n      .then(() => {\n        setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\n      })\n      .catch(() => {\n        setIsFullscreen(false);\n      });\n  };\n\n  useLayoutEffect(() => {\n    document.onfullscreenchange = () =>\n      setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\n\n    return () => (document.onfullscreenchange = undefined);\n  });\n\n  return [isFullscreen, setFullscreen];\n};\n","import { useViewport } from '../utils/utils';\n\nconst ImageGrid = ({\n  className,\n  images,\n  rowTargetHeight = 400,\n  borderOffset = 5,\n  onClick,\n}) => {\n  const { width } = useViewport();\n  const maxWidth = width - (borderOffset*2);\n\n  const processImages = () => {\n    const processedImages = [];\n\n    for (let i = 0; i < images.length; i++) {\n      let width = parseInt(images[i].width);\n      const height = parseInt(images[i].height);\n      width = width * (rowTargetHeight / height);\n\n      const image = {\n        id: images[i].id,\n        author: images[i].author,\n        authorsAvatarUrl: images[i].authorsAvatarUrl,\n        data: images[i].date,\n        gameName: images[i].gameName,\n        score: images[i].score,\n        fullWidth: images[i].width,\n        fullHeight: images[i].height,\n        shotUrl: images[i].shotUrl,\n        thumbnailUrl: images[i].thumbnailUrl,\n        width: width,\n        height: rowTargetHeight,\n      };\n\n      processedImages.push(image);\n    }\n\n    return processedImages;\n  };\n\n  const makeSmaller = (image, amount) => {\n    amount = amount || 1;\n\n    const newHeight = image.height - amount;\n    image.width = image.width * (newHeight / image.height);\n    image.height = newHeight;\n\n    return image;\n  };\n\n  const getCumulativeWidth = (images) => {\n    let width = 0;\n\n    for (let i = 0; i < images.length; i++) {\n      width += images[i].width;\n    }\n\n    width += (images.length - 1) * borderOffset;\n\n    return width;\n  };\n\n  const buildRows = () => {\n    let currentRow = 0;\n    let currentWidth = 0;\n    let imageCounter = 0;\n    const rows = [];\n    const processedImages = processImages();\n\n    while (processedImages[imageCounter]) {\n      if (currentWidth >= maxWidth) {\n        currentRow++;\n        currentWidth = 0;\n      }\n      if (!rows[currentRow]) {\n        rows[currentRow] = [];\n      }\n\n      rows[currentRow].push(processedImages[imageCounter]);\n      currentWidth += processedImages[imageCounter].width;\n\n      imageCounter++;\n    }\n\n    return rows;\n  };\n\n  const normalizeImage = (image) => {\n    image.width = parseInt(image.width);\n    image.height = parseInt(image.height);\n\n    return image;\n  };\n\n  const normalizeImages = (images) => {\n    for (let i = 0; i < images.length; i++) {\n      normalizeImage(images[i]);\n    }\n\n    return images;\n  };\n\n  const fitImagesInRow = (images) => {\n    while (getCumulativeWidth(images) > maxWidth) {\n      for (let i = 0; i < images.length; i++) {\n        images[i] = makeSmaller(images[i]);\n      }\n    }\n\n    return images;\n  };\n\n  const renderGrid = (rows) => {\n    return (\n      <div \n        className={className} \n        style={{\n            paddingLeft: borderOffset,\n            paddingTop: 50+borderOffset\n        }}\n      >\n        {rows.map((row, index) => {\n          return (\n            <div key={index} className=\"image-row\">\n              {row.map((image, imageIndex) => {\n                return (\n                  <div\n                    className=\"thumbnail-container\"\n                    style={{\n                      marginRight: borderOffset,\n                      marginBottom: borderOffset,\n                    }}\n                    key={`thumbnail-container-${image.id}`}\n                  >\n                    <img\n                      alt={image.gameName}\n                      key={imageIndex}\n                      src={image.thumbnailUrl}\n                      style={{\n                        width: Math.ceil(image.width),\n                        height: image.height,\n                        cursor: 'pointer',\n                      }}\n                      onClick={() => onClick(image, imageIndex)}\n                    />\n                    <div className=\"image-info\">\n                      <span className=\"by\">by</span> <span className=\"author\">{image.author}</span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const buildGrid = () => {\n    const rows = buildRows();\n\n    for (let i = 0; i < rows.length; i++) {\n      rows[i] = fitImagesInRow(rows[i]);\n\n      rows[i] = normalizeImages(rows[i]);\n\n      const difference = maxWidth - getCumulativeWidth(rows[i]);\n      const amountOfImages = rows[i].length;\n\n      if (amountOfImages > 1 && difference < 10) {\n        const addToEach = difference / amountOfImages;\n        for (let n = 0; n < rows[i].length; n++) {\n          rows[i][n].width += addToEach;\n        }\n\n        rows[i] = normalizeImages(rows[i]);\n\n        rows[i][rows[i].length - 1].width += maxWidth - getCumulativeWidth(rows[i]);\n      }\n    }\n\n    return renderGrid(rows);\n  };\n\n  return buildGrid();\n};\n\nexport default ImageGrid;\n","export default __webpack_public_path__ + \"static/media/framed_intro_pino.3888f15f.jpg\";","import { createContext } from 'react';\r\n\r\nexport const ModalContext = createContext({showL: false, component: null, className:''})","import classNames from 'classnames';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport framedBanner from '../assets/framed_intro_pino.jpg';\r\nimport { About, FramedIcon, Menu, SortDown, SortUp } from '../assets/svgIcons';\r\nimport { ModalContext } from '../utils/ModalContext';\r\nimport { breakpoints, useOutsideAlerter, useViewport } from '../utils/utils';\r\n\r\nconst ImageNav = ({ className, options, reverseSort, updateSort, updateType, updateSearch }) => {\r\n  const [active, setActive] = useState(options[0]);\r\n  const [type, setType] = useState('All');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const { setModal } = useContext(ModalContext);\r\n\r\n  const handleOptionChange = (selection) => {\r\n    setActive(selection);\r\n    updateSort(selection);\r\n  };\r\n\r\n  const handleTypeChange = (value) => {\r\n    setType(value);\r\n    updateType(value);\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    updateSearch(event.target.value.toLowerCase());\r\n  };\r\n\r\n  const showAbout = () => {\r\n    const modalComponent = (\r\n      <div class=\"about-modal-container\">\r\n        <div className=\"about-modal-content\">\r\n          <img src={framedBanner}></img>\r\n          <h2>About the Hall of Framed</h2>\r\n          <p>\r\n            The Framed Screenshot Community Discord server is full of so many amazing screenshots\r\n            that we quickly ran out of pins with which to showcase them. So we created a Discord bot\r\n            that would automatically post the most popular screenshots (the ones that exceed a\r\n            certain number of reactions) to a special channel. A list of those images is updated\r\n            instantly when a new one gets posted, and that list gets uploaded so that we can display\r\n            them on this here web site.\r\n          </p>\r\n          <p>\r\n            We hope that this can serve as a showcase for what talented screenshotters can achieve.\r\n            Maybe you'll find it useful as inspiration, or as a nice source of background images for\r\n            your PC or phone.\r\n          </p>\r\n          <p>\r\n            The Image Viewer can be controlled with the keyboard. Arrow keys will switch to the\r\n            previous or next image. F will open an image in fullscreen. Escape will close fullscreen\r\n            or close the image viewer. You can also swipe on mobile to change images.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    setModal({ show: true, component: modalComponent, className: 'about-window' });\r\n  };\r\n\r\n  const types = ['All', 'Wide', 'Portrait'];\r\n  const icon = reverseSort ? <SortUp /> : <SortDown />;\r\n\r\n  const renderSearch = (\r\n    <div className=\"search\">\r\n      <input\r\n        type=\"search\"\r\n        name=\"search\"\r\n        className=\"search-input\"\r\n        value={searchTerm}\r\n        onChange={handleSearchChange}\r\n        placeholder=\"Search\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const renderSort = (\r\n    <ul className=\"filters\">\r\n      {options.map((item, index) => {\r\n        const isActive = active.key === item.key;\r\n        const buttonClass = isActive ? 'is-active' : undefined;\r\n\r\n        return (\r\n          <li key={index}>\r\n            <button\r\n              id={item.label}\r\n              className={classNames('filter', buttonClass)}\r\n              onClick={() => handleOptionChange(item)}\r\n              key={item.label}\r\n            >\r\n              {item.label}\r\n              {isActive && icon}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n\r\n  const renderFilters = (\r\n    <div className=\"image-types\">\r\n      {types.map((item) => {\r\n        return (\r\n          <>\r\n            <input\r\n              id={`${item}-label`}\r\n              onChange={() => handleTypeChange(item)}\r\n              checked={type === item}\r\n              type=\"radio\"\r\n              value={item}\r\n              name=\"type\"\r\n              key={`${item}-input`}\r\n            />\r\n            <label key={`${item}-label`} htmlFor={`${item}-label`}>\r\n              {item}\r\n            </label>\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n\r\n  const renderModalButton = () => {\r\n    return isMobile ? undefined : (\r\n      <button className=\"about-icon\" onClick={showAbout}>\r\n        <About />\r\n      </button>\r\n    );\r\n  }\r\n\r\n  const renderDesktop = () => {\r\n    return (\r\n      <>\r\n        {renderSort}\r\n        {renderFilters}\r\n        {renderSearch}\r\n        {renderModalButton()}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderMobile = () => {\r\n    return (\r\n      <div className=\"mobile-menu\" ref={mobileMenuRef}>\r\n        <button className=\"menu-button\" onClick={() => setShowMenu((current) => !current)}>\r\n          <Menu />\r\n        </button>\r\n        {showMenu && (\r\n          <div className=\"mobile-menu-content\">\r\n            {renderModalButton()}\r\n            {renderSearch}\r\n            {renderSort}\r\n            {renderFilters}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleClickOutside = () => {\r\n    setShowMenu(false);\r\n  };\r\n\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const { width } = useViewport();\r\n  const isMobile = width <= breakpoints.mobile;\r\n  const viewportClass = isMobile ? 'image-nav--mobile' : 'image-nav--desktop';\r\n\r\n  const mobileMenuRef = useRef(null);\r\n  useOutsideAlerter(mobileMenuRef, handleClickOutside);\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      setShowMenu(false);\r\n    }\r\n  }, [isMobile]);\r\n\r\n  return (\r\n    <div className={`image-nav ${viewportClass} ${className}`}>\r\n      <div className=\"framed-icon\">\r\n        <FramedIcon />\r\n      </div>\r\n      {!isMobile && renderDesktop()}\r\n      {isMobile && renderMobile()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageNav;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nclass Spinner extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    modifier: PropTypes.string,\r\n    show: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    show: false,\r\n    modifier: ''\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.renderSpinner = this.renderSpinner.bind(this);\r\n    this.baseClass = 'framed-spinner';\r\n  }\r\n\r\n  get svgSpinner() {\r\n    return (\r\n      <div className={`${this.baseClass}-svg-wrapper`}>\r\n        <svg className={`${this.baseClass}-svg-back`} viewBox=\"0 0 200 200\">\r\n          <circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" />\r\n        </svg>\r\n        <svg className={`${this.baseClass}-svg-segment`} viewBox=\"0 0 200 200\">\r\n          <circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" />\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  get spinnerContainer() {\r\n    const { modifier } = this.props;\r\n    const modifierClass = modifier ? 'global' : false;\r\n\r\n    return <div className={`${this.baseClass}-container ${modifierClass}`}>{this.spinner}</div>;\r\n  }\r\n\r\n  get spinner() {\r\n    const { className, modifier } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={classNames(\r\n          this.baseClass,\r\n          `${this.baseClass}--${modifier}`,\r\n          className\r\n        )}\r\n      >\r\n        {this.svgSpinner}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSpinner() {\r\n    return this.spinnerContainer;\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n\r\n    return show ? this.renderSpinner() : null;\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import classNames from 'classnames';\nimport React, { useEffect, useReducer } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport { Cancel, ExitFullscreen, Fullscreen } from '../assets/svgIcons';\nimport Spinner from '../components/Spinner/Spinner';\nimport { useFullscreenStatus } from '../utils/utils';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'initialize':\n      return { ...state, initialized: true };\n    case 'close':\n      return { initialized: false, loadedState: false, showImage: false };\n    case 'loadImage':\n      return { initialized: true, loadedState: true, showImage: true };\n    case 'changeImage':\n      return { ...state, loadedState: false };\n    default:\n      return state;\n  }\n};\n\nconst ImageViewer = ({ image = {}, show, onClose, data, onPrev, onNext, setBgImage }) => {\n  const [{ initialized, loadedState, showImage }, dispatch] = useReducer(reducer, {\n    initialized: false,\n    loadedState: false,\n    showImage: false,\n  });\n\n  let isFullscreen, setIsFullscreen;\n  const maximizableElement = React.useRef(null);\n  let fullScreenError;\n  try {\n    [isFullscreen, setIsFullscreen] = useFullscreenStatus(maximizableElement);\n  } catch (e) {\n    fullScreenError = 'Fullscreen not supported';\n    isFullscreen = false;\n    setIsFullscreen = undefined;\n  }\n\n  const visibleClass = show ? 'is-visible' : undefined;\n  const prevDisabled = data.findIndex((e) => e.id === image.id) === 0 || !loadedState;\n  const nextDisabled = data.findIndex((e) => e.id === image.id) === data.length - 1 || !loadedState;\n\n  const handleExitFullscreen = () => document.exitFullscreen();\n\n  const handlePrev = React.useCallback((event) => {\n      event?.stopPropagation();\n      dispatch({ type: 'changeImage' });\n      onPrev();\n    },\n    [onPrev],\n  );\n\n  const handleNext = React.useCallback((event) => {\n      event?.stopPropagation();\n      dispatch({ type: 'changeImage' });\n      onNext();\n    },\n    [onNext],\n  );\n\n  const handleClose = React.useCallback(() => {\n    if (isFullscreen) {\n      document.exitFullscreen();\n    } else {\n      dispatch({ type: 'close' });\n      onClose();\n    }\n  }, [isFullscreen, onClose]);\n\n  const handleLoad = () => {\n    dispatch({ type: 'loadImage' });\n    setBgImage(image);\n  };\n\n  const handleKeyboard = React.useCallback(\n    (event) => {\n      const { key } = event;\n\n      if (!show) {\n          return false;\n      }\n      \n      switch (key) {\n        case 'ArrowRight':\n          if (nextDisabled) {\n            return false;\n          }\n          return handleNext(event);\n        case 'ArrowLeft':\n          if (prevDisabled) {\n            return false;\n          }\n          return handlePrev(event);\n        case 'Escape':\n          if (isFullscreen) {\n            return false;\n          }\n          return handleClose();\n        case 'f':\n          if (fullScreenError) {\n            return false;\n          }\n          return setIsFullscreen();\n        default:\n          return false;\n      }\n    },\n    [\n      isFullscreen,\n      handleClose,\n      handleNext,\n      handlePrev,\n      nextDisabled,\n      prevDisabled,\n      setIsFullscreen,\n      fullScreenError,\n      show\n    ],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyboard);\n\n    // remove listener when component unmounts\n    return () => {\n      window.removeEventListener('keyup', handleKeyboard);\n    };\n  }, [initialized, handleKeyboard]);\n\n  const modifier = !initialized ? 'global' : '';\n  const fullscreenClass = isFullscreen ? 'fullscreen' : false;\n  const loadedClass = showImage ? 'loaded' : 'hidden';\n\n  const swipeConfig = {\n    delta: 10,\n    preventDefaultTouchmoveEvent: true,\n    trackTouch: true,\n    trackMouse: false,\n    rotationAngle: 0,\n  };\n\n  const handlers = useSwipeable({\n    onSwipedRight: () => {\n        if (nextDisabled) {\n            return false;\n        }\n        return handleNext();\n    },\n    onSwipedLeft: () => {\n        if (prevDisabled) {\n            return false;\n        }\n        return handlePrev();\n    },\n    ...swipeConfig,\n  });\n\n  return (\n    <div className={classNames('image-viewer', 'framed-modal', visibleClass)} onClick={handleClose}>\n      <div className=\"image-nav\">\n        <button className=\"image-nav-button left\" disabled={prevDisabled} onClick={handlePrev}>\n          [ Prev ]\n        </button>\n        <button className=\"image-nav-button right\" disabled={nextDisabled} onClick={handleNext}>\n          [ Next ]\n        </button>\n      </div>\n\n      <div ref={maximizableElement} className={classNames('image-viewer-content', fullscreenClass)}>\n        {image && (\n          <>\n            <img\n              alt={image.gameName}\n              src={image.shotUrl}\n              onClick={(event) => {\n                event.stopPropagation();\n              }}\n              onLoad={handleLoad}\n              className={loadedClass}\n              {...handlers}\n            />\n            {initialized && !isFullscreen && (\n              <div className=\"shot-info\" onClick={(event) => {event.stopPropagation();}}>\n                {/* <img src={image.authorsAvatarUrl} alt=\"avatar\" /> */}\n                <div className=\"info\">\n                  <span className=\"by\">by</span> <span className=\"author\">{image.author}</span>\n                  <span className=\"title\">{image.gameName}</span>\n                </div>\n                {!isFullscreen && !fullScreenError && (\n                  <button className=\"fullscreen-button\" onClick={setIsFullscreen}>\n                    <Fullscreen />\n                  </button>\n                )}\n              </div>\n            )}\n            {isFullscreen ? (\n              <button className=\"close\" onClick={handleExitFullscreen}>\n                <ExitFullscreen />\n              </button>\n            ) : (\n              <button className=\"close\" onClick={handleClose}>\n                <Cancel />\n              </button>\n            )}\n          </>\n        )}\n        <Spinner modifier={modifier} show={!loadedState} />\n      </div>\n    </div>\n  );\n};\n\nexport default ImageViewer;\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport FramedModal from '../components/FramedModal/FramedModal';\r\nimport ImageGrid from '../components/ImageGrid';\r\nimport ImageNav from '../components/ImageNav';\r\nimport ImageViewer from '../components/ImageViewer';\r\nimport { ModalContext } from '../utils/ModalContext';\r\n\r\nconst ImageGridContainer = ({ data, setBgImage }) => {\r\n  const sortOptions = [\r\n    {\r\n      label: 'Date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      label: 'Popularity',\r\n      key: 'score',\r\n    },\r\n  ];\r\n\r\n  const [imageData, setImageData] = useState([]);\r\n  const [sortOption, setSortOption] = useState(sortOptions[0]);\r\n  const [type, setType] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [showViewer, setShowViewer] = useState(false);\r\n  const [viewerSrc, setViewerSrc] = useState({});\r\n  const [isReverse, setIsReverse] = useState(false);\r\n  const [modal, setModal] = useState({ show: false, component: null, className: '' });\r\n\r\n  const handleSortChange = (option) => {\r\n    if (option.key === sortOption.key) {\r\n      setIsReverse((current) => !current);\r\n    } else {\r\n      setIsReverse(false);\r\n      setSortOption(option);\r\n    }\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleTypeChange = (type) => {\r\n    setType(type);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleSearchChange = (keyword) => {\r\n    setSearchTerm(keyword);\r\n  };\r\n\r\n  const handleImageClick = (image) => {\r\n    setViewerSrc(image);\r\n    setShowViewer(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setViewerSrc({});\r\n    setShowViewer(false);\r\n    setModal({ ...modal, component: null, show: false });\r\n  };\r\n\r\n  const searchData = useCallback(\r\n    (data) => {\r\n      if (searchTerm?.length < 3) {\r\n        return data;\r\n      }\r\n\r\n      const results = data.filter((obj) => {\r\n        return Object.keys(obj).reduce((acc, curr) => {\r\n          return acc || obj[curr].toString().toLowerCase().includes(searchTerm.toLowerCase());\r\n        }, false);\r\n      });\r\n\r\n      return results;\r\n    },\r\n    [searchTerm],\r\n  );\r\n\r\n  const filterImages = useCallback(\r\n    (images) => {\r\n      let results = images;\r\n      const key = sortOption.key;\r\n\r\n      let sortMethod = (a, b) => (a[key] < b[key] ? 1 : b[key] < a[key] ? -1 : 0);\r\n      if (isReverse) {\r\n        sortMethod = (a, b) => (a[key] > b[key] ? 1 : b[key] > a[key] ? -1 : 0);\r\n      }\r\n      results = images.sort(sortMethod);\r\n\r\n      if (type === 'Wide') {\r\n        results = results.filter((item) => item.width >= item.height);\r\n      } else if (type === 'Portrait') {\r\n        results = results.filter((item) => item.width <= item.height);\r\n      }\r\n\r\n      return searchData(results);\r\n    },\r\n    [isReverse, searchData, sortOption, type],\r\n  );\r\n\r\n  const selectPreviousImage = () => {\r\n    const index = imageData.findIndex((e) => e.id === viewerSrc.id);\r\n    if (index - 1 >= 0) {\r\n      setViewerSrc(imageData[index - 1]);\r\n    }\r\n  };\r\n\r\n  const selectNextImage = () => {\r\n    const index = imageData.findIndex((e) => e.id === viewerSrc.id);\r\n    if (index + 1 <= imageData.length) {\r\n      setViewerSrc(imageData[index + 1]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.length) {\r\n      const images = filterImages(data.slice());\r\n\r\n      setImageData(images);\r\n    }\r\n  }, [data, sortOption, type, searchTerm, isReverse, filterImages]);\r\n\r\n  const container = document.querySelector('.image-grid');\r\n\r\n  return (\r\n    <div style={{ margin: '0 auto' }} className=\"home\">\r\n      <ModalContext.Provider value={{ modal, setModal }}>\r\n        <ImageNav\r\n          className={showViewer || modal.show ? 'hidden' : ''}\r\n          options={sortOptions}\r\n          reverseSort={isReverse}\r\n          updateSort={handleSortChange}\r\n          updateType={handleTypeChange}\r\n          updateSearch={handleSearchChange}\r\n        />\r\n        {imageData && container && (\r\n          <ImageGrid\r\n            className=\"image-rows\"\r\n            images={imageData}\r\n            rowTargetHeight={400}\r\n            container={container}\r\n            onClick={handleImageClick}\r\n            borderOffset={7}\r\n          />\r\n        )}\r\n        <ImageViewer\r\n          image={viewerSrc}\r\n          show={showViewer}\r\n          onClose={handleClose}\r\n          data={imageData}\r\n          onPrev={selectPreviousImage}\r\n          onNext={selectNextImage}\r\n          setBgImage={setBgImage}\r\n        />\r\n        <FramedModal\r\n          onClose={handleClose}\r\n          className={modal.className}\r\n          show={modal.show}\r\n          component={modal.component}\r\n        />\r\n      </ModalContext.Provider>\r\n    </div>\r\n  );\r\n};\r\nexport default ImageGridContainer;\r\n","const APIURL = 'https://raw.githubusercontent.com/originalnicodrgitbot/hall-of-framed-db/main/shotsdb.json';\r\nconst axios = require('axios');\r\nexport const getImages = () => axios.get(`${APIURL}`);","import React, { useCallback, useEffect, useState } from 'react';\r\nimport ImageGridContainer from '../src/pages/ImageGridContainer';\r\nimport { getImages } from './api/request';\r\nimport './components/Spinner/Spinner.css';\r\nimport './styles/App.css';\r\nimport './styles/reset.css';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [initialized, setInitialized] = useState(false);\r\n  const [bgImageContainer, setBgImageContainer] = useState(null);\r\n\r\n  const setBackground = useCallback(\r\n    (imageObject) => {\r\n      const bgImage = imageObject.thumbnailUrl;\r\n      bgImageContainer.style.backgroundImage = `url('${bgImage}')`;\r\n    },\r\n    [bgImageContainer],\r\n  );\r\n\r\n  const getNewImages = async () => {\r\n    setInitialized(true);\r\n    const response = await getImages({});\r\n    const entries = Object.entries(response.data._default);\r\n    const shots = [];\r\n\r\n    entries.forEach((item) => {\r\n      const id = item[0];\r\n      const shotData = item[1];\r\n      shots.push({ id, ...shotData });\r\n    });\r\n\r\n    setData(shots);\r\n  };\r\n\r\n  useEffect(() => {\r\n    !initialized && getNewImages();\r\n    data.length && !bgImageContainer && setBgImageContainer(document.querySelector('.bg-blur'));\r\n    if (data.length && bgImageContainer) {\r\n      const randomImageIndex = Math.floor(Math.random() * Math.floor(data.length-1));\r\n      setBackground(data[randomImageIndex]);\r\n    }\r\n  }, [bgImageContainer, data, initialized, setBackground]);\r\n\r\n  return (\r\n    <div className=\"image-grid\">\r\n      {data && <ImageGridContainer data={data} setBgImage={setBackground} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}